{"version":3,"file":"index-BOfpRxA8.js","sources":["../../src/ui/views/MenuView.ts","../../src/ui/views/VerticalKeyView.ts","../../src/ui/views/HorizontalKeyView.ts","../../src/utils/flashcard-loader.ts","../../src/ui/views/FlashcardView.ts","../../src/ui/views/KochView.ts","../../src/ui/views/ListeningView.ts","../../src/utils/download-helper.ts","../../src/router/index.ts","../../src/main.ts"],"sourcesContent":["/**\n * メニュービュー\n */\n\nimport type { View } from '../../router';\n\n/**\n * メニュー項目の定義\n */\ninterface MenuItem {\n\tid: string;\n\ttitle: string;\n\tdescription: string;\n\troute: string;\n}\n\n/**\n * メニュービュークラス\n */\nexport class MenuView implements View {\n\tprivate menuItems: MenuItem[] = [\n\t\t{\n\t\t\tid: 'vertical',\n\t\t\ttitle: '縦振り電鍵練習',\n\t\t\tdescription: '上下に動かす電鍵（ストレートキー）の練習',\n\t\t\troute: 'vertical'\n\t\t},\n\t\t{\n\t\t\tid: 'horizontal',\n\t\t\ttitle: '横振り電鍵練習',\n\t\t\tdescription: '左右に動かす電鍵（パドル）の練習（Iambic A/B対応）',\n\t\t\troute: 'horizontal'\n\t\t},\n\t\t{\n\t\t\tid: 'flashcard',\n\t\t\ttitle: 'CW略語・Q符号',\n\t\t\tdescription: 'CW通信で使用される略語とQ符号を学習',\n\t\t\troute: 'flashcard'\n\t\t},\n\t\t{\n\t\t\tid: 'koch',\n\t\t\ttitle: 'コッホ法トレーニング',\n\t\t\tdescription: '段階的に文字を増やして学習する方式',\n\t\t\troute: 'koch'\n\t\t},\n\t\t{\n\t\t\tid: 'listening',\n\t\t\ttitle: 'モールス信号聞き取り練習',\n\t\t\tdescription: 'ランダムQSOや英文を聞いて練習',\n\t\t\troute: 'listening'\n\t\t}\n\t];\n\n\t/**\n\t * ビューをレンダリングする\n\t */\n\trender(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"menu-header\">\n\t\t\t\t\t<h1>モールス練習アプリ</h1>\n\t\t\t\t\t<p class=\"version\">v10 - Engine/GUI分離版</p>\n\t\t\t\t</header>\n\n\t\t\t\t<main class=\"menu-main\">\n\t\t\t\t\t<div class=\"menu-grid\">\n\t\t\t\t\t\t${this.menuItems.map(item => this.renderMenuItem(item)).join('')}\n\t\t\t\t\t</div>\n\t\t\t\t</main>\n\n\t\t\t\t<footer class=\"menu-footer\">\n\t\t\t\t\t<p>&copy; 2025 モールス練習アプリ</p>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t`;\n\n\t\t//! イベントリスナーを設定。\n\t\tthis.attachEventListeners();\n\t}\n\n\t/**\n\t * メニュー項目を描画する\n\t */\n\tprivate renderMenuItem(item: MenuItem): string {\n\t\treturn `\n\t\t\t<div class=\"menu-item\" data-route=\"${item.route}\">\n\t\t\t\t<h2 class=\"menu-item-title\">${item.title}</h2>\n\t\t\t\t<p class=\"menu-item-description\">${item.description}</p>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\t/**\n\t * イベントリスナーを設定する\n\t */\n\tprivate attachEventListeners(): void {\n\t\tconst menuItems = document.querySelectorAll('.menu-item');\n\t\tmenuItems.forEach(item => {\n\t\t\titem.addEventListener('click', () => {\n\t\t\t\tconst route = item.getAttribute('data-route');\n\t\t\t\tif (route) {\n\t\t\t\t\twindow.location.hash = `#${route}`;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * ビューを破棄する\n\t */\n\tdestroy(): void {\n\t\t//! イベントリスナーは新しいHTMLで上書きされるため、特に処理不要。\n\t}\n}\n","/**\n * 縦振り電鍵練習ビュー\n */\n\nimport type { View } from '../../router';\nimport {\n\tVerticalKeyTrainer,\n\tMorseBuffer,\n\tTimerManager,\n\tTimingCalculator,\n\tAudioGenerator\n} from 'morse-engine';\nimport { SettingsModal, ALL_SETTING_ITEMS, type SettingValues } from 'morse-engine';\n\n/**\n * 縦振り電鍵練習ビュークラス\n */\nexport class VerticalKeyView implements View {\n\tprivate trainer: VerticalKeyTrainer;\n\tprivate buffer: MorseBuffer;\n\tprivate timer: TimerManager;\n\tprivate audio: AudioGenerator;\n\tprivate isKeyPressed = false;\n\tprivate keyPressHandler: ((e: KeyboardEvent) => void) | null = null;\n\tprivate keyReleaseHandler: ((e: KeyboardEvent) => void) | null = null;\n\tprivate updateIntervalId: number | null = null;\n\tprivate currentWPM = 20;\n\tprivate keyCode = 'Space';\n\n\tconstructor() {\n\t\t//! 設定を読み込む。\n\t\tconst savedWPM = localStorage.getItem('verticalKeyWPM');\n\t\tif (savedWPM) {\n\t\t\tthis.currentWPM = parseInt(savedWPM, 10);\n\t\t}\n\n\t\tconst savedKeyCode = localStorage.getItem('verticalKeyCode');\n\t\tif (savedKeyCode) {\n\t\t\tthis.keyCode = savedKeyCode;\n\t\t}\n\n\t\t//! コアコンポーネントを初期化。\n\t\tthis.buffer = new MorseBuffer();\n\t\tthis.timer = new TimerManager();\n\t\tthis.audio = new AudioGenerator({\n\t\t\tfrequency: 700,\n\t\t\tvolume: 0.5,\n\t\t\twpm: this.currentWPM\n\t\t});\n\n\t\t//! タイミング計算。\n\t\tconst timings = TimingCalculator.calculate(this.currentWPM);\n\n\t\t//! トレーナーを初期化（コールバックで音声制御）。\n\t\tthis.trainer = new VerticalKeyTrainer(\n\t\t\tthis.buffer,\n\t\t\tthis.timer,\n\t\t\ttimings,\n\t\t\t{\n\t\t\t\tonKeyPress: () => {\n\t\t\t\t\t//! キー押下時に音を鳴らす。\n\t\t\t\t\tthis.audio.startContinuousTone();\n\t\t\t\t},\n\t\t\t\tonKeyRelease: () => {\n\t\t\t\t\t//! キー解放時に音を止める。\n\t\t\t\t\tthis.audio.stopContinuousTone();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * ビューをレンダリングする\n\t */\n\trender(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"settings-icon\" id=\"settingsIcon\">\n\t\t\t\t<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t<h1>縦振り電鍵練習</h1>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"key-button-container\">\n\t\t\t\t\t<button class=\"key-button\" id=\"morse-key\">\n\t\t\t\t\t\tKEY\n\t\t\t\t\t\t<span class=\"key-label\">(クリック/タップで送信)</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"practice-container\">\n\t\t\t\t\t<div class=\"display-area\">\n\t\t\t\t\t\t<div class=\"display-section\">\n\t\t\t\t\t\t\t<h3>モールス信号</h3>\n\t\t\t\t\t\t\t<div class=\"display-output morse-buffer\" id=\"morse-buffer\">（ここにモールス符号が表示されます）</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"display-section\">\n\t\t\t\t\t\t\t<h3>デコード結果</h3>\n\t\t\t\t\t\t\t<div class=\"display-output\" id=\"decoded-text\">（ここにデコードされた文字が表示されます）</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"action-area\">\n\t\t\t\t\t\t<button class=\"btn btn-large btn-danger\" id=\"clear-btn\">クリア</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"status-area\">\n\t\t\t\t\t\t<div class=\"status-item\">\n\t\t\t\t\t\t\t<span class=\"label\">現在の速度</span>\n\t\t\t\t\t\t\t<span class=\"value\" id=\"current-wpm\">${this.currentWPM}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"status-item\" id=\"key-status\">\n\t\t\t\t\t\t\t<span class=\"label\">キー状態</span>\n\t\t\t\t\t\t\t<span class=\"value\">解放</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"status-item\">\n\t\t\t\t\t\t\t<span class=\"label\">入力文字数</span>\n\t\t\t\t\t\t\t<span class=\"value\" id=\"char-count\">0</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t\t<h3>使い方</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>スペースキーまたは画面のボタンを押している間、モールス信号が送信されます</li>\n\t\t\t\t\t\t\t<li>短く押すと「・」(dit)、長く押すと「ー」(dah)になります</li>\n\t\t\t\t\t\t\t<li>文字間は自動的に判定されます</li>\n\t\t\t\t\t\t\t<li>WPM（Words Per Minute）で速度を調整できます</li>\n\t\t\t\t\t\t\t<li>画面右上の⚙アイコンから音量・周波数・速度を調整できます</li>\n\t\t\t\t\t\t\t<li>音声が鳴らない場合は、一度ボタンをクリックしてください（ブラウザのオーディオポリシー）</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\t//! イベントリスナーを設定。\n\t\tthis.attachEventListeners();\n\t\t//! 定期更新を開始。\n\t\tthis.startUpdate();\n\t}\n\n\t/**\n\t * イベントリスナーを設定する\n\t */\n\tprivate attachEventListeners(): void {\n\t\t//! 戻るボタン。\n\t\tconst backBtn = document.querySelector('.back-btn');\n\t\tbackBtn?.addEventListener('click', () => {\n\t\t\twindow.location.hash = '#menu';\n\t\t});\n\n\t\t//! 設定アイコン。\n\t\tdocument.getElementById('settingsIcon')?.addEventListener('click', () => {\n\t\t\tthis.openSettingsModal();\n\t\t});\n\n\t\t//! クリアボタン。\n\t\tconst clearBtn = document.getElementById('clear-btn');\n\t\tclearBtn?.addEventListener('click', () => {\n\t\t\tthis.trainer.clear();\n\t\t\tthis.updateDisplay();\n\t\t});\n\n\t\t//! キーボードイベント（設定されたキー）。\n\t\tthis.keyPressHandler = (e: KeyboardEvent) => {\n\t\t\tif (e.code === this.keyCode && !e.repeat) {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (!this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyDown();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.keyReleaseHandler = (e: KeyboardEvent) => {\n\t\t\tif (e.code === this.keyCode) {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyUp();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener('keydown', this.keyPressHandler);\n\t\twindow.addEventListener('keyup', this.keyReleaseHandler);\n\n\t\t//! ボタンイベント（マウス/タッチ）。\n\t\tconst keyButton = document.getElementById('morse-key');\n\t\tif (keyButton) {\n\t\t\t//! マウスイベント。\n\t\t\tkeyButton.addEventListener('mousedown', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (!this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyDown();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tkeyButton.addEventListener('mouseup', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyUp();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tkeyButton.addEventListener('mouseleave', () => {\n\t\t\t\tif (this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyUp();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//! タッチイベント。\n\t\t\tkeyButton.addEventListener('touchstart', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (!this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyDown();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tkeyButton.addEventListener('touchend', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyUp();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tkeyButton.addEventListener('touchcancel', () => {\n\t\t\t\tif (this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyUp();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * キー押下処理\n\t */\n\tprivate handleKeyDown(): void {\n\t\tthis.isKeyPressed = true;\n\t\tthis.trainer.keyPress();\n\t\tthis.updateKeyStatus(true);\n\n\t\t//! ボタンの見た目を更新。\n\t\tconst keyButton = document.getElementById('morse-key');\n\t\tif (keyButton) {\n\t\t\tkeyButton.classList.add('pressed');\n\t\t}\n\t}\n\n\t/**\n\t * キー解放処理\n\t */\n\tprivate handleKeyUp(): void {\n\t\tthis.isKeyPressed = false;\n\t\tthis.trainer.keyRelease();\n\t\tthis.updateKeyStatus(false);\n\n\t\t//! ボタンの見た目を更新。\n\t\tconst keyButton = document.getElementById('morse-key');\n\t\tif (keyButton) {\n\t\t\tkeyButton.classList.remove('pressed');\n\t\t}\n\t}\n\n\t/**\n\t * 定期更新を開始する\n\t */\n\tprivate startUpdate(): void {\n\t\t//! 100msごとに画面を更新。\n\t\tthis.updateIntervalId = window.setInterval(() => {\n\t\t\tthis.updateDisplay();\n\t\t}, 100);\n\t}\n\n\t/**\n\t * 表示を更新する\n\t */\n\tprivate updateDisplay(): void {\n\t\tconst morseBuffer = document.getElementById('morse-buffer');\n\t\tconst decodedText = document.getElementById('decoded-text');\n\t\tconst charCount = document.getElementById('char-count');\n\n\t\tif (morseBuffer) {\n\t\t\tconst buffer = this.trainer.getBuffer();\n\t\t\tconst sequence = this.trainer.getSequence();\n\t\t\tconst fullDisplay = sequence ? `${buffer} ${sequence}` : buffer;\n\t\t\tmorseBuffer.textContent = fullDisplay || '（ここにモールス符号が表示されます）';\n\t\t}\n\n\t\tif (decodedText) {\n\t\t\tconst text = this.trainer.getDecoded();\n\t\t\tdecodedText.textContent = text || '（ここにデコードされた文字が表示されます）';\n\t\t}\n\n\t\tif (charCount) {\n\t\t\tconst text = this.trainer.getDecoded();\n\t\t\tcharCount.textContent = text.length.toString();\n\t\t}\n\t}\n\n\t/**\n\t * キー状態表示を更新する\n\t */\n\tprivate updateKeyStatus(isPressed: boolean): void {\n\t\tconst keyStatus = document.getElementById('key-status');\n\t\tif (keyStatus) {\n\t\t\tconst valueSpan = keyStatus.querySelector('.value');\n\t\t\tif (valueSpan) {\n\t\t\t\tvalueSpan.textContent = isPressed ? '押下中' : '解放';\n\t\t\t}\n\t\t\tif (isPressed) {\n\t\t\t\tkeyStatus.classList.add('active');\n\t\t\t} else {\n\t\t\t\tkeyStatus.classList.remove('active');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * 設定モーダルを開く\n\t */\n\tprivate openSettingsModal(): void {\n\t\t//! 現在の設定値を取得。\n\t\tconst currentValues: SettingValues = {\n\t\t\tvolume: Math.round(this.audio.getVolume() * 100),\n\t\t\tfrequency: this.audio.getFrequency(),\n\t\t\twpm: this.currentWPM,\n\t\t\tkeyCode: this.keyCode\n\t\t};\n\n\t\t//! 設定変更前の値を保存（キャンセル時の復元用）。\n\t\tconst savedSettings = {\n\t\t\tvolume: this.audio.getVolume(),\n\t\t\tfrequency: this.audio.getFrequency(),\n\t\t\twpm: this.currentWPM,\n\t\t\tkeyCode: this.keyCode\n\t\t};\n\n\t\t//! SettingsModalを作成。\n\t\tconst modal = new SettingsModal(\n\t\t\t'vertical-key-settings-modal',\n\t\t\tALL_SETTING_ITEMS,\n\t\t\tcurrentValues,\n\t\t\t{\n\t\t\t\tonSave: (values: SettingValues) => {\n\t\t\t\t\t//! 設定を保存。\n\t\t\t\t\tthis.audio.setVolume((values.volume as number) / 100);\n\t\t\t\t\tthis.audio.setFrequency(values.frequency as number);\n\t\t\t\t\tthis.audio.setWPM(values.wpm as number);\n\t\t\t\t\tthis.currentWPM = values.wpm as number;\n\t\t\t\t\tthis.keyCode = values.keyCode as string;\n\n\t\t\t\t\t//! localStorageに保存。\n\t\t\t\t\tlocalStorage.setItem('verticalKeyWPM', this.currentWPM.toString());\n\t\t\t\t\tlocalStorage.setItem('verticalKeyCode', this.keyCode);\n\n\t\t\t\t\t//! タイミングを再計算してトレーナーを再初期化。\n\t\t\t\t\tconst timings = TimingCalculator.calculate(this.currentWPM);\n\t\t\t\t\tthis.trainer = new VerticalKeyTrainer(\n\t\t\t\t\t\tthis.buffer,\n\t\t\t\t\t\tthis.timer,\n\t\t\t\t\t\ttimings,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tonKeyPress: () => {\n\t\t\t\t\t\t\t\tthis.audio.startContinuousTone();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonKeyRelease: () => {\n\t\t\t\t\t\t\t\tthis.audio.stopContinuousTone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\t//! 現在のWPM表示を更新。\n\t\t\t\t\tconst currentWpmDisplay = document.getElementById('current-wpm');\n\t\t\t\t\tif (currentWpmDisplay) currentWpmDisplay.textContent = this.currentWPM.toString();\n\t\t\t\t},\n\t\t\t\tonCancel: () => {\n\t\t\t\t\t//! 設定を元に戻す。\n\t\t\t\t\tthis.audio.setVolume(savedSettings.volume);\n\t\t\t\t\tthis.audio.setFrequency(savedSettings.frequency);\n\t\t\t\t\tthis.audio.setWPM(savedSettings.wpm);\n\t\t\t\t\tthis.currentWPM = savedSettings.wpm;\n\t\t\t\t\tthis.keyCode = savedSettings.keyCode;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t//! モーダルを表示。\n\t\tmodal.show('vertical-key');\n\t}\n\n\t/**\n\t * ビューを破棄する\n\t */\n\tdestroy(): void {\n\t\t//! イベントリスナーを削除。\n\t\tif (this.keyPressHandler) {\n\t\t\twindow.removeEventListener('keydown', this.keyPressHandler);\n\t\t\tthis.keyPressHandler = null;\n\t\t}\n\t\tif (this.keyReleaseHandler) {\n\t\t\twindow.removeEventListener('keyup', this.keyReleaseHandler);\n\t\t\tthis.keyReleaseHandler = null;\n\t\t}\n\n\t\t//! 定期更新を停止。\n\t\tif (this.updateIntervalId !== null) {\n\t\t\tclearInterval(this.updateIntervalId);\n\t\t\tthis.updateIntervalId = null;\n\t\t}\n\n\t\t//! 音声を停止。\n\t\tthis.audio.stopContinuousTone();\n\n\t\t//! トレーナーをクリア。\n\t\tthis.trainer.clear();\n\t}\n}\n","/**\n * 横振り電鍵練習ビュー\n */\n\nimport type { View } from '../../router';\nimport {\n\tHorizontalKeyTrainer,\n\tMorseBuffer,\n\tTimerManager,\n\tTimingCalculator,\n\tAudioGenerator,\n\ttype IambicMode,\n\ttype PaddleLayout\n} from 'morse-engine';\nimport { SettingsModal, ALL_SETTING_ITEMS, type SettingValues } from 'morse-engine';\n\n/**\n * 横振り電鍵練習ビュークラス\n */\nexport class HorizontalKeyView implements View {\n\tprivate trainer!: HorizontalKeyTrainer;\n\tprivate buffer: MorseBuffer;\n\tprivate timer: TimerManager;\n\tprivate audio: AudioGenerator;\n\tprivate leftPressed = false;\n\tprivate rightPressed = false;\n\tprivate updateIntervalId: number | null = null;\n\tprivate currentWPM = 20;\n\tprivate iambicMode: IambicMode = 'B';\n\tprivate paddleLayout: PaddleLayout = 'normal';\n\tprivate leftKeyCode = 'KeyJ';\n\tprivate rightKeyCode = 'KeyK';\n\n\t// イベントハンドラーの参照を保持\n\tprivate keyPressHandler: ((e: KeyboardEvent) => void) | null = null;\n\tprivate keyReleaseHandler: ((e: KeyboardEvent) => void) | null = null;\n\n\tconstructor() {\n\t\t//! 設定を読み込む。\n\t\tconst savedWPM = localStorage.getItem('horizontalKeyWPM');\n\t\tif (savedWPM) {\n\t\t\tthis.currentWPM = parseInt(savedWPM, 10);\n\t\t}\n\n\t\tconst savedIambicMode = localStorage.getItem('horizontalKeyIambicMode');\n\t\tif (savedIambicMode === 'A' || savedIambicMode === 'B') {\n\t\t\tthis.iambicMode = savedIambicMode;\n\t\t}\n\n\t\tconst savedPaddleLayout = localStorage.getItem('horizontalKeyPaddleLayout');\n\t\tif (savedPaddleLayout === 'normal' || savedPaddleLayout === 'reversed') {\n\t\t\tthis.paddleLayout = savedPaddleLayout;\n\t\t}\n\n\t\tconst savedLeftKeyCode = localStorage.getItem('horizontalKeyLeftCode');\n\t\tif (savedLeftKeyCode) {\n\t\t\tthis.leftKeyCode = savedLeftKeyCode;\n\t\t}\n\n\t\tconst savedRightKeyCode = localStorage.getItem('horizontalKeyRightCode');\n\t\tif (savedRightKeyCode) {\n\t\t\tthis.rightKeyCode = savedRightKeyCode;\n\t\t}\n\n\t\t//! コアコンポーネントを初期化。\n\t\tthis.buffer = new MorseBuffer();\n\t\tthis.timer = new TimerManager();\n\t\tthis.audio = new AudioGenerator({\n\t\t\tfrequency: 700,\n\t\t\tvolume: 0.5,\n\t\t\twpm: this.currentWPM\n\t\t});\n\n\t\t//! トレーナーを初期化。\n\t\tthis.initializeTrainer();\n\t}\n\n\t/**\n\t * トレーナーを初期化する\n\t */\n\tprivate initializeTrainer(): void {\n\t\tconst timings = TimingCalculator.calculate(this.currentWPM);\n\n\t\tthis.trainer = new HorizontalKeyTrainer(\n\t\t\tthis.buffer,\n\t\t\tthis.timer,\n\t\t\ttimings,\n\t\t\t{\n\t\t\t\tonElementStart: (_element: '.' | '-', duration: number) => {\n\t\t\t\t\t//! 要素送信開始時に指定時間だけ音を鳴らす。\n\t\t\t\t\t// scheduleToneに0を渡すと現在時刻から再生される\n\t\t\t\t\tthis.audio.scheduleTone(0, duration);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tiambicMode: this.iambicMode,\n\t\t\t\tpaddleLayout: this.paddleLayout\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * ビューをレンダリングする\n\t */\n\trender(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"settings-icon\" id=\"settingsIcon\">\n\t\t\t\t<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t<h1>横振り電鍵練習</h1>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"paddle-container\">\n\t\t\t\t\t<button class=\"paddle-button dit\" id=\"left-paddle\">\n\t\t\t\t\t\tDIT\n\t\t\t\t\t\t<span class=\"paddle-label\">(短点)</span>\n\t\t\t\t\t\t<span class=\"paddle-key\">J キー</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button class=\"paddle-button dah\" id=\"right-paddle\">\n\t\t\t\t\t\tDAH\n\t\t\t\t\t\t<span class=\"paddle-label\">(長点)</span>\n\t\t\t\t\t\t<span class=\"paddle-key\">K キー</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"practice-container\">\n\t\t\t\t\t<div class=\"display-area\">\n\t\t\t\t\t\t<div class=\"display-section\">\n\t\t\t\t\t\t\t<h3>モールス信号</h3>\n\t\t\t\t\t\t\t<div class=\"display-output morse-buffer\" id=\"morse-buffer\">（ここにモールス符号が表示されます）</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"display-section\">\n\t\t\t\t\t\t\t<h3>デコード結果</h3>\n\t\t\t\t\t\t\t<div class=\"display-output\" id=\"decoded-text\">（ここにデコードされた文字が表示されます）</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"action-area\">\n\t\t\t\t\t\t<button class=\"btn btn-large btn-danger\" id=\"clear-btn\">クリア</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"status-area\">\n\t\t\t\t\t\t<div class=\"status-item\">\n\t\t\t\t\t\t\t<span class=\"label\">現在の速度</span>\n\t\t\t\t\t\t\t<span class=\"value\" id=\"current-wpm\">${this.currentWPM}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"status-item\">\n\t\t\t\t\t\t\t<span class=\"label\">Iambicモード</span>\n\t\t\t\t\t\t\t<span class=\"value\" id=\"current-iambic-mode\">${this.iambicMode}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"status-item\">\n\t\t\t\t\t\t\t<span class=\"label\">入力文字数</span>\n\t\t\t\t\t\t\t<span class=\"value\" id=\"char-count\">0</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t\t<h3>使い方</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>左パドル（J）: 短点（・）/ 右パドル（K）: 長点（ー）</li>\n\t\t\t\t\t\t\t<li>両方同時押しで自動交互送信（Iambic）</li>\n\t\t\t\t\t\t\t<li>Iambic Bモード: スクイーズ後1要素追加送信</li>\n\t\t\t\t\t\t\t<li>画面右上の⚙アイコンから設定（WPM、Iambicモード、パドルレイアウト、音量・周波数）を変更できます</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\t//! イベントリスナーを設定。\n\t\tthis.attachEventListeners();\n\t\t//! 定期更新を開始。\n\t\tthis.startUpdate();\n\t}\n\n\t/**\n\t * イベントリスナーを設定する\n\t */\n\tprivate attachEventListeners(): void {\n\t\t//! 戻るボタン。\n\t\tconst backBtn = document.querySelector('.back-btn');\n\t\tbackBtn?.addEventListener('click', () => {\n\t\t\twindow.location.hash = '#menu';\n\t\t});\n\n\t\t//! 設定アイコン。\n\t\tdocument.getElementById('settingsIcon')?.addEventListener('click', () => {\n\t\t\tthis.openSettingsModal();\n\t\t});\n\n\t\t//! クリアボタン。\n\t\tconst clearBtn = document.getElementById('clear-btn');\n\t\tclearBtn?.addEventListener('click', () => {\n\t\t\tthis.trainer.clear();\n\t\t\tthis.updateDisplay();\n\t\t});\n\n\t\t//! キーボードイベント（設定されたキー）。\n\t\tthis.keyPressHandler = (e: KeyboardEvent) => {\n\t\t\tif (e.repeat) return;\n\n\t\t\tif (e.code === this.leftKeyCode) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleLeftPaddlePress();\n\t\t\t} else if (e.code === this.rightKeyCode) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleRightPaddlePress();\n\t\t\t}\n\t\t};\n\n\t\tthis.keyReleaseHandler = (e: KeyboardEvent) => {\n\t\t\tif (e.code === this.leftKeyCode) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleLeftPaddleRelease();\n\t\t\t} else if (e.code === this.rightKeyCode) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleRightPaddleRelease();\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener('keydown', this.keyPressHandler);\n\t\twindow.addEventListener('keyup', this.keyReleaseHandler);\n\n\t\t//! ボタンイベント（左パドル）。\n\t\tconst leftPaddle = document.getElementById('left-paddle');\n\t\tif (leftPaddle) {\n\t\t\tleftPaddle.addEventListener('mousedown', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleLeftPaddlePress();\n\t\t\t});\n\t\t\tleftPaddle.addEventListener('mouseup', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleLeftPaddleRelease();\n\t\t\t});\n\t\t\tleftPaddle.addEventListener('mouseleave', () => {\n\t\t\t\tif (this.leftPressed) this.handleLeftPaddleRelease();\n\t\t\t});\n\t\t\tleftPaddle.addEventListener('touchstart', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleLeftPaddlePress();\n\t\t\t});\n\t\t\tleftPaddle.addEventListener('touchend', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleLeftPaddleRelease();\n\t\t\t});\n\t\t\tleftPaddle.addEventListener('touchcancel', () => {\n\t\t\t\tif (this.leftPressed) this.handleLeftPaddleRelease();\n\t\t\t});\n\t\t}\n\n\t\t//! ボタンイベント（右パドル）。\n\t\tconst rightPaddle = document.getElementById('right-paddle');\n\t\tif (rightPaddle) {\n\t\t\trightPaddle.addEventListener('mousedown', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleRightPaddlePress();\n\t\t\t});\n\t\t\trightPaddle.addEventListener('mouseup', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleRightPaddleRelease();\n\t\t\t});\n\t\t\trightPaddle.addEventListener('mouseleave', () => {\n\t\t\t\tif (this.rightPressed) this.handleRightPaddleRelease();\n\t\t\t});\n\t\t\trightPaddle.addEventListener('touchstart', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleRightPaddlePress();\n\t\t\t});\n\t\t\trightPaddle.addEventListener('touchend', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleRightPaddleRelease();\n\t\t\t});\n\t\t\trightPaddle.addEventListener('touchcancel', () => {\n\t\t\t\tif (this.rightPressed) this.handleRightPaddleRelease();\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * 左パドル押下処理\n\t */\n\tprivate handleLeftPaddlePress(): void {\n\t\tif (this.leftPressed) return;\n\t\tthis.leftPressed = true;\n\t\tthis.trainer.leftPaddlePress();\n\n\t\tconst leftPaddle = document.getElementById('left-paddle');\n\t\tif (leftPaddle) leftPaddle.classList.add('pressed');\n\t}\n\n\t/**\n\t * 左パドル解放処理\n\t */\n\tprivate handleLeftPaddleRelease(): void {\n\t\tif (!this.leftPressed) return;\n\t\tthis.leftPressed = false;\n\t\tthis.trainer.leftPaddleRelease();\n\n\t\tconst leftPaddle = document.getElementById('left-paddle');\n\t\tif (leftPaddle) leftPaddle.classList.remove('pressed');\n\t}\n\n\t/**\n\t * 右パドル押下処理\n\t */\n\tprivate handleRightPaddlePress(): void {\n\t\tif (this.rightPressed) return;\n\t\tthis.rightPressed = true;\n\t\tthis.trainer.rightPaddlePress();\n\n\t\tconst rightPaddle = document.getElementById('right-paddle');\n\t\tif (rightPaddle) rightPaddle.classList.add('pressed');\n\t}\n\n\t/**\n\t * 右パドル解放処理\n\t */\n\tprivate handleRightPaddleRelease(): void {\n\t\tif (!this.rightPressed) return;\n\t\tthis.rightPressed = false;\n\t\tthis.trainer.rightPaddleRelease();\n\n\t\tconst rightPaddle = document.getElementById('right-paddle');\n\t\tif (rightPaddle) rightPaddle.classList.remove('pressed');\n\t}\n\n\t/**\n\t * パドルラベルを更新する\n\t */\n\tprivate updatePaddleLabels(): void {\n\t\tconst leftPaddle = document.getElementById('left-paddle');\n\t\tconst rightPaddle = document.getElementById('right-paddle');\n\n\t\tif (this.paddleLayout === 'normal') {\n\t\t\tif (leftPaddle) {\n\t\t\t\tleftPaddle.className = 'paddle-button dit';\n\t\t\t\tleftPaddle.innerHTML = `\n\t\t\t\t\tDIT\n\t\t\t\t\t<span class=\"paddle-label\">(短点)</span>\n\t\t\t\t\t<span class=\"paddle-key\">J キー</span>\n\t\t\t\t`;\n\t\t\t}\n\t\t\tif (rightPaddle) {\n\t\t\t\trightPaddle.className = 'paddle-button dah';\n\t\t\t\trightPaddle.innerHTML = `\n\t\t\t\t\tDAH\n\t\t\t\t\t<span class=\"paddle-label\">(長点)</span>\n\t\t\t\t\t<span class=\"paddle-key\">K キー</span>\n\t\t\t\t`;\n\t\t\t}\n\t\t} else {\n\t\t\tif (leftPaddle) {\n\t\t\t\tleftPaddle.className = 'paddle-button dah';\n\t\t\t\tleftPaddle.innerHTML = `\n\t\t\t\t\tDAH\n\t\t\t\t\t<span class=\"paddle-label\">(長点)</span>\n\t\t\t\t\t<span class=\"paddle-key\">J キー</span>\n\t\t\t\t`;\n\t\t\t}\n\t\t\tif (rightPaddle) {\n\t\t\t\trightPaddle.className = 'paddle-button dit';\n\t\t\t\trightPaddle.innerHTML = `\n\t\t\t\t\tDIT\n\t\t\t\t\t<span class=\"paddle-label\">(短点)</span>\n\t\t\t\t\t<span class=\"paddle-key\">K キー</span>\n\t\t\t\t`;\n\t\t\t}\n\t\t}\n\n\t\t//! イベントリスナーを再設定。\n\t\tthis.attachEventListeners();\n\t}\n\n\t/**\n\t * 定期更新を開始する\n\t */\n\tprivate startUpdate(): void {\n\t\t//! 100msごとに画面を更新。\n\t\tthis.updateIntervalId = window.setInterval(() => {\n\t\t\tthis.updateDisplay();\n\t\t}, 100);\n\t}\n\n\t/**\n\t * 表示を更新する\n\t */\n\tprivate updateDisplay(): void {\n\t\tconst morseBuffer = document.getElementById('morse-buffer');\n\t\tconst decodedText = document.getElementById('decoded-text');\n\t\tconst charCount = document.getElementById('char-count');\n\n\t\tif (morseBuffer) {\n\t\t\tconst buffer = this.trainer.getBuffer();\n\t\t\tconst sequence = this.trainer.getSequence();\n\t\t\tconst fullDisplay = sequence ? `${buffer} ${sequence}` : buffer;\n\t\t\tmorseBuffer.textContent = fullDisplay || '（ここにモールス符号が表示されます）';\n\t\t}\n\n\t\tif (decodedText) {\n\t\t\tconst text = this.trainer.getDecoded();\n\t\t\tdecodedText.textContent = text || '（ここにデコードされた文字が表示されます）';\n\t\t}\n\n\t\tif (charCount) {\n\t\t\tconst text = this.trainer.getDecoded();\n\t\t\tcharCount.textContent = text.length.toString();\n\t\t}\n\t}\n\n\t/**\n\t * 設定モーダルを開く\n\t */\n\tprivate openSettingsModal(): void {\n\t\t//! 現在の設定値を取得。\n\t\tconst currentValues: SettingValues = {\n\t\t\tvolume: Math.round(this.audio.getVolume() * 100),\n\t\t\tfrequency: this.audio.getFrequency(),\n\t\t\twpm: this.currentWPM,\n\t\t\tiambicMode: this.iambicMode,\n\t\t\tpaddleLayout: this.paddleLayout,\n\t\t\tleftKeyCode: this.leftKeyCode,\n\t\t\trightKeyCode: this.rightKeyCode\n\t\t};\n\n\t\t//! 設定変更前の値を保存（キャンセル時の復元用）。\n\t\tconst savedSettings = {\n\t\t\tvolume: this.audio.getVolume(),\n\t\t\tfrequency: this.audio.getFrequency(),\n\t\t\twpm: this.currentWPM,\n\t\t\tiambicMode: this.iambicMode,\n\t\t\tpaddleLayout: this.paddleLayout,\n\t\t\tleftKeyCode: this.leftKeyCode,\n\t\t\trightKeyCode: this.rightKeyCode\n\t\t};\n\n\t\t//! SettingsModalを作成。\n\t\tconst modal = new SettingsModal(\n\t\t\t'horizontal-key-settings-modal',\n\t\t\tALL_SETTING_ITEMS,\n\t\t\tcurrentValues,\n\t\t\t{\n\t\t\t\tonSave: (values: SettingValues) => {\n\t\t\t\t\t//! 設定を保存。\n\t\t\t\t\tthis.audio.setVolume((values.volume as number) / 100);\n\t\t\t\t\tthis.audio.setFrequency(values.frequency as number);\n\t\t\t\t\tthis.audio.setWPM(values.wpm as number);\n\t\t\t\t\tthis.currentWPM = values.wpm as number;\n\t\t\t\t\tthis.iambicMode = values.iambicMode as IambicMode;\n\t\t\t\t\tthis.paddleLayout = values.paddleLayout as PaddleLayout;\n\t\t\t\t\tthis.leftKeyCode = values.leftKeyCode as string;\n\t\t\t\t\tthis.rightKeyCode = values.rightKeyCode as string;\n\n\t\t\t\t\t//! localStorageに保存。\n\t\t\t\t\tlocalStorage.setItem('horizontalKeyWPM', this.currentWPM.toString());\n\t\t\t\t\tlocalStorage.setItem('horizontalKeyIambicMode', this.iambicMode);\n\t\t\t\t\tlocalStorage.setItem('horizontalKeyPaddleLayout', this.paddleLayout);\n\t\t\t\t\tlocalStorage.setItem('horizontalKeyLeftCode', this.leftKeyCode);\n\t\t\t\t\tlocalStorage.setItem('horizontalKeyRightCode', this.rightKeyCode);\n\n\t\t\t\t\t//! 現在のWPM表示を更新。\n\t\t\t\t\tconst currentWpmDisplay = document.getElementById('current-wpm');\n\t\t\t\t\tif (currentWpmDisplay) currentWpmDisplay.textContent = this.currentWPM.toString();\n\n\t\t\t\t\t//! 現在のIambicモード表示を更新。\n\t\t\t\t\tconst currentIambicModeDisplay = document.getElementById('current-iambic-mode');\n\t\t\t\t\tif (currentIambicModeDisplay) currentIambicModeDisplay.textContent = this.iambicMode;\n\n\t\t\t\t\t//! パドルレイアウトに応じてラベルを更新。\n\t\t\t\t\tthis.updatePaddleLabels();\n\n\t\t\t\t\t//! トレーナーを再初期化。\n\t\t\t\t\tthis.initializeTrainer();\n\t\t\t\t},\n\t\t\t\tonCancel: () => {\n\t\t\t\t\t//! 設定を元に戻す。\n\t\t\t\t\tthis.audio.setVolume(savedSettings.volume);\n\t\t\t\t\tthis.audio.setFrequency(savedSettings.frequency);\n\t\t\t\t\tthis.audio.setWPM(savedSettings.wpm);\n\t\t\t\t\tthis.currentWPM = savedSettings.wpm;\n\t\t\t\t\tthis.iambicMode = savedSettings.iambicMode;\n\t\t\t\t\tthis.paddleLayout = savedSettings.paddleLayout;\n\t\t\t\t\tthis.leftKeyCode = savedSettings.leftKeyCode;\n\t\t\t\t\tthis.rightKeyCode = savedSettings.rightKeyCode;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t//! モーダルを表示。\n\t\tmodal.show('horizontal-key');\n\t}\n\n\t/**\n\t * ビューを破棄する\n\t */\n\tdestroy(): void {\n\t\t//! イベントリスナーを削除。\n\t\tif (this.keyPressHandler) {\n\t\t\twindow.removeEventListener('keydown', this.keyPressHandler);\n\t\t\tthis.keyPressHandler = null;\n\t\t}\n\t\tif (this.keyReleaseHandler) {\n\t\t\twindow.removeEventListener('keyup', this.keyReleaseHandler);\n\t\t\tthis.keyReleaseHandler = null;\n\t\t}\n\n\t\t//! 定期更新を停止。\n\t\tif (this.updateIntervalId !== null) {\n\t\t\tclearInterval(this.updateIntervalId);\n\t\t\tthis.updateIntervalId = null;\n\t\t}\n\n\t\t//! トレーナーをクリア。\n\t\tthis.trainer.clear();\n\t}\n}\n","/**\n * フラッシュカードTSVローダー\n */\n\nimport type { FlashcardEntry } from 'morse-engine';\n\n/**\n * TSVファイルからフラッシュカードデータをロードする\n * @param url - TSVファイルのURL\n * @returns FlashcardEntryの配列\n */\nexport async function loadFlashcardData(url: string): Promise<FlashcardEntry[]> {\n\t//! TSVファイルを取得。\n\tconst response = await fetch(url);\n\tif (!response.ok) {\n\t\tthrow new Error(`Failed to load flashcard data: ${response.statusText}`);\n\t}\n\n\tconst text = await response.text();\n\treturn parseTSV(text);\n}\n\n/**\n * TSVテキストをパースしてFlashcardEntry配列に変換する\n * @param text - TSVテキスト\n * @returns FlashcardEntryの配列\n */\nfunction parseTSV(text: string): FlashcardEntry[] {\n\t//! 行に分割。\n\tconst lines = text.split('\\n').filter(line => line.trim());\n\tif (lines.length === 0) return [];\n\n\t//! 先頭行はヘッダーなのでスキップ。\n\tconst dataLines = lines.slice(1);\n\n\treturn dataLines.map((line, index) => {\n\t\t//! タブで分割。\n\t\tconst columns = line.split('\\t');\n\n\t\t//! 最低限6列（タグ、頻度、略語、英文、和訳、説明）必要。\n\t\tif (columns.length < 6) {\n\t\t\tconsole.warn(`Line ${index + 2} has insufficient columns, skipping`);\n\t\t\treturn null;\n\t\t}\n\n\t\tconst entry: FlashcardEntry = {\n\t\t\ttags: columns[0].trim(),\n\t\t\tfrequency: parseInt(columns[1].trim(), 10) || 1,\n\t\t\tabbreviation: columns[2].trim(),\n\t\t\tenglish: columns[3].trim(),\n\t\t\tjapanese: columns[4].trim(),\n\t\t\tdescription: columns[5]?.trim(),\n\t\t\texample: columns[6]?.trim()\n\t\t};\n\n\t\treturn entry;\n\t}).filter((entry): entry is FlashcardEntry => entry !== null);\n}\n","/**\n * フラッシュカードビュー\n * CW略語・Q符号学習\n */\n\nimport type { View } from '../../router';\nimport {\n\tFlashcardTrainer,\n\tFlashcardState,\n\tAudioGenerator,\n\tMorseCodec,\n\ttype FlashcardEntry,\n\ttype ExamQuestion,\n\ttype ExamResult,\n\ttype QuestionType,\n\ttype LearnQuestionType,\n\ttype Progress,\n\ttype SortColumn,\n\ttype SortDirection,\n\ttype DisplayMode\n} from 'morse-engine';\nimport { loadFlashcardData } from '../../utils/flashcard-loader';\nimport { SettingsModal, ALL_SETTING_ITEMS, type SettingValues } from 'morse-engine';\n\n/**\n * 画面状態（ローディングと結果表示用）\n */\ntype ViewState = 'loading' | 'browse' | 'learn' | 'exam' | 'exam-result';\n\n/**\n * フラッシュカードビュークラス\n */\nexport class FlashcardView implements View {\n\tprivate allEntries: FlashcardEntry[] = [];\n\tprivate filteredEntries: FlashcardEntry[] = [];\n\tprivate currentState: ViewState = 'loading';\n\n\t// フィルター関連\n\tprivate selectedTags: Set<string> = new Set();\n\tprivate selectedFrequencies: Set<number> = new Set([5]);\n\tprivate searchQuery = '';\n\n\t// 一覧表示関連\n\tprivate displayMode: DisplayMode = 'card';\n\tprivate sortColumn: SortColumn = 'abbreviation';\n\tprivate sortDirection: SortDirection = 'asc';\n\n\t// 学習モード関連\n\tprivate learnQuestionType: LearnQuestionType = 'abbr-to-meaning';\n\tprivate learnCards: FlashcardEntry[] = [];\n\tprivate currentLearnIndex = 0;\n\tprivate isFlipped = false;\n\tprivate reviewMode = false;\n\tprivate progress: Progress = {\n\t\tknown: new Set(),\n\t\tunknown: new Set()\n\t};\n\n\t// 試験関連\n\tprivate questionType: QuestionType = 'abbr-to-meaning';\n\tprivate questionCount: number | 'all' = 10;\n\tprivate questions: ExamQuestion[] = [];\n\tprivate currentQuestionIndex = 0;\n\tprivate results: ExamResult[] = [];\n\n\t// 音声関連\n\tprivate audio: AudioGenerator;\n\tprivate currentlyPlaying: string | null = null;\n\n\tconstructor() {\n\t\tthis.audio = new AudioGenerator({\n\t\t\tfrequency: 700,\n\t\t\tvolume: 0.5,\n\t\t\twpm: 20\n\t\t});\n\t\t//! ライブラリから状態を読み込む。\n\t\tthis.progress = FlashcardState.loadProgress();\n\t\tconst filters = FlashcardState.loadFilters();\n\t\tthis.selectedTags = filters.selectedTags;\n\t\tthis.selectedFrequencies = filters.selectedFrequencies;\n\t\tthis.searchQuery = filters.searchQuery;\n\n\t\tconst viewState = FlashcardState.loadViewState();\n\t\tthis.displayMode = viewState.displayMode;\n\t\tthis.sortColumn = viewState.sortColumn;\n\t\tthis.sortDirection = viewState.sortDirection;\n\t\tthis.learnQuestionType = viewState.learnQuestionType;\n\t\tthis.questionType = viewState.examQuestionType as QuestionType;\n\t}\n\n\t/**\n\t * 進捗データを保存する\n\t */\n\tprivate saveProgress(): void {\n\t\tFlashcardState.saveProgress(this.progress);\n\t}\n\n\t/**\n\t * 進捗データをクリアする\n\t */\n\tprivate clearProgress(): void {\n\t\tthis.progress = { known: new Set(), unknown: new Set() };\n\t\tFlashcardState.clearProgress();\n\t}\n\n\t/**\n\t * フィルター状態を保存する\n\t */\n\tprivate saveFilters(): void {\n\t\tFlashcardState.saveFilters({\n\t\t\tselectedTags: this.selectedTags,\n\t\t\tselectedFrequencies: this.selectedFrequencies,\n\t\t\tsearchQuery: this.searchQuery\n\t\t});\n\t}\n\n\tasync render(): Promise<void> {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tif (this.currentState === 'loading') {\n\t\t\t//! ローディング画面を表示。\n\t\t\tapp.innerHTML = `\n\t\t\t\t<div class=\"container\">\n\t\t\t\t\t<header class=\"header\">\n\t\t\t\t\t\t<h1>CW略語・Q符号学習</h1>\n\t\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t</header>\n\t\t\t\t\t<div class=\"loading-container\">\n\t\t\t\t\t\t<p>フラッシュカードデータを読み込み中...</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tconst backBtn = document.querySelector('.back-btn');\n\t\t\tbackBtn?.addEventListener('click', () => {\n\t\t\t\twindow.location.hash = '#menu';\n\t\t\t});\n\n\t\t\t//! データをロード。\n\t\t\ttry {\n\t\t\t\tthis.allEntries = await loadFlashcardData('/flashcard.tsv');\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\t//! データロード完了後、保存されていたviewModeを復元。\n\t\t\t\tconst viewState = FlashcardState.loadViewState();\n\t\t\t\tthis.currentState = viewState.viewMode;\n\t\t\t\tthis.render();\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Failed to load flashcard data:', error);\n\t\t\t\tapp.innerHTML = `\n\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t<header class=\"header\">\n\t\t\t\t\t\t\t<h1>CW略語・Q符号学習</h1>\n\t\t\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<div class=\"error-container\">\n\t\t\t\t\t\t\t<p>データの読み込みに失敗しました。</p>\n\t\t\t\t\t\t\t<p>エラー: ${error}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t`;\n\t\t\t}\n\t\t} else if (this.currentState === 'browse') {\n\t\t\tthis.renderBrowseMode();\n\t\t} else if (this.currentState === 'learn') {\n\t\t\tthis.renderLearnMode();\n\t\t} else if (this.currentState === 'exam') {\n\t\t\tthis.renderExamMode();\n\t\t} else if (this.currentState === 'exam-result') {\n\t\t\tthis.renderExamResultMode();\n\t\t}\n\t}\n\n\t/**\n\t * 共通のフィルターセクションHTMLを生成\n\t */\n\tprivate renderFilterSection(): string {\n\t\tconst allTags = FlashcardTrainer.getAllTags(this.allEntries);\n\n\t\treturn `\n\t\t\t<div class=\"filter-section\">\n\t\t\t\t<h3>フィルター設定</h3>\n\n\t\t\t\t<div class=\"filter-group\">\n\t\t\t\t\t<label>タグで絞り込み</label>\n\t\t\t\t\t<div class=\"tag-filter\" id=\"tag-filter\">\n\t\t\t\t\t\t${allTags.map(tag => `\n\t\t\t\t\t\t\t<label class=\"tag-checkbox\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" value=\"${tag}\" ${this.selectedTags.has(tag) ? 'checked' : ''}>\n\t\t\t\t\t\t\t\t<span>${tag}</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t`).join('')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"filter-group\">\n\t\t\t\t\t<label>使用頻度で絞り込み（1=低頻度、5=高頻度）</label>\n\t\t\t\t\t<div class=\"frequency-filter\" id=\"frequency-filter\">\n\t\t\t\t\t\t${[5, 4, 3, 2, 1].map(freq => `\n\t\t\t\t\t\t\t<label class=\"frequency-checkbox\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" value=\"${freq}\" ${this.selectedFrequencies.has(freq) ? 'checked' : ''}>\n\t\t\t\t\t\t\t\t<span>★${freq}</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t`).join('')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"filter-group\">\n\t\t\t\t\t<label for=\"search-input\">検索（略語・意味・タグ）</label>\n\t\t\t\t\t<input type=\"text\" id=\"search-input\" class=\"search-input\" placeholder=\"例: QTH, location, Q符号\" value=\"${this.searchQuery}\">\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"filter-stats\">\n\t\t\t\t\t<span>該当: <strong id=\"filtered-count\">${this.filteredEntries.length}</strong> 件</span>\n\t\t\t\t\t<span>全体: <strong>${this.allEntries.length}</strong> 件</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\t/**\n\t * 一覧モード（browse）をレンダリング\n\t */\n\tprivate renderBrowseMode(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"settings-icon\" id=\"settingsIcon\">\n\t\t\t\t<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t<h1>CW略語・Q符号学習</h1>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"tabs\">\n\t\t\t\t\t<button class=\"tab-button active\" data-tab=\"browse\">一覧</button>\n\t\t\t\t\t<button class=\"tab-button\" data-tab=\"learn\">学習モード</button>\n\t\t\t\t\t<button class=\"tab-button\" data-tab=\"exam\">試験モード</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"flashcard-container\">\n\t\t\t\t\t${this.renderFilterSection()}\n\n\t\t\t\t\t<div class=\"entries-section\" id=\"entries-section\">\n\t\t\t\t\t\t<!-- ここに一覧が表示される -->\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t\t<h3>使い方</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>タグ、使用頻度、検索で略語を絞り込めます</li>\n\t\t\t\t\t\t\t<li>略語カードをクリックするとモールス信号を再生できます</li>\n\t\t\t\t\t\t\t<li>カード表示とリスト表示を切り替えられます</li>\n\t\t\t\t\t\t\t<li>「学習モード」タブでフラッシュカード学習ができます</li>\n\t\t\t\t\t\t\t<li>「試験モード」タブで理解度テストができます</li>\n\t\t\t\t\t\t\t<li>画面右上の⚙アイコンから音量・周波数・速度を調整できます</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.renderEntries();\n\t\tthis.attachBrowseModeListeners();\n\t}\n\n\t/**\n\t * エントリー一覧を表示\n\t */\n\tprivate renderEntries(): void {\n\t\tconst container = document.getElementById('entries-section');\n\t\tif (!container) return;\n\n\t\tif (this.displayMode === 'card') {\n\t\t\tthis.renderCardView(container);\n\t\t} else {\n\t\t\tthis.renderListView(container);\n\t\t}\n\t}\n\n\t/**\n\t * カード表示\n\t */\n\tprivate renderCardView(container: HTMLElement): void {\n\t\tcontainer.innerHTML = `\n\t\t\t<div class=\"entries-header\">\n\t\t\t\t<h3>略語一覧 (${this.filteredEntries.length}件)</h3>\n\t\t\t\t<button id=\"toggle-display-btn\" class=\"toggle-display-btn\">📋 リスト表示</button>\n\t\t\t</div>\n\t\t\t<div class=\"entries-grid\">\n\t\t\t\t${this.filteredEntries.map(entry => `\n\t\t\t\t\t<div class=\"entry-card ${this.currentlyPlaying === entry.abbreviation ? 'playing' : ''}\" data-abbr=\"${entry.abbreviation}\">\n\t\t\t\t\t\t<div class=\"entry-header\">\n\t\t\t\t\t\t\t<div class=\"entry-abbr\">${this.formatAbbreviation(entry.abbreviation)}</div>\n\t\t\t\t\t\t\t<div class=\"entry-frequency\" title=\"使用頻度: ${entry.frequency}/5\">${'★'.repeat(entry.frequency)}${'☆'.repeat(5 - entry.frequency)}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"entry-english\">${entry.english}</div>\n\t\t\t\t\t\t<div class=\"entry-japanese\">${entry.japanese}</div>\n\t\t\t\t\t\t${entry.description ? `<div class=\"entry-description\">${entry.description}</div>` : ''}\n\t\t\t\t\t\t${entry.example ? `<div class=\"entry-example\">例: ${entry.example}</div>` : ''}\n\t\t\t\t\t\t<div class=\"entry-tags\">${entry.tags}</div>\n\t\t\t\t\t</div>\n\t\t\t\t`).join('')}\n\t\t\t</div>\n\t\t`;\n\n\t\t//! カードクリックでモールス再生。\n\t\tcontainer.querySelectorAll('.entry-card').forEach(card => {\n\t\t\tcard.addEventListener('click', () => {\n\t\t\t\tconst abbr = card.getAttribute('data-abbr');\n\t\t\t\tif (abbr) this.playMorse(abbr);\n\t\t\t});\n\t\t});\n\n\t\t//! 表示モード切り替えボタン。\n\t\tconst toggleBtn = document.getElementById('toggle-display-btn');\n\t\tif (toggleBtn) {\n\t\t\ttoggleBtn.addEventListener('click', () => {\n\t\t\t\tthis.displayMode = 'list';\n\t\t\t\tFlashcardState.saveDisplayMode(this.displayMode);\n\t\t\t\tthis.renderEntries();\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * リスト表示\n\t */\n\tprivate renderListView(container: HTMLElement): void {\n\t\tcontainer.innerHTML = `\n\t\t\t<div class=\"entries-header\">\n\t\t\t\t<h3>略語一覧 (${this.filteredEntries.length}件)</h3>\n\t\t\t\t<button id=\"toggle-display-btn\" class=\"toggle-display-btn\">🃏 カード表示</button>\n\t\t\t</div>\n\t\t\t<div class=\"list-table-container\">\n\t\t\t\t<table class=\"list-table\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th class=\"sortable\" data-column=\"abbreviation\">略語${this.getSortIndicator('abbreviation')}</th>\n\t\t\t\t\t\t\t<th class=\"sortable\" data-column=\"english\">英文${this.getSortIndicator('english')}</th>\n\t\t\t\t\t\t\t<th class=\"sortable\" data-column=\"japanese\">和訳${this.getSortIndicator('japanese')}</th>\n\t\t\t\t\t\t\t<th class=\"sortable\" data-column=\"frequency\">頻度${this.getSortIndicator('frequency')}</th>\n\t\t\t\t\t\t\t<th class=\"sortable\" data-column=\"tags\">タグ${this.getSortIndicator('tags')}</th>\n\t\t\t\t\t\t\t<th>説明</th>\n\t\t\t\t\t\t\t<th>具体例</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t${this.filteredEntries.map(entry => `\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td class=\"list-abbr\">\n\t\t\t\t\t\t\t\t\t<button class=\"abbr-play-btn ${this.currentlyPlaying === entry.abbreviation ? 'playing' : ''}\" data-abbr=\"${entry.abbreviation}\">\n\t\t\t\t\t\t\t\t\t\t${this.formatAbbreviation(entry.abbreviation)}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>${entry.english}</td>\n\t\t\t\t\t\t\t\t<td>${entry.japanese}</td>\n\t\t\t\t\t\t\t\t<td title=\"使用頻度: ${entry.frequency}/5\">${'★'.repeat(entry.frequency)}${'☆'.repeat(5 - entry.frequency)}</td>\n\t\t\t\t\t\t\t\t<td>${entry.tags}</td>\n\t\t\t\t\t\t\t\t<td>${entry.description || ''}</td>\n\t\t\t\t\t\t\t\t<td>${entry.example || ''}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t`).join('')}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t`;\n\n\t\t//! ソートヘッダーのイベントリスナー。\n\t\tconst sortHeaders = container.querySelectorAll('th.sortable');\n\t\tsortHeaders.forEach(header => {\n\t\t\theader.addEventListener('click', () => {\n\t\t\t\tconst column = header.getAttribute('data-column') as SortColumn;\n\t\t\t\tif (column) this.toggleSort(column);\n\t\t\t});\n\t\t});\n\n\t\t//! 略語再生ボタンのイベントリスナー。\n\t\tconst playButtons = container.querySelectorAll('.abbr-play-btn');\n\t\tplayButtons.forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst abbr = btn.getAttribute('data-abbr');\n\t\t\t\tif (abbr) this.playMorse(abbr);\n\t\t\t});\n\t\t});\n\n\t\t//! 表示モード切り替えボタン。\n\t\tconst toggleBtn = document.getElementById('toggle-display-btn');\n\t\tif (toggleBtn) {\n\t\t\ttoggleBtn.addEventListener('click', () => {\n\t\t\t\tthis.displayMode = 'card';\n\t\t\t\tFlashcardState.saveDisplayMode(this.displayMode);\n\t\t\t\tthis.renderEntries();\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * 学習モードをレンダリング\n\t */\n\tprivate renderLearnMode(): void {\n\t\tif (this.learnCards.length === 0) {\n\t\t\t//! セットアップ画面を表示。\n\t\t\tthis.renderLearnSetup();\n\t\t} else {\n\t\t\t//! 学習カードを表示。\n\t\t\tthis.renderLearnCard();\n\t\t}\n\t}\n\n\t/**\n\t * 学習モードセットアップ画面\n\t */\n\tprivate renderLearnSetup(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\t//! カード枚数を計算。\n\t\tlet cardCount = this.filteredEntries.length;\n\t\tif (this.reviewMode) {\n\t\t\tcardCount = this.filteredEntries.filter(e =>\n\t\t\t\tthis.progress.unknown.has(e.abbreviation)\n\t\t\t).length;\n\t\t}\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"settings-icon\" id=\"settingsIcon\">\n\t\t\t\t<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t<h1>CW略語・Q符号学習</h1>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"tabs\">\n\t\t\t\t\t<button class=\"tab-button\" data-tab=\"browse\">一覧</button>\n\t\t\t\t\t<button class=\"tab-button active\" data-tab=\"learn\">学習モード</button>\n\t\t\t\t\t<button class=\"tab-button\" data-tab=\"exam\">試験モード</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"flashcard-container\">\n\t\t\t\t\t${this.renderFilterSection()}\n\n\t\t\t\t\t<div class=\"learn-setup-section\">\n\t\t\t\t\t\t<h3>学習設定</h3>\n\n\t\t\t\t\t\t<div class=\"filter-group\">\n\t\t\t\t\t\t\t<label>モード</label>\n\t\t\t\t\t\t\t<div class=\"mode-buttons\">\n\t\t\t\t\t\t\t\t<button class=\"mode-btn ${this.reviewMode ? 'active' : ''}\" id=\"review-mode-btn\">\n\t\t\t\t\t\t\t\t\t復習モード（わからないカードのみ: ${this.progress.unknown.size}件）\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"filter-group\">\n\t\t\t\t\t\t\t<label>出題形式</label>\n\t\t\t\t\t\t\t<div class=\"question-type-buttons\">\n\t\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.learnQuestionType === 'abbr-to-meaning' ? 'active' : ''}\" data-type=\"abbr-to-meaning\">略語→意味（基本）</button>\n\t\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.learnQuestionType === 'meaning-to-abbr' ? 'active' : ''}\" data-type=\"meaning-to-abbr\">意味→略語（応用）</button>\n\t\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.learnQuestionType === 'morse-to-abbr' ? 'active' : ''}\" data-type=\"morse-to-abbr\">モールス音→略語（実践）</button>\n\t\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.learnQuestionType === 'morse-to-meaning' ? 'active' : ''}\" data-type=\"morse-to-meaning\">モールス音→意味（実践）</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"filter-stats\">\n\t\t\t\t\t\t\t<span>学習可能: <strong>${cardCount}</strong> 枚</span>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"action-area\">\n\t\t\t\t\t\t\t<button class=\"btn btn-large btn-primary\" id=\"start-learn-btn\" ${cardCount === 0 ? 'disabled' : ''}>学習開始</button>\n\t\t\t\t\t\t\t<button class=\"btn btn-large btn-secondary\" id=\"clear-progress-btn\">進捗をリセット</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t\t<h3>使い方</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>フィルターで学習する略語を絞り込みます</li>\n\t\t\t\t\t\t\t<li>出題形式を選択します（略語→意味、意味→略語、モールス音からの解読）</li>\n\t\t\t\t\t\t\t<li>カードをクリックで裏返し、「わかる」「わからない」で進捗を記録</li>\n\t\t\t\t\t\t\t<li>復習モードで「わからない」カードのみを学習できます</li>\n\t\t\t\t\t\t\t<li>学習進捗はブラウザに自動保存されます</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachCommonListeners();\n\t\tthis.attachLearnSetupListeners();\n\t}\n\n\t/**\n\t * 学習セットアップのイベントリスナー\n\t */\n\tprivate attachLearnSetupListeners(): void {\n\t\t//! タグフィルター。\n\t\tconst tagFilter = document.getElementById('tag-filter');\n\t\ttagFilter?.addEventListener('change', (e) => {\n\t\t\tconst target = e.target as HTMLInputElement;\n\t\t\tif (target.type === 'checkbox') {\n\t\t\t\tif (target.checked) {\n\t\t\t\t\tthis.selectedTags.add(target.value);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedTags.delete(target.value);\n\t\t\t\t}\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\tthis.renderLearnSetup();\n\t\t\t}\n\t\t});\n\n\t\t//! 使用頻度フィルター。\n\t\tconst frequencyFilter = document.getElementById('frequency-filter');\n\t\tfrequencyFilter?.addEventListener('change', (e) => {\n\t\t\tconst target = e.target as HTMLInputElement;\n\t\t\tif (target.type === 'checkbox') {\n\t\t\t\tconst freq = parseInt(target.value, 10);\n\t\t\t\tif (target.checked) {\n\t\t\t\t\tthis.selectedFrequencies.add(freq);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedFrequencies.delete(freq);\n\t\t\t\t}\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\tthis.renderLearnSetup();\n\t\t\t}\n\t\t});\n\n\t\t//! 検索。\n\t\tconst searchInput = document.getElementById('learn-search-input') as HTMLInputElement;\n\t\tsearchInput?.addEventListener('input', () => {\n\t\t\tthis.searchQuery = searchInput.value;\n\t\t\tthis.updateFilteredEntries();\n\t\t\tthis.renderLearnSetup();\n\t\t});\n\n\t\t//! 復習モードボタン。\n\t\tconst reviewModeBtn = document.getElementById('review-mode-btn');\n\t\treviewModeBtn?.addEventListener('click', () => {\n\t\t\tthis.reviewMode = !this.reviewMode;\n\t\t\tthis.renderLearnSetup();\n\t\t});\n\n\t\t//! 出題形式ボタン。\n\t\tconst questionTypeBtns = document.querySelectorAll('.question-type-btn');\n\t\tquestionTypeBtns.forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst type = btn.getAttribute('data-type') as LearnQuestionType;\n\t\t\t\tif (type) {\n\t\t\t\t\tthis.learnQuestionType = type;\n\t\t\t\t\tFlashcardState.saveLearnQuestionType(this.learnQuestionType);\n\t\t\t\t\tthis.renderLearnSetup();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! 学習開始ボタン。\n\t\tconst startLearnBtn = document.getElementById('start-learn-btn');\n\t\tstartLearnBtn?.addEventListener('click', () => {\n\t\t\tthis.startLearn();\n\t\t});\n\n\t\t//! 進捗リセットボタン。\n\t\tconst clearProgressBtn = document.getElementById('clear-progress-btn');\n\t\tclearProgressBtn?.addEventListener('click', () => {\n\t\t\tif (confirm('学習進捗をリセットしますか？')) {\n\t\t\t\tthis.clearProgress();\n\t\t\t\tthis.renderLearnSetup();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * 学習を開始\n\t */\n\tprivate startLearn(): void {\n\t\t//! フィルタリング済みのエントリーから学習カードを作成。\n\t\tlet cards = [...this.filteredEntries];\n\n\t\tif (this.reviewMode) {\n\t\t\t//! 復習モード: わからないカードのみ。\n\t\t\tcards = cards.filter(e => this.progress.unknown.has(e.abbreviation));\n\t\t}\n\n\t\tif (cards.length === 0) {\n\t\t\talert('学習可能なカードがありません。');\n\t\t\treturn;\n\t\t}\n\n\t\t//! シャッフル。\n\t\tcards = cards.sort(() => Math.random() - 0.5);\n\n\t\tthis.learnCards = cards;\n\t\tthis.currentLearnIndex = 0;\n\t\tthis.isFlipped = false;\n\t\tthis.renderLearnCard();\n\t}\n\n\t/**\n\t * 学習カードを表示\n\t */\n\tprivate renderLearnCard(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tconst card = this.learnCards[this.currentLearnIndex];\n\t\tconst currentNum = this.currentLearnIndex + 1;\n\t\tconst totalNum = this.learnCards.length;\n\n\t\t//! 問題と正解のコンテンツを生成。\n\t\tlet frontContent = '';\n\t\tlet backContent = '';\n\n\t\tswitch (this.learnQuestionType) {\n\t\t\tcase 'abbr-to-meaning':\n\t\t\t\tfrontContent = `\n\t\t\t\t\t<div class=\"card-label\">略語</div>\n\t\t\t\t\t<div class=\"card-content-abbr\">${this.formatAbbreviation(card.abbreviation)}</div>\n\t\t\t\t`;\n\t\t\t\tbackContent = `\n\t\t\t\t\t<div class=\"card-label\">意味</div>\n\t\t\t\t\t<div class=\"card-content-text\">${card.english}</div>\n\t\t\t\t\t<div class=\"card-content-text\">${card.japanese}</div>\n\t\t\t\t`;\n\t\t\t\tbreak;\n\t\t\tcase 'meaning-to-abbr':\n\t\t\t\tfrontContent = `\n\t\t\t\t\t<div class=\"card-label\">意味</div>\n\t\t\t\t\t<div class=\"card-content-text\">${card.english}</div>\n\t\t\t\t\t<div class=\"card-content-text\">${card.japanese}</div>\n\t\t\t\t`;\n\t\t\t\tbackContent = `\n\t\t\t\t\t<div class=\"card-label\">略語</div>\n\t\t\t\t\t<div class=\"card-content-abbr\">${this.formatAbbreviation(card.abbreviation)}</div>\n\t\t\t\t`;\n\t\t\t\tbreak;\n\t\t\tcase 'morse-to-abbr':\n\t\t\t\tfrontContent = `\n\t\t\t\t\t<div class=\"card-label\">モールス音を聞いて略語を答えてください</div>\n\t\t\t\t\t<button class=\"play-morse-btn\" id=\"play-morse-btn\">🔊 モールス再生</button>\n\t\t\t\t`;\n\t\t\t\tbackContent = `\n\t\t\t\t\t<div class=\"card-label\">略語</div>\n\t\t\t\t\t<div class=\"card-content-abbr\">${this.formatAbbreviation(card.abbreviation)}</div>\n\t\t\t\t`;\n\t\t\t\tbreak;\n\t\t\tcase 'morse-to-meaning':\n\t\t\t\tfrontContent = `\n\t\t\t\t\t<div class=\"card-label\">モールス音を聞いて意味を答えてください</div>\n\t\t\t\t\t<button class=\"play-morse-btn\" id=\"play-morse-btn\">🔊 モールス再生</button>\n\t\t\t\t`;\n\t\t\t\tbackContent = `\n\t\t\t\t\t<div class=\"card-label\">意味</div>\n\t\t\t\t\t<div class=\"card-content-abbr\">${this.formatAbbreviation(card.abbreviation)}</div>\n\t\t\t\t\t<div class=\"card-content-text\">${card.english}</div>\n\t\t\t\t\t<div class=\"card-content-text\">${card.japanese}</div>\n\t\t\t\t`;\n\t\t\t\tbreak;\n\t\t}\n\n\t\t//! 判定ボタンのHTML。\n\t\tconst isKnown = this.progress.known.has(card.abbreviation);\n\t\tconst isUnknown = this.progress.unknown.has(card.abbreviation);\n\t\tconst judgmentButtons = `\n\t\t\t<div class=\"judgment-controls\">\n\t\t\t\t<button id=\"mark-unknown-btn\" class=\"judgment-button unknown ${isUnknown ? 'active' : ''}\">\n\t\t\t\t\t× わからない\n\t\t\t\t</button>\n\t\t\t\t<button id=\"mark-known-btn\" class=\"judgment-button known ${isKnown ? 'active' : ''}\">\n\t\t\t\t\t○ わかる\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t`;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"container learning-view\">\n\t\t\t\t<div class=\"learning-header\">\n\t\t\t\t\t<button id=\"back-to-setup-btn\" class=\"back-btn\">← 設定に戻る</button>\n\t\t\t\t\t<div class=\"progress-indicator\">${currentNum} / ${totalNum}</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"card-container\">\n\t\t\t\t\t<div class=\"flashcard ${this.isFlipped ? 'flipped' : ''}\" id=\"flashcard\">\n\t\t\t\t\t\t<div class=\"card-front\">\n\t\t\t\t\t\t\t${frontContent}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"card-back\">\n\t\t\t\t\t\t\t${backContent}\n\t\t\t\t\t\t\t${card.description ? `<div class=\"card-description\">${card.description}</div>` : ''}\n\t\t\t\t\t\t\t${card.example ? `<div class=\"card-example\">例: ${card.example}</div>` : ''}\n\t\t\t\t\t\t\t<div class=\"card-tags\">${card.tags} / ${'★'.repeat(card.frequency)}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"card-controls\">\n\t\t\t\t\t<button id=\"flip-card-btn\" class=\"control-button\">\n\t\t\t\t\t\t${this.isFlipped ? '問題に戻る' : '正解を確認する'} (Space)\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t${this.isFlipped ? judgmentButtons : ''}\n\n\t\t\t\t<div class=\"navigation-controls\">\n\t\t\t\t\t<button id=\"prev-card-btn\" class=\"nav-button\" ${this.currentLearnIndex === 0 ? 'disabled' : ''}>\n\t\t\t\t\t\t← 前のカード\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"next-card-btn\" class=\"nav-button\" ${this.currentLearnIndex >= this.learnCards.length - 1 ? 'disabled' : ''}>\n\t\t\t\t\t\t次のカード →\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachLearnCardListeners();\n\t}\n\n\t/**\n\t * 学習カードのイベントリスナー\n\t */\n\tprivate attachLearnCardListeners(): void {\n\t\t//! 設定に戻るボタン。\n\t\tconst backToSetupBtn = document.getElementById('back-to-setup-btn');\n\t\tbackToSetupBtn?.addEventListener('click', () => {\n\t\t\tthis.learnCards = [];\n\t\t\tthis.currentLearnIndex = 0;\n\t\t\tthis.isFlipped = false;\n\t\t\tthis.renderLearnSetup();\n\t\t});\n\n\t\t//! フリップボタン。\n\t\tconst flipCardBtn = document.getElementById('flip-card-btn');\n\t\tflipCardBtn?.addEventListener('click', () => {\n\t\t\tthis.isFlipped = !this.isFlipped;\n\t\t\tthis.renderLearnCard();\n\t\t});\n\n\t\t//! スペースキーでフリップ。\n\t\tconst spaceHandler = (e: KeyboardEvent) => {\n\t\t\tif (e.code === 'Space' && e.target === document.body) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.isFlipped = !this.isFlipped;\n\t\t\t\tthis.renderLearnCard();\n\t\t\t}\n\t\t};\n\t\tdocument.addEventListener('keydown', spaceHandler);\n\n\t\t//! モールス再生ボタン。\n\t\tconst playMorseBtn = document.getElementById('play-morse-btn');\n\t\tif (playMorseBtn) {\n\t\t\tplayMorseBtn.addEventListener('click', () => {\n\t\t\t\tconst card = this.learnCards[this.currentLearnIndex];\n\t\t\t\tthis.playMorse(card.abbreviation);\n\t\t\t});\n\t\t}\n\n\t\t//! 判定ボタン（わからない）。\n\t\tconst markUnknownBtn = document.getElementById('mark-unknown-btn');\n\t\tmarkUnknownBtn?.addEventListener('click', () => {\n\t\t\tconst card = this.learnCards[this.currentLearnIndex];\n\t\t\tthis.progress.unknown.add(card.abbreviation);\n\t\t\tthis.progress.known.delete(card.abbreviation);\n\t\t\tthis.saveProgress();\n\t\t\tthis.moveToNextCard();\n\t\t});\n\n\t\t//! 判定ボタン（わかる）。\n\t\tconst markKnownBtn = document.getElementById('mark-known-btn');\n\t\tmarkKnownBtn?.addEventListener('click', () => {\n\t\t\tconst card = this.learnCards[this.currentLearnIndex];\n\t\t\tthis.progress.known.add(card.abbreviation);\n\t\t\tthis.progress.unknown.delete(card.abbreviation);\n\t\t\tthis.saveProgress();\n\t\t\tthis.moveToNextCard();\n\t\t});\n\n\t\t//! 前のカードボタン。\n\t\tconst prevCardBtn = document.getElementById('prev-card-btn');\n\t\tprevCardBtn?.addEventListener('click', () => {\n\t\t\tif (this.currentLearnIndex > 0) {\n\t\t\t\tthis.currentLearnIndex--;\n\t\t\t\tthis.isFlipped = false;\n\t\t\t\tthis.renderLearnCard();\n\t\t\t}\n\t\t});\n\n\t\t//! 次のカードボタン。\n\t\tconst nextCardBtn = document.getElementById('next-card-btn');\n\t\tnextCardBtn?.addEventListener('click', () => {\n\t\t\tif (this.currentLearnIndex < this.learnCards.length - 1) {\n\t\t\t\tthis.currentLearnIndex++;\n\t\t\t\tthis.isFlipped = false;\n\t\t\t\tthis.renderLearnCard();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * 次のカードに移動する（判定ボタンクリック時の自動遷移用）\n\t */\n\tprivate moveToNextCard(): void {\n\t\tif (this.currentLearnIndex < this.learnCards.length - 1) {\n\t\t\t//! 次のカードがあれば移動。\n\t\t\tthis.currentLearnIndex++;\n\t\t\tthis.isFlipped = false;\n\t\t\tthis.renderLearnCard();\n\t\t} else {\n\t\t\t//! 最後のカードの場合は学習完了。\n\t\t\talert('学習完了しました！');\n\t\t\tthis.learnCards = [];\n\t\t\tthis.currentLearnIndex = 0;\n\t\t\tthis.isFlipped = false;\n\t\t\tthis.renderLearnSetup();\n\t\t}\n\t}\n\n\t/**\n\t * 試験モードをレンダリング\n\t */\n\tprivate renderExamMode(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tif (this.questions.length === 0) {\n\t\t\t// 試験設定画面\n\t\t\tthis.renderExamSetup();\n\t\t} else {\n\t\t\t// 試験実施画面\n\t\t\tthis.renderExamQuestion();\n\t\t}\n\t}\n\n\t/**\n\t * 試験設定画面\n\t */\n\tprivate renderExamSetup(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"settings-icon\" id=\"settingsIcon\">\n\t\t\t\t<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t<h1>CW略語・Q符号学習</h1>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"tabs\">\n\t\t\t\t\t<button class=\"tab-button\" data-tab=\"browse\">一覧</button>\n\t\t\t\t\t<button class=\"tab-button\" data-tab=\"learn\">学習モード</button>\n\t\t\t\t\t<button class=\"tab-button active\" data-tab=\"exam\">試験モード</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"flashcard-container\">\n\t\t\t\t\t${this.renderFilterSection()}\n\n\t\t\t\t\t<div class=\"exam-setup-section\">\n\t\t\t\t\t\t<h3>出題形式</h3>\n\t\t\t\t\t\t<div class=\"question-type-buttons\">\n\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.questionType === 'abbr-to-meaning' ? 'active' : ''}\" data-type=\"abbr-to-meaning\">略語→意味（基礎）</button>\n\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.questionType === 'meaning-to-abbr' ? 'active' : ''}\" data-type=\"meaning-to-abbr\">意味→略語（応用）</button>\n\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.questionType === 'morse-to-abbr' ? 'active' : ''}\" data-type=\"morse-to-abbr\">モールス音→略語（実践）</button>\n\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.questionType === 'morse-to-meaning' ? 'active' : ''}\" data-type=\"morse-to-meaning\">モールス音→意味（実践）</button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<h3>問題数</h3>\n\t\t\t\t\t\t<div class=\"question-count-buttons\">\n\t\t\t\t\t\t\t<button class=\"question-count-btn ${this.questionCount === 5 ? 'active' : ''}\" data-count=\"5\">5問</button>\n\t\t\t\t\t\t\t<button class=\"question-count-btn ${this.questionCount === 10 ? 'active' : ''}\" data-count=\"10\">10問</button>\n\t\t\t\t\t\t\t<button class=\"question-count-btn ${this.questionCount === 20 ? 'active' : ''}\" data-count=\"20\">20問</button>\n\t\t\t\t\t\t\t<button class=\"question-count-btn ${this.questionCount === 50 ? 'active' : ''}\" data-count=\"50\">50問</button>\n\t\t\t\t\t\t\t<button class=\"question-count-btn ${this.questionCount === 'all' ? 'active' : ''}\" data-count=\"all\">全問</button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"action-area\">\n\t\t\t\t\t\t\t<button class=\"btn btn-large btn-primary\" id=\"start-exam-btn\">試験開始</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t\t<h3>使い方</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>フィルターで出題範囲を絞り込みます</li>\n\t\t\t\t\t\t\t<li>出題形式を選択します（略語→意味、意味→略語、モールス音から）</li>\n\t\t\t\t\t\t\t<li>問題数を選択します（5問〜全問）</li>\n\t\t\t\t\t\t\t<li>4つの選択肢から正解を選びます</li>\n\t\t\t\t\t\t\t<li>80%以上で合格です</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachExamSetupListeners();\n\t}\n\n\t/**\n\t * 試験問題画面\n\t */\n\tprivate renderExamQuestion(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tconst question = this.questions[this.currentQuestionIndex];\n\t\tconst progress = this.currentQuestionIndex + 1;\n\t\tconst total = this.questions.length;\n\n\t\tlet questionText = '';\n\t\tswitch (question.type) {\n\t\t\tcase 'abbr-to-meaning':\n\t\t\t\tquestionText = `次の略語の意味は？<br><strong class=\"question-text\">${question.entry.abbreviation}</strong>`;\n\t\t\t\tbreak;\n\t\t\tcase 'meaning-to-abbr':\n\t\t\t\tquestionText = `次の意味を表す略語は？<br><strong class=\"question-text\">${question.entry.english} / ${question.entry.japanese}</strong>`;\n\t\t\t\tbreak;\n\t\t\tcase 'morse-to-abbr':\n\t\t\t\tquestionText = `モールス音を聞いて、対応する略語は？<br><button id=\"replay-morse-btn\" class=\"btn btn-secondary\">🔊 もう一度再生</button>`;\n\t\t\t\tbreak;\n\t\t\tcase 'morse-to-meaning':\n\t\t\t\tquestionText = `モールス音を聞いて、対応する意味は？<br><button id=\"replay-morse-btn\" class=\"btn btn-secondary\">🔊 もう一度再生</button>`;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<h1>CW略語・Q符号学習 - 試験中</h1>\n\t\t\t\t\t<button class=\"back-btn\">中断</button>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"exam-container\">\n\t\t\t\t\t<div class=\"exam-progress\">\n\t\t\t\t\t\t<span>問題 <strong>${progress}</strong> / ${total}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"question-area\">\n\t\t\t\t\t\t<p class=\"question\">${questionText}</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"choices-area\">\n\t\t\t\t\t\t${question.choices.map((choice, index) => `\n\t\t\t\t\t\t\t<button class=\"choice-btn\" data-choice=\"${choice}\">\n\t\t\t\t\t\t\t\t${index + 1}. ${choice}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t`).join('')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachExamQuestionListeners();\n\n\t\t//! モールス音が必要な場合は自動再生。\n\t\tif (question.type === 'morse-to-abbr' || question.type === 'morse-to-meaning') {\n\t\t\tsetTimeout(() => this.playMorse(question.entry.abbreviation), 500);\n\t\t}\n\t}\n\n\t/**\n\t * 試験結果画面\n\t */\n\tprivate renderExamResultMode(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tconst score = FlashcardTrainer.calculateScore(this.results);\n\t\tconst isPassed = FlashcardTrainer.isPassed(score.percentage);\n\t\tconst wrongAnswers = FlashcardTrainer.getWrongAnswers(this.results);\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<h1>CW略語・Q符号学習 - 結果</h1>\n\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"result-container\">\n\t\t\t\t\t<div class=\"score-area ${isPassed ? 'passed' : 'failed'}\">\n\t\t\t\t\t\t<h2>${isPassed ? '合格！' : '不合格'}</h2>\n\t\t\t\t\t\t<div class=\"score-display\">\n\t\t\t\t\t\t\t<span class=\"score-percentage\">${score.percentage}%</span>\n\t\t\t\t\t\t\t<span class=\"score-detail\">${score.correct} / ${score.total} 問正解</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t${wrongAnswers.length > 0 ? `\n\t\t\t\t\t\t<div class=\"wrong-answers-section\">\n\t\t\t\t\t\t\t<h3>間違えた問題（${wrongAnswers.length}件）</h3>\n\t\t\t\t\t\t\t<div class=\"wrong-answers-list\">\n\t\t\t\t\t\t\t\t${this.results.filter(r => !r.isCorrect).map(result => `\n\t\t\t\t\t\t\t\t\t<div class=\"wrong-answer-item\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"wrong-answer-question\">\n\t\t\t\t\t\t\t\t\t\t\t<strong>${result.question.entry.abbreviation}</strong>\n\t\t\t\t\t\t\t\t\t\t\t<span>${result.question.entry.english} / ${result.question.entry.japanese}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"wrong-answer-detail\">\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"wrong-label\">あなたの回答:</span>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"wrong-user-answer\">${result.userAnswer}</span>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"correct-label\">正解:</span>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"correct-answer\">${result.question.correctAnswer}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t${result.question.entry.description ? `\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"wrong-answer-description\">\n\t\t\t\t\t\t\t\t\t\t\t\t${result.question.entry.description}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t` : ''}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t`).join('')}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t` : `\n\t\t\t\t\t\t<div class=\"perfect-score\">\n\t\t\t\t\t\t\t<p>すべて正解しました！</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`}\n\n\t\t\t\t\t<div class=\"action-area\">\n\t\t\t\t\t\t<button class=\"btn btn-primary btn-large\" id=\"retry-btn\">もう一度</button>\n\t\t\t\t\t\t<button class=\"btn btn-secondary btn-large\" id=\"back-to-setup-btn\">設定に戻る</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachResultListeners();\n\t}\n\n\t/**\n\t * browseモードのイベントリスナーを設定\n\t */\n\tprivate attachBrowseModeListeners(): void {\n\t\tthis.attachCommonListeners();\n\n\t\t//! タグフィルター。\n\t\tconst tagFilter = document.getElementById('tag-filter');\n\t\ttagFilter?.addEventListener('change', (e) => {\n\t\t\tconst target = e.target as HTMLInputElement;\n\t\t\tif (target.type === 'checkbox') {\n\t\t\t\tif (target.checked) {\n\t\t\t\t\tthis.selectedTags.add(target.value);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedTags.delete(target.value);\n\t\t\t\t}\n\t\t\t\tthis.saveFilters();\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\tthis.updateFilteredCount();\n\t\t\t\tthis.renderEntries();\n\t\t\t}\n\t\t});\n\n\t\t//! 使用頻度フィルター。\n\t\tconst frequencyFilter = document.getElementById('frequency-filter');\n\t\tfrequencyFilter?.addEventListener('change', (e) => {\n\t\t\tconst target = e.target as HTMLInputElement;\n\t\t\tif (target.type === 'checkbox') {\n\t\t\t\tconst freq = parseInt(target.value, 10);\n\t\t\t\tif (target.checked) {\n\t\t\t\t\tthis.selectedFrequencies.add(freq);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedFrequencies.delete(freq);\n\t\t\t\t}\n\t\t\t\tthis.saveFilters();\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\tthis.updateFilteredCount();\n\t\t\t\tthis.renderEntries();\n\t\t\t}\n\t\t});\n\n\t\t//! 検索。\n\t\tconst searchInput = document.getElementById('search-input') as HTMLInputElement;\n\t\tsearchInput?.addEventListener('input', () => {\n\t\t\tthis.searchQuery = searchInput.value;\n\t\t\tthis.saveFilters();\n\t\t\tthis.updateFilteredEntries();\n\t\t\tthis.updateFilteredCount();\n\t\t\tthis.renderEntries();\n\t\t});\n\t}\n\n\t/**\n\t * 試験設定のイベントリスナーを設定\n\t */\n\tprivate attachExamSetupListeners(): void {\n\t\tthis.attachCommonListeners();\n\n\t\t//! タグフィルター。\n\t\tconst tagFilter = document.getElementById('tag-filter');\n\t\ttagFilter?.addEventListener('change', (e) => {\n\t\t\tconst target = e.target as HTMLInputElement;\n\t\t\tif (target.type === 'checkbox') {\n\t\t\t\tif (target.checked) {\n\t\t\t\t\tthis.selectedTags.add(target.value);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedTags.delete(target.value);\n\t\t\t\t}\n\t\t\t\tthis.saveFilters();\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\tthis.updateFilteredCount();\n\t\t\t}\n\t\t});\n\n\t\t//! 使用頻度フィルター。\n\t\tconst frequencyFilter = document.getElementById('frequency-filter');\n\t\tfrequencyFilter?.addEventListener('change', (e) => {\n\t\t\tconst target = e.target as HTMLInputElement;\n\t\t\tif (target.type === 'checkbox') {\n\t\t\t\tconst freq = parseInt(target.value, 10);\n\t\t\t\tif (target.checked) {\n\t\t\t\t\tthis.selectedFrequencies.add(freq);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedFrequencies.delete(freq);\n\t\t\t\t}\n\t\t\t\tthis.saveFilters();\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\tthis.updateFilteredCount();\n\t\t\t}\n\t\t});\n\n\t\t//! 検索。\n\t\tconst searchInput = document.getElementById('search-input') as HTMLInputElement;\n\t\tsearchInput?.addEventListener('input', () => {\n\t\t\tthis.searchQuery = searchInput.value;\n\t\t\tthis.saveFilters();\n\t\t\tthis.updateFilteredEntries();\n\t\t\tthis.updateFilteredCount();\n\t\t});\n\n\t\t//! 出題形式ボタン。\n\t\tconst questionTypeBtns = document.querySelectorAll('.question-type-btn');\n\t\tquestionTypeBtns.forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst type = btn.getAttribute('data-type') as QuestionType;\n\t\t\t\tif (type) {\n\t\t\t\t\tthis.questionType = type;\n\t\t\t\t\tFlashcardState.saveExamQuestionType(this.questionType as LearnQuestionType);\n\t\t\t\t\tthis.renderExamSetup();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! 問題数ボタン。\n\t\tconst questionCountBtns = document.querySelectorAll('.question-count-btn');\n\t\tquestionCountBtns.forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst count = btn.getAttribute('data-count');\n\t\t\t\tif (count) {\n\t\t\t\t\tthis.questionCount = count === 'all' ? 'all' : parseInt(count, 10);\n\t\t\t\t\tthis.renderExamSetup();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! 試験開始ボタン。\n\t\tconst startExamBtn = document.getElementById('start-exam-btn');\n\t\tstartExamBtn?.addEventListener('click', () => {\n\t\t\tthis.startExam();\n\t\t});\n\t}\n\n\t/**\n\t * 試験問題のイベントリスナーを設定\n\t */\n\tprivate attachExamQuestionListeners(): void {\n\t\t//! 中断ボタン。\n\t\tconst backBtn = document.querySelector('.back-btn');\n\t\tbackBtn?.addEventListener('click', () => {\n\t\t\tif (confirm('試験を中断してメニューに戻りますか？')) {\n\t\t\t\twindow.location.hash = '#menu';\n\t\t\t}\n\t\t});\n\n\t\t//! モールス再生ボタン。\n\t\tconst replayBtn = document.getElementById('replay-morse-btn');\n\t\tif (replayBtn) {\n\t\t\tconst question = this.questions[this.currentQuestionIndex];\n\t\t\treplayBtn.addEventListener('click', () => {\n\t\t\t\tthis.playMorse(question.entry.abbreviation);\n\t\t\t});\n\t\t}\n\n\t\t//! 選択肢ボタン。\n\t\tconst choiceBtns = document.querySelectorAll('.choice-btn');\n\t\tchoiceBtns.forEach(btn => {\n\t\t\tbtn.addEventListener('click', (e) => {\n\t\t\t\tconst target = e.currentTarget as HTMLButtonElement;\n\t\t\t\tconst userAnswer = target.dataset.choice || '';\n\t\t\t\tthis.handleAnswer(userAnswer);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * 結果画面のイベントリスナーを設定\n\t */\n\tprivate attachResultListeners(): void {\n\t\t//! 戻るボタン。\n\t\tconst backBtn = document.querySelector('.back-btn');\n\t\tbackBtn?.addEventListener('click', () => {\n\t\t\twindow.location.hash = '#menu';\n\t\t});\n\n\t\t//! もう一度ボタン。\n\t\tconst retryBtn = document.getElementById('retry-btn');\n\t\tretryBtn?.addEventListener('click', () => {\n\t\t\tthis.questions = [];\n\t\t\tthis.results = [];\n\t\t\tthis.currentQuestionIndex = 0;\n\t\t\tthis.currentState = 'exam';\n\t\t\tthis.render();\n\t\t});\n\n\t\t//! 設定に戻るボタン。\n\t\tconst backToSetupBtn = document.getElementById('back-to-setup-btn');\n\t\tbackToSetupBtn?.addEventListener('click', () => {\n\t\t\tthis.questions = [];\n\t\t\tthis.results = [];\n\t\t\tthis.currentQuestionIndex = 0;\n\t\t\tthis.currentState = 'exam';\n\t\t\tthis.render();\n\t\t});\n\t}\n\n\t/**\n\t * 共通のイベントリスナーを設定（タブ切り替えなど）\n\t */\n\tprivate attachCommonListeners(): void {\n\t\t//! 戻るボタン。\n\t\tconst backBtn = document.querySelector('.back-btn');\n\t\tbackBtn?.addEventListener('click', () => {\n\t\t\twindow.location.hash = '#menu';\n\t\t});\n\n\t\t//! 設定アイコン。\n\t\tdocument.getElementById('settingsIcon')?.addEventListener('click', () => {\n\t\t\tthis.openSettingsModal();\n\t\t});\n\n\t\t//! タブ切り替え。\n\t\tconst tabButtons = document.querySelectorAll('.tab-button');\n\t\ttabButtons.forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst tab = btn.getAttribute('data-tab');\n\t\t\t\tif (tab === 'browse') {\n\t\t\t\t\tthis.currentState = 'browse';\n\t\t\t\t\tFlashcardState.saveViewMode('browse');\n\t\t\t\t\tthis.render();\n\t\t\t\t} else if (tab === 'learn') {\n\t\t\t\t\tthis.currentState = 'learn';\n\t\t\t\t\tFlashcardState.saveViewMode('learn');\n\t\t\t\t\tthis.render();\n\t\t\t\t} else if (tab === 'exam') {\n\t\t\t\t\tthis.questions = [];\n\t\t\t\t\tthis.results = [];\n\t\t\t\t\tthis.currentQuestionIndex = 0;\n\t\t\t\t\tthis.currentState = 'exam';\n\t\t\t\t\tFlashcardState.saveViewMode('exam');\n\t\t\t\t\tthis.render();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * フィルター適用後のエントリー数を更新\n\t */\n\tprivate updateFilteredCount(): void {\n\t\tconst filteredCountElem = document.getElementById('filtered-count');\n\t\tif (filteredCountElem) {\n\t\t\tfilteredCountElem.textContent = this.filteredEntries.length.toString();\n\t\t}\n\n\t\t//! 問題数の最大値も更新（試験モードの場合）。\n\t\tconst questionCountInput = document.getElementById('question-count') as HTMLInputElement;\n\t\tif (questionCountInput) {\n\t\t\tquestionCountInput.max = this.filteredEntries.length.toString();\n\t\t\tif (parseInt(questionCountInput.value, 10) > this.filteredEntries.length) {\n\t\t\t\tquestionCountInput.value = this.filteredEntries.length.toString();\n\t\t\t\tthis.questionCount = this.filteredEntries.length;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * フィルタリングされたエントリーを更新\n\t */\n\tprivate updateFilteredEntries(): void {\n\t\tlet entries = this.allEntries;\n\n\t\t//! タグでフィルタリング。\n\t\tentries = FlashcardTrainer.filterByTags(entries, this.selectedTags);\n\n\t\t//! 使用頻度でフィルタリング。\n\t\tentries = FlashcardTrainer.filterByFrequencies(entries, this.selectedFrequencies);\n\n\t\t//! 検索クエリでフィルタリング。\n\t\tentries = FlashcardTrainer.filterByQuery(entries, this.searchQuery);\n\n\t\t//! ソート適用。\n\t\tthis.filteredEntries = this.sortEntries(entries);\n\t}\n\n\t/**\n\t * エントリーをソート\n\t */\n\tprivate sortEntries(entries: FlashcardEntry[]): FlashcardEntry[] {\n\t\tconst ascending = this.sortDirection === 'asc';\n\n\t\tswitch (this.sortColumn) {\n\t\t\tcase 'abbreviation':\n\t\t\t\treturn FlashcardTrainer.sortByAbbreviation(entries, ascending);\n\t\t\tcase 'english':\n\t\t\t\treturn FlashcardTrainer.sortByEnglish(entries, ascending);\n\t\t\tcase 'japanese':\n\t\t\t\treturn FlashcardTrainer.sortByJapanese(entries, ascending);\n\t\t\tcase 'frequency':\n\t\t\t\treturn FlashcardTrainer.sortByFrequency(entries, ascending);\n\t\t\tcase 'tags':\n\t\t\t\treturn FlashcardTrainer.sortByTags(entries, ascending);\n\t\t\tdefault:\n\t\t\t\treturn entries;\n\t\t}\n\t}\n\n\t/**\n\t * ソートを切り替え\n\t */\n\tprivate toggleSort(column: SortColumn): void {\n\t\tif (this.sortColumn === column) {\n\t\t\t//! 同じ列なら方向を反転。\n\t\t\tthis.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n\t\t} else {\n\t\t\t//! 異なる列なら昇順で開始。\n\t\t\tthis.sortColumn = column;\n\t\t\tthis.sortDirection = 'asc';\n\t\t}\n\t\t//! ソート状態を保存。\n\t\tFlashcardState.saveSortState(this.sortColumn, this.sortDirection);\n\t\tthis.updateFilteredEntries();\n\t\tthis.renderEntries();\n\t}\n\n\t/**\n\t * ソートインジケーターを取得\n\t */\n\tprivate getSortIndicator(column: SortColumn): string {\n\t\tif (this.sortColumn !== column) return '';\n\t\treturn this.sortDirection === 'asc' ? ' ▲' : ' ▼';\n\t}\n\n\t/**\n\t * 略語をフォーマット（プロサインをオーバーラインで表示）\n\t */\n\tprivate formatAbbreviation(abbr: string): string {\n\t\tconst prosignMatch = abbr.match(/^\\[([A-Z]+)\\]$/);\n\t\tif (prosignMatch) {\n\t\t\treturn `<span class=\"prosign\">${prosignMatch[1]}</span>`;\n\t\t}\n\t\treturn abbr;\n\t}\n\n\t/**\n\t * モールス符号を再生\n\t */\n\tprivate async playMorse(text: string): Promise<void> {\n\t\ttry {\n\t\t\t//! 既に再生中の場合は停止。\n\t\t\tif (this.currentlyPlaying === text) {\n\t\t\t\tthis.audio.stopContinuousTone();\n\t\t\t\tthis.currentlyPlaying = null;\n\t\t\t\tthis.renderEntries();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//! 別のものが再生中なら停止。\n\t\t\tif (this.currentlyPlaying) {\n\t\t\t\tthis.audio.stopContinuousTone();\n\t\t\t}\n\n\t\t\tthis.currentlyPlaying = text;\n\t\t\tthis.renderEntries();\n\n\t\t\t//! モールス符号に変換。\n\t\t\tconst morseSequence = MorseCodec.textToMorse(text);\n\t\t\tif (morseSequence) {\n\t\t\t\t//! シンプルな再生実装（scheduleToneを使用）。\n\t\t\t\tfor (const char of morseSequence) {\n\t\t\t\t\tif (char === '.') {\n\t\t\t\t\t\tthis.audio.scheduleTone(0, 60);  // 短点\n\t\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 120));\n\t\t\t\t\t} else if (char === '-') {\n\t\t\t\t\t\tthis.audio.scheduleTone(0, 180);  // 長点\n\t\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 240));\n\t\t\t\t\t} else if (char === ' ') {\n\t\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 60));  // 要素間スペース\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.currentlyPlaying = null;\n\t\t\tthis.renderEntries();\n\t\t} catch (error) {\n\t\t\tconsole.error('モールス再生エラー:', error);\n\t\t\tthis.currentlyPlaying = null;\n\t\t\tthis.renderEntries();\n\t\t}\n\t}\n\n\t/**\n\t * 試験を開始\n\t */\n\tprivate startExam(): void {\n\t\tif (this.filteredEntries.length === 0) {\n\t\t\talert('該当するエントリーがありません。フィルターを調整してください。');\n\t\t\treturn;\n\t\t}\n\n\t\tconst count = this.questionCount === 'all' ? this.filteredEntries.length : this.questionCount;\n\t\tconst actualCount = Math.min(count, this.filteredEntries.length);\n\t\tif (actualCount === 0) {\n\t\t\talert('問題数を1以上に設定してください。');\n\t\t\treturn;\n\t\t}\n\n\t\t//! 問題を生成。\n\t\tthis.questions = FlashcardTrainer.generateExamQuestions(\n\t\t\tthis.filteredEntries,\n\t\t\tthis.questionType,\n\t\t\tactualCount\n\t\t);\n\n\t\tthis.currentQuestionIndex = 0;\n\t\tthis.results = [];\n\t\tthis.render();\n\t}\n\n\t/**\n\t * 回答を処理\n\t */\n\tprivate handleAnswer(userAnswer: string): void {\n\t\tconst question = this.questions[this.currentQuestionIndex];\n\t\tconst isCorrect = FlashcardTrainer.checkAnswer(question, userAnswer);\n\n\t\t//! 結果を記録。\n\t\tthis.results.push({\n\t\t\tquestion,\n\t\t\tuserAnswer,\n\t\t\tisCorrect\n\t\t});\n\n\t\t//! 次の問題に進むか結果表示。\n\t\tthis.currentQuestionIndex++;\n\t\tif (this.currentQuestionIndex < this.questions.length) {\n\t\t\tthis.render();\n\t\t} else {\n\t\t\tthis.currentState = 'exam-result';\n\t\t\tthis.render();\n\t\t}\n\t}\n\n\t/**\n\t * 設定モーダルを開く\n\t */\n\tprivate openSettingsModal(): void {\n\t\t//! 現在の設定値を取得（0-100の範囲に変換）。\n\t\tconst currentValues: SettingValues = {\n\t\t\tvolume: Math.round(this.audio.getVolume() * 100),\n\t\t\tfrequency: this.audio.getFrequency(),\n\t\t\twpm: this.audio.getWPM()\n\t\t};\n\n\t\t//! 設定変更前の値を保存（キャンセル時の復元用）。\n\t\tconst savedSettings = {\n\t\t\tvolume: this.audio.getVolume(),\n\t\t\tfrequency: this.audio.getFrequency(),\n\t\t\twpm: this.audio.getWPM()\n\t\t};\n\n\t\t//! SettingsModalを作成。\n\t\tconst modal = new SettingsModal(\n\t\t\t'flashcard-settings-modal',\n\t\t\tALL_SETTING_ITEMS,\n\t\t\tcurrentValues,\n\t\t\t{\n\t\t\t\tonSave: (values: SettingValues) => {\n\t\t\t\t\t//! 設定を保存。\n\t\t\t\t\tthis.audio.setVolume((values.volume as number) / 100);\n\t\t\t\t\tthis.audio.setFrequency(values.frequency as number);\n\t\t\t\t\tthis.audio.setWPM(values.wpm as number);\n\t\t\t\t},\n\t\t\t\tonCancel: () => {\n\t\t\t\t\t//! 設定を元に戻す。\n\t\t\t\t\tthis.audio.setVolume(savedSettings.volume);\n\t\t\t\t\tthis.audio.setFrequency(savedSettings.frequency);\n\t\t\t\t\tthis.audio.setWPM(savedSettings.wpm);\n\t\t\t\t},\n\t\t\t\tonTestPlay: async () => {\n\t\t\t\t\t//! テスト再生。\n\t\t\t\t\tawait this.playMorse('CQ');\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t//! モーダルを表示。\n\t\tmodal.show('flashcard');\n\t}\n\n\t/**\n\t * ビューを破棄\n\t */\n\tdestroy(): void {\n\t\t//! 音声を停止。\n\t\tif (this.currentlyPlaying) {\n\t\t\tthis.audio.stopContinuousTone();\n\t\t}\n\t}\n}\n","/**\n * コッホ法トレーニングビュー\n */\n\nimport type { View } from '../../router';\nimport {\n\tKochTrainer,\n\tKOCH_SEQUENCE,\n\tAudioGenerator,\n\tMorseCodec,\n\ttype PracticeSettings\n} from 'morse-engine';\nimport { SettingsModal, ALL_SETTING_ITEMS, type SettingValues } from 'morse-engine';\n\ntype ViewMode = 'learning' | 'custom';\n\ninterface LessonState {\n\tcurrentLesson: number;\n\tisPlaying: boolean;\n\tuserInput: string;\n\tcorrectAnswer: string;\n\tgroups: string[];\n\tcurrentGroupIndex: number;\n}\n\ninterface CustomState {\n\tselectedChars: Set<string>;\n\tisCustomRunning: boolean;\n\tcustomUserInput: string;\n\tcustomCorrectAnswer: string;\n\tcustomGroups: string[];\n\tcustomCurrentGroupIndex: number;\n\tcustomIsPlaying: boolean;\n}\n\ninterface KochSettings {\n\tcharacterSpeed: number;\n\teffectiveSpeed: number;\n\tfrequency: number;\n\tvolume: number;\n\tpracticeDuration: number;\n\tgroupSize: number;\n\tshowInput: boolean;\n}\n\nconst DEFAULT_SETTINGS: KochSettings = {\n\tcharacterSpeed: 20,\n\teffectiveSpeed: 15,\n\tfrequency: 700,\n\tvolume: 0.7,\n\tpracticeDuration: 60,\n\tgroupSize: 5,\n\tshowInput: true\n};\n\n/**\n * コッホ法トレーニングビュークラス\n */\nexport class KochView implements View {\n\tprivate audio: AudioGenerator;\n\tprivate viewMode: ViewMode = 'learning';\n\tprivate settings: KochSettings = { ...DEFAULT_SETTINGS };\n\n\tprivate state: LessonState = {\n\t\tcurrentLesson: 1,\n\t\tisPlaying: false,\n\t\tuserInput: '',\n\t\tcorrectAnswer: '',\n\t\tgroups: [],\n\t\tcurrentGroupIndex: 0,\n\t};\n\n\tprivate customState: CustomState = {\n\t\tselectedChars: new Set(),\n\t\tisCustomRunning: false,\n\t\tcustomUserInput: '',\n\t\tcustomCorrectAnswer: '',\n\t\tcustomGroups: [],\n\t\tcustomCurrentGroupIndex: 0,\n\t\tcustomIsPlaying: false,\n\t};\n\n\tconstructor() {\n\t\t//! 設定を読み込む。\n\t\tthis.loadSettings();\n\t\tthis.loadProgress();\n\t\tthis.loadViewMode();\n\t\tthis.loadSelectedChars();\n\n\t\t//! AudioGeneratorを初期化。\n\t\tthis.audio = new AudioGenerator({\n\t\t\tfrequency: this.settings.frequency,\n\t\t\tvolume: this.settings.volume,\n\t\t\twpm: this.settings.characterSpeed,\n\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t});\n\t}\n\n\t//! ========== 設定管理 ==========\n\n\tprivate loadSettings(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.koch.settings');\n\t\t\tif (saved) {\n\t\t\t\tthis.settings = { ...DEFAULT_SETTINGS, ...JSON.parse(saved) };\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load settings:', error);\n\t\t}\n\t}\n\n\tprivate saveSettings(): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem('v10.koch.settings', JSON.stringify(this.settings));\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save settings:', error);\n\t\t}\n\t}\n\n\tprivate loadProgress(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.koch.currentLesson');\n\t\t\tif (saved) {\n\t\t\t\tthis.state.currentLesson = parseInt(saved, 10);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load progress:', error);\n\t\t}\n\t}\n\n\tprivate saveProgress(): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem('v10.koch.currentLesson', this.state.currentLesson.toString());\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save progress:', error);\n\t\t}\n\t}\n\n\tprivate loadViewMode(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.koch.viewMode') as ViewMode | null;\n\t\t\tif (saved && ['learning', 'custom'].includes(saved)) {\n\t\t\t\tthis.viewMode = saved;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load view mode:', error);\n\t\t}\n\t}\n\n\tprivate saveViewMode(): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem('v10.koch.viewMode', this.viewMode);\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save view mode:', error);\n\t\t}\n\t}\n\n\tprivate loadSelectedChars(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.koch.selectedChars');\n\t\t\tif (saved) {\n\t\t\t\tconst chars = JSON.parse(saved) as string[];\n\t\t\t\tthis.customState.selectedChars = new Set(chars);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load selected chars:', error);\n\t\t}\n\t}\n\n\tprivate saveSelectedChars(): void {\n\t\ttry {\n\t\t\tconst chars = Array.from(this.customState.selectedChars);\n\t\t\tlocalStorage.setItem('v10.koch.selectedChars', JSON.stringify(chars));\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save selected chars:', error);\n\t\t}\n\t}\n\n\t//! ========== レッスン管理 ==========\n\n\tprivate async startLesson(): Promise<void> {\n\t\tconst chars = KochTrainer.getCharsForLesson(this.state.currentLesson);\n\t\tconst practiceSettings: PracticeSettings = {\n\t\t\tgroupSize: this.settings.groupSize,\n\t\t\tduration: this.settings.practiceDuration,\n\t\t\twpm: this.settings.characterSpeed\n\t\t};\n\t\tthis.state.groups = KochTrainer.generateRandomGroups(chars, practiceSettings);\n\t\tthis.state.currentGroupIndex = 0;\n\t\tthis.state.userInput = '';\n\t\tthis.state.correctAnswer = this.state.groups.join('');\n\t\tthis.state.isPlaying = false;\n\n\t\t//! AudioGeneratorの設定を更新。\n\t\tthis.audio.updateSettings({\n\t\t\tfrequency: this.settings.frequency,\n\t\t\tvolume: this.settings.volume,\n\t\t\twpm: this.settings.characterSpeed,\n\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t});\n\n\t\tthis.renderPractice();\n\t}\n\n\tprivate async playMorse(): Promise<void> {\n\t\tif (this.state.isPlaying) return;\n\n\t\tthis.state.isPlaying = true;\n\t\tthis.state.currentGroupIndex = 0;\n\t\tthis.updateProgress();\n\t\tthis.updatePlaybackButtons();\n\n\t\t//! モールス信号を再生。\n\t\tfor (let i = 0; i < this.state.groups.length && this.state.isPlaying; i++) {\n\t\t\tconst group = this.state.groups[i];\n\t\t\tconst morse = MorseCodec.textToMorse(group);\n\t\t\tawait this.audio.playMorseString(morse + ' /');\n\n\t\t\tthis.state.currentGroupIndex = i + 1;\n\t\t\tthis.updateProgress();\n\t\t}\n\n\t\tthis.state.isPlaying = false;\n\t\tthis.updatePlaybackButtons();\n\t\tif (this.state.currentGroupIndex >= this.state.groups.length) {\n\t\t\tthis.showResult();\n\t\t}\n\t}\n\n\tprivate pauseMorse(): void {\n\t\tthis.state.isPlaying = false;\n\t\tthis.audio.stopPlaying();\n\t\tthis.updatePlaybackButtons();\n\t}\n\n\tprivate stopLesson(): void {\n\t\tthis.state.isPlaying = false;\n\t\tthis.audio.stopPlaying();\n\t\tthis.render();\n\t}\n\n\tprivate showResult(): void {\n\t\tconst accuracy = KochTrainer.calculateAccuracy(this.state.correctAnswer, this.state.userInput);\n\t\tconst passed = accuracy >= 90;\n\n\t\tconst resultContainer = document.getElementById('resultContainer');\n\t\tif (!resultContainer) return;\n\n\t\tresultContainer.innerHTML = `\n\t\t\t<div class=\"result ${passed ? 'passed' : 'failed'}\">\n\t\t\t\t<h2>${passed ? '合格！' : '不合格'}</h2>\n\t\t\t\t<div class=\"accuracy\">正答率: ${accuracy.toFixed(1)}%</div>\n\t\t\t\t<div class=\"comparison\">\n\t\t\t\t\t<div>送信: ${this.state.correctAnswer}</div>\n\t\t\t\t\t<div>入力: ${this.state.userInput || '（未入力）'}</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"actions\">\n\t\t\t\t\t${passed ? `<button class=\"btn primary\" id=\"nextLessonBtn\">次のレッスンへ</button>` : ''}\n\t\t\t\t\t<button class=\"btn\" id=\"retryBtn\">もう一度</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tif (passed && this.state.currentLesson < 40) {\n\t\t\tthis.state.currentLesson++;\n\t\t\tthis.saveProgress();\n\n\t\t\tdocument.getElementById('nextLessonBtn')?.addEventListener('click', () => {\n\t\t\t\tthis.render();\n\t\t\t});\n\t\t}\n\n\t\tdocument.getElementById('retryBtn')?.addEventListener('click', () => {\n\t\t\tthis.render();\n\t\t});\n\t}\n\n\tprivate updateProgress(): void {\n\t\tconst progressEl = document.getElementById('lessonProgress');\n\t\tconst progressBar = document.getElementById('progressBar');\n\n\t\tif (progressEl && progressBar) {\n\t\t\tconst percent = (this.state.currentGroupIndex / this.state.groups.length) * 100;\n\t\t\tprogressEl.textContent = `進行: ${this.state.currentGroupIndex}/${this.state.groups.length} (${percent.toFixed(0)}%)`;\n\t\t\tprogressBar.style.width = `${percent}%`;\n\t\t}\n\n\t\tthis.updatePlaybackButtons();\n\t}\n\n\tprivate updatePlaybackButtons(): void {\n\t\tconst playBtn = document.getElementById('playBtn') as HTMLButtonElement;\n\t\tconst pauseBtn = document.getElementById('pauseBtn') as HTMLButtonElement;\n\n\t\tif (playBtn && pauseBtn) {\n\t\t\tif (this.state.isPlaying) {\n\t\t\t\tplayBtn.disabled = true;\n\t\t\t\tpauseBtn.disabled = false;\n\t\t\t} else {\n\t\t\t\tplayBtn.disabled = false;\n\t\t\t\tpauseBtn.disabled = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t//! ========== カスタムモード管理 ==========\n\n\tprivate async startCustom(): Promise<void> {\n\t\tconst chars = Array.from(this.customState.selectedChars);\n\t\tconst practiceSettings: PracticeSettings = {\n\t\t\tgroupSize: this.settings.groupSize,\n\t\t\tduration: this.settings.practiceDuration,\n\t\t\twpm: this.settings.characterSpeed\n\t\t};\n\t\tthis.customState.customGroups = KochTrainer.generateRandomGroups(chars, practiceSettings);\n\t\tthis.customState.customCurrentGroupIndex = 0;\n\t\tthis.customState.customUserInput = '';\n\t\tthis.customState.customCorrectAnswer = this.customState.customGroups.join('');\n\t\tthis.customState.customIsPlaying = false;\n\t\tthis.customState.isCustomRunning = true;\n\n\t\t//! AudioGeneratorの設定を更新。\n\t\tthis.audio.updateSettings({\n\t\t\tfrequency: this.settings.frequency,\n\t\t\tvolume: this.settings.volume,\n\t\t\twpm: this.settings.characterSpeed,\n\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t});\n\n\t\tthis.render();\n\t\tthis.renderCustomPractice();\n\t}\n\n\tprivate async playCustomMorse(): Promise<void> {\n\t\tif (this.customState.customIsPlaying) return;\n\n\t\tthis.customState.customIsPlaying = true;\n\t\tthis.customState.customCurrentGroupIndex = 0;\n\t\tthis.updateCustomProgress();\n\t\tthis.updateCustomPlaybackButtons();\n\n\t\t//! モールス信号を再生。\n\t\tfor (let i = 0; i < this.customState.customGroups.length && this.customState.customIsPlaying; i++) {\n\t\t\tconst group = this.customState.customGroups[i];\n\t\t\tconst morse = MorseCodec.textToMorse(group);\n\t\t\tawait this.audio.playMorseString(morse + ' /');\n\n\t\t\tthis.customState.customCurrentGroupIndex = i + 1;\n\t\t\tthis.updateCustomProgress();\n\t\t}\n\n\t\tthis.customState.customIsPlaying = false;\n\t\tthis.updateCustomPlaybackButtons();\n\t}\n\n\tprivate pauseCustomMorse(): void {\n\t\tthis.customState.customIsPlaying = false;\n\t\tthis.audio.stopPlaying();\n\t\tthis.updateCustomPlaybackButtons();\n\t}\n\n\tprivate stopCustom(): void {\n\t\tthis.customState.customIsPlaying = false;\n\t\tthis.audio.stopPlaying();\n\t\tthis.customState.isCustomRunning = false;\n\t\tthis.render();\n\t}\n\n\tprivate updateCustomProgress(): void {\n\t\tconst progressEl = document.getElementById('customProgress');\n\t\tconst progressBar = document.getElementById('customProgressBar');\n\n\t\tif (progressEl && progressBar) {\n\t\t\tconst percent = (this.customState.customCurrentGroupIndex / this.customState.customGroups.length) * 100;\n\t\t\tprogressEl.textContent = `進行: ${this.customState.customCurrentGroupIndex}/${this.customState.customGroups.length} (${percent.toFixed(0)}%)`;\n\t\t\tprogressBar.style.width = `${percent}%`;\n\t\t}\n\n\t\tthis.updateCustomPlaybackButtons();\n\t}\n\n\tprivate updateCustomPlaybackButtons(): void {\n\t\tconst playBtn = document.getElementById('customPlayBtn') as HTMLButtonElement;\n\t\tconst pauseBtn = document.getElementById('customPauseBtn') as HTMLButtonElement;\n\n\t\tif (playBtn && pauseBtn) {\n\t\t\tif (this.customState.customIsPlaying) {\n\t\t\t\tplayBtn.disabled = true;\n\t\t\t\tpauseBtn.disabled = false;\n\t\t\t} else {\n\t\t\t\tplayBtn.disabled = false;\n\t\t\t\tpauseBtn.disabled = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate showCustomResult(): void {\n\t\tconst resultContainer = document.getElementById('customResultContainer');\n\t\tif (!resultContainer) return;\n\n\t\t//! lib側の関数を使用して正答率を計算。\n\t\tconst accuracy = KochTrainer.calculateAccuracy(\n\t\t\tthis.customState.customCorrectAnswer,\n\t\t\tthis.customState.customUserInput\n\t\t);\n\n\t\tconst userAnswer = this.customState.customUserInput.replace(/\\s+/g, '');\n\t\tconst correctAnswer = this.customState.customCorrectAnswer.replace(/\\s+/g, '');\n\n\t\tresultContainer.innerHTML = `\n\t\t\t<div class=\"result\">\n\t\t\t\t<h2>練習結果</h2>\n\t\t\t\t<div class=\"accuracy\">正答率: ${accuracy}%</div>\n\t\t\t\t<div class=\"comparison\">\n\t\t\t\t\t<div>送信: ${correctAnswer}</div>\n\t\t\t\t\t<div>あなたの入力: ${userAnswer}</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"actions\">\n\t\t\t\t\t<button id=\"retryCustomBtn\" class=\"btn\">もう一度</button>\n\t\t\t\t\t<button id=\"backToCustomMenuBtn\" class=\"btn primary\">戻る</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tdocument.getElementById('retryCustomBtn')?.addEventListener('click', () => {\n\t\t\tthis.customState.isCustomRunning = false;\n\t\t\tthis.render();\n\t\t\tthis.startCustom();\n\t\t});\n\n\t\tdocument.getElementById('backToCustomMenuBtn')?.addEventListener('click', () => {\n\t\t\tthis.customState.isCustomRunning = false;\n\t\t\tthis.render();\n\t\t});\n\t}\n\n\t//! ========== 設定モーダル ==========\n\n\tprivate showSettings(): void {\n\t\t//! 現在の設定値を取得（volumeを0-100の範囲に変換）。\n\t\tconst currentValues: SettingValues = {\n\t\t\tvolume: Math.round(this.settings.volume * 100),\n\t\t\tfrequency: this.settings.frequency,\n\t\t\twpm: this.settings.characterSpeed,\n\t\t\tcharacterSpeed: this.settings.characterSpeed,\n\t\t\teffectiveSpeed: this.settings.effectiveSpeed,\n\t\t\tpracticeDuration: this.settings.practiceDuration,\n\t\t\tgroupSize: this.settings.groupSize,\n\t\t\tshowInput: this.settings.showInput\n\t\t};\n\n\t\t//! 設定変更前の値を保存（キャンセル時の復元用）。\n\t\tconst savedSettings = { ...this.settings };\n\n\t\t//! SettingsModalを作成。\n\t\tconst modal = new SettingsModal(\n\t\t\t'koch-settings-modal',\n\t\t\tALL_SETTING_ITEMS,\n\t\t\tcurrentValues,\n\t\t\t{\n\t\t\t\tonSave: (values: SettingValues) => {\n\t\t\t\t\t//! 実効速度は文字速度を上限とする。\n\t\t\t\t\tlet effSpeed = values.effectiveSpeed as number;\n\t\t\t\t\tconst charSpeed = values.characterSpeed as number;\n\t\t\t\t\tif (effSpeed > charSpeed) {\n\t\t\t\t\t\teffSpeed = charSpeed;\n\t\t\t\t\t}\n\n\t\t\t\t\t//! 設定を保存。\n\t\t\t\t\tthis.settings.characterSpeed = charSpeed;\n\t\t\t\t\tthis.settings.effectiveSpeed = effSpeed;\n\t\t\t\t\tthis.settings.frequency = values.frequency as number;\n\t\t\t\t\tthis.settings.volume = (values.volume as number) / 100;\n\t\t\t\t\tthis.settings.practiceDuration = values.practiceDuration as number;\n\t\t\t\t\tthis.settings.groupSize = values.groupSize as number;\n\t\t\t\t\tthis.settings.showInput = values.showInput as boolean;\n\n\t\t\t\t\tthis.saveSettings();\n\n\t\t\t\t\t//! AudioGeneratorを更新。\n\t\t\t\t\tthis.audio.updateSettings({\n\t\t\t\t\t\tfrequency: this.settings.frequency,\n\t\t\t\t\t\tvolume: this.settings.volume,\n\t\t\t\t\t\twpm: this.settings.characterSpeed,\n\t\t\t\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t\t\t\t});\n\n\t\t\t\t\t//! 練習中の場合、表示を更新。\n\t\t\t\t\tif (this.state.groups.length > 0) {\n\t\t\t\t\t\tthis.renderPractice();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonCancel: () => {\n\t\t\t\t\t//! 設定を元に戻す。\n\t\t\t\t\tthis.settings = { ...savedSettings };\n\t\t\t\t\tthis.audio.updateSettings({\n\t\t\t\t\t\tfrequency: savedSettings.frequency,\n\t\t\t\t\t\tvolume: savedSettings.volume,\n\t\t\t\t\t\twpm: savedSettings.characterSpeed,\n\t\t\t\t\t\teffectiveWpm: savedSettings.effectiveSpeed\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t//! モーダルを表示。\n\t\tmodal.show('koch');\n\t}\n\n\t//! ========== レンダリング ==========\n\n\trender(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"settings-icon\" id=\"settingsIcon\">\n\t\t\t\t<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<button class=\"back-btn\" id=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t<h1>コッホ法トレーニング</h1>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"tabs\">\n\t\t\t\t\t<button class=\"tab-button ${this.viewMode === 'learning' ? 'active' : ''}\" data-tab=\"learning\">基本学習</button>\n\t\t\t\t\t<button class=\"tab-button ${this.viewMode === 'custom' ? 'active' : ''}\" data-tab=\"custom\">任意文字列練習</button>\n\t\t\t\t</div>\n\n\t\t\t\t${this.renderModeContent()}\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachEventListeners();\n\t}\n\n\tprivate renderModeContent(): string {\n\t\tswitch (this.viewMode) {\n\t\t\tcase 'learning':\n\t\t\t\treturn this.renderLearningMode();\n\t\t\tcase 'custom':\n\t\t\t\treturn this.renderCustomMode();\n\t\t\tdefault:\n\t\t\t\treturn this.renderLearningMode();\n\t\t}\n\t}\n\n\tprivate renderLearningMode(): string {\n\t\tconst chars = KochTrainer.getCharsForLesson(this.state.currentLesson);\n\t\tconst lessonList = KOCH_SEQUENCE.slice(0, 40).map((_, index) => {\n\t\t\tconst lessonNum = index + 1;\n\t\t\tconst lessonChars = KochTrainer.getCharsForLesson(lessonNum);\n\t\t\tconst isCurrent = lessonNum === this.state.currentLesson;\n\t\t\tconst isPassed = lessonNum < this.state.currentLesson;\n\t\t\treturn `\n\t\t\t\t<div class=\"lesson-item ${isCurrent ? 'current' : ''} ${isPassed ? 'passed' : ''}\" data-lesson=\"${lessonNum}\">\n\t\t\t\t\t<div class=\"lesson-num\">L${lessonNum}</div>\n\t\t\t\t\t<div class=\"lesson-chars\">${lessonChars.join('')}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}).join('');\n\n\t\treturn `\n\t\t\t<div class=\"flashcard-container\">\n\t\t\t\t<div class=\"lesson-info\">\n\t\t\t\t\t<h2>レッスン ${this.state.currentLesson} / 40</h2>\n\t\t\t\t\t<div class=\"chars\">学習文字: ${chars.join('')}</div>\n\t\t\t\t\t<button id=\"startBtn\" class=\"btn btn-primary\">練習開始</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"practiceContainer\"></div>\n\t\t\t\t<div id=\"resultContainer\"></div>\n\n\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t<h3>使い方</h3>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>「練習開始」をクリックしてモールス信号を聞く</li>\n\t\t\t\t\t\t<li>聞こえた文字を入力</li>\n\t\t\t\t\t\t<li>90%以上の正答率で次のレッスンへ</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"lesson-list-section\">\n\t\t\t\t\t<h3>レッスン一覧</h3>\n\t\t\t\t\t<div class=\"lesson-list\">\n\t\t\t\t\t\t${lessonList}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tprivate renderCustomMode(): string {\n\t\tif (!this.customState.isCustomRunning) {\n\t\t\t//! 文字選択画面。\n\t\t\tconst charButtons = KOCH_SEQUENCE.map(char => `\n\t\t\t\t<button class=\"char-select-btn ${this.customState.selectedChars.has(char) ? 'selected' : ''}\" data-char=\"${char}\">\n\t\t\t\t\t${char}\n\t\t\t\t</button>\n\t\t\t`).join('');\n\n\t\t\treturn `\n\t\t\t\t<div class=\"flashcard-container\">\n\t\t\t\t\t<div class=\"lesson-info\">\n\t\t\t\t\t\t<h2>任意文字列練習モード</h2>\n\t\t\t\t\t\t<p>練習したい文字を選択してください（最低2文字）</p>\n\t\t\t\t\t\t<div class=\"char-selection\">\n\t\t\t\t\t\t\t${charButtons}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button id=\"startCustomBtn\" class=\"btn btn-primary\" ${this.customState.selectedChars.size < 2 ? 'disabled' : ''}>練習開始</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t\t<h3>使い方</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>練習したい文字をクリックして選択</li>\n\t\t\t\t\t\t\t<li>2文字以上選択すると練習開始可能</li>\n\t\t\t\t\t\t\t<li>選択した文字のみでランダムな練習問題が生成されます</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t} else {\n\t\t\t//! 練習実行画面。\n\t\t\treturn `\n\t\t\t\t<div class=\"flashcard-container\">\n\t\t\t\t\t<div id=\"customPracticeContainer\"></div>\n\t\t\t\t\t<div id=\"customResultContainer\"></div>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\t}\n\n\tprivate renderPractice(): void {\n\t\tconst practiceContainer = document.getElementById('practiceContainer');\n\t\tif (!practiceContainer) return;\n\n\t\tconst chars = KochTrainer.getCharsForLesson(this.state.currentLesson);\n\n\t\tpracticeContainer.innerHTML = `\n\t\t\t<div class=\"practice-area\">\n\t\t\t\t<div class=\"progress-section\">\n\t\t\t\t\t<div class=\"progress-bar-container\">\n\t\t\t\t\t\t<div id=\"progressBar\" class=\"progress-bar\" style=\"width: 0%\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"lessonProgress\" class=\"progress-text\">準備完了 - 再生ボタンを押してください</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"playback-controls\">\n\t\t\t\t\t<button id=\"playBtn\" class=\"control-btn\" title=\"再生\">\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M8 5v14l11-7z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"pauseBtn\" class=\"control-btn\" title=\"一時停止\" disabled>\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M6 4h4v16H6V4zm8 0h4v16h-4V4z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"stopBtn\" class=\"control-btn\" title=\"停止\">\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<rect x=\"6\" y=\"6\" width=\"12\" height=\"12\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<textarea id=\"userInput\" class=\"input-area\" placeholder=\"聞こえた文字を入力...\" ${this.settings.showInput ? '' : 'style=\"opacity: 0.3; pointer-events: none;\"'}></textarea>\n\t\t\t\t${this.renderKeyboard(chars)}\n\t\t\t</div>\n\t\t`;\n\n\t\tconst inputEl = document.getElementById('userInput') as HTMLTextAreaElement;\n\t\tif (inputEl) {\n\t\t\tinputEl.addEventListener('input', (e) => {\n\t\t\t\tthis.state.userInput = (e.target as HTMLTextAreaElement).value.toUpperCase();\n\t\t\t});\n\t\t}\n\n\t\tdocument.getElementById('playBtn')?.addEventListener('click', () => {\n\t\t\tthis.playMorse();\n\t\t});\n\n\t\tdocument.getElementById('pauseBtn')?.addEventListener('click', () => {\n\t\t\tthis.pauseMorse();\n\t\t});\n\n\t\tdocument.getElementById('stopBtn')?.addEventListener('click', () => {\n\t\t\tthis.stopLesson();\n\t\t});\n\n\t\t//! キーボードボタンのイベント設定。\n\t\tthis.setupKeyboardEvents(chars);\n\t\tthis.updatePlaybackButtons();\n\t}\n\n\tprivate renderCustomPractice(): void {\n\t\tconst container = document.getElementById('customPracticeContainer');\n\t\tif (!container) return;\n\n\t\tcontainer.innerHTML = `\n\t\t\t<div class=\"practice-area\">\n\t\t\t\t<div class=\"progress-section\">\n\t\t\t\t\t<div class=\"progress-bar-container\">\n\t\t\t\t\t\t<div id=\"customProgressBar\" class=\"progress-bar\" style=\"width: 0%\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"customProgress\" class=\"progress-text\">準備完了 - 再生ボタンを押してください</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"playback-controls\">\n\t\t\t\t\t<button id=\"customPlayBtn\" class=\"control-btn\" title=\"再生\">\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M8 5v14l11-7z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"customPauseBtn\" class=\"control-btn\" title=\"一時停止\" disabled>\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M6 4h4v16H6V4zm8 0h4v16h-4V4z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"customStopBtn\" class=\"control-btn\" title=\"停止\">\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<rect x=\"6\" y=\"6\" width=\"12\" height=\"12\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t${this.settings.showInput ? `\n\t\t\t\t\t<textarea id=\"customInputArea\" class=\"input-area\" placeholder=\"聞こえた文字を入力してください...\"></textarea>\n\t\t\t\t` : ''}\n\n\t\t\t\t<button id=\"customEndBtn\" class=\"btn btn-primary\">結果を見る</button>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.setupCustomControls();\n\t}\n\n\tprivate renderKeyboard(availableChars: string[]): string {\n\t\tconst groups: string[][] = [];\n\n\t\t//! KOCH_SEQUENCEをgroupSizeごとに分割。\n\t\tfor (let i = 0; i < KOCH_SEQUENCE.length; i += this.settings.groupSize) {\n\t\t\tgroups.push(KOCH_SEQUENCE.slice(i, i + this.settings.groupSize));\n\t\t}\n\n\t\treturn `\n\t\t\t<div class=\"keyboard\">\n\t\t\t\t<div class=\"keyboard-header\">\n\t\t\t\t\t<small>グループベースキーボード（学習済み文字のみ有効）</small>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"keyboard-controls\">\n\t\t\t\t\t<button id=\"spaceBtn\" class=\"key-btn special\">スペース</button>\n\t\t\t\t\t<button id=\"backspaceBtn\" class=\"key-btn special\">1字削除</button>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"keyboard-groups-wrapper\">\n\t\t\t\t\t<div class=\"keyboard-groups\">\n\t\t\t\t\t\t${groups.map((group, groupIndex) => `\n\t\t\t\t\t\t\t<div class=\"keyboard-group\">\n\t\t\t\t\t\t\t\t<div class=\"group-label\">G${groupIndex + 1}</div>\n\t\t\t\t\t\t\t\t<div class=\"group-keys\">\n\t\t\t\t\t\t\t\t\t${group.map(char => {\n\t\t\t\t\t\t\t\t\t\tconst isLearned = availableChars.includes(char);\n\t\t\t\t\t\t\t\t\t\treturn `\n\t\t\t\t\t\t\t\t\t\t\t<button class=\"key-btn ${isLearned ? '' : 'disabled'}\"\n\t\t\t\t\t\t\t\t\t\t\t        data-char=\"${char}\"\n\t\t\t\t\t\t\t\t\t\t\t        ${isLearned ? '' : 'disabled'}>\n\t\t\t\t\t\t\t\t\t\t\t\t${char}\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t`;\n\t\t\t\t\t\t\t\t\t}).join('')}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t`).join('')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tprivate setupKeyboardEvents(availableChars: string[]): void {\n\t\tconst inputEl = document.getElementById('userInput') as HTMLTextAreaElement;\n\t\tif (!inputEl) return;\n\n\t\t//! 文字キー。\n\t\tdocument.querySelectorAll('.key-btn:not(.special)').forEach(btn => {\n\t\t\tbtn.addEventListener('click', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tconst char = (e.target as HTMLButtonElement).getAttribute('data-char');\n\t\t\t\tif (char && availableChars.includes(char)) {\n\t\t\t\t\tinputEl.value += char;\n\t\t\t\t\tthis.state.userInput = inputEl.value.toUpperCase();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! スペースキー。\n\t\tdocument.getElementById('spaceBtn')?.addEventListener('click', (e) => {\n\t\t\te.preventDefault();\n\t\t\tinputEl.value += ' ';\n\t\t\tthis.state.userInput = inputEl.value.toUpperCase();\n\t\t});\n\n\t\t//! バックスペースキー。\n\t\tdocument.getElementById('backspaceBtn')?.addEventListener('click', (e) => {\n\t\t\te.preventDefault();\n\t\t\tinputEl.value = inputEl.value.slice(0, -1);\n\t\t\tthis.state.userInput = inputEl.value.toUpperCase();\n\t\t});\n\t}\n\n\tprivate setupCustomControls(): void {\n\t\t//! 入力欄のイベントリスナー。\n\t\tconst inputEl = document.getElementById('customInputArea') as HTMLTextAreaElement;\n\t\tif (inputEl) {\n\t\t\tinputEl.addEventListener('input', (e) => {\n\t\t\t\tthis.customState.customUserInput = (e.target as HTMLTextAreaElement).value.toUpperCase();\n\t\t\t});\n\t\t}\n\n\t\tdocument.getElementById('customPlayBtn')?.addEventListener('click', () => {\n\t\t\tthis.playCustomMorse();\n\t\t});\n\n\t\tdocument.getElementById('customPauseBtn')?.addEventListener('click', () => {\n\t\t\tthis.pauseCustomMorse();\n\t\t});\n\n\t\tdocument.getElementById('customStopBtn')?.addEventListener('click', () => {\n\t\t\tthis.stopCustom();\n\t\t});\n\n\t\tdocument.getElementById('customEndBtn')?.addEventListener('click', () => {\n\t\t\tthis.showCustomResult();\n\t\t});\n\n\t\tthis.updateCustomPlaybackButtons();\n\t}\n\n\tprivate attachEventListeners(): void {\n\t\t//! 戻るボタン。\n\t\tdocument.getElementById('back-btn')?.addEventListener('click', () => {\n\t\t\twindow.location.hash = '#menu';\n\t\t});\n\n\t\t//! 設定アイコン。\n\t\tdocument.getElementById('settingsIcon')?.addEventListener('click', () => {\n\t\t\tthis.showSettings();\n\t\t});\n\n\t\t//! タブボタン。\n\t\tdocument.querySelectorAll('.tab-button').forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst tab = btn.getAttribute('data-tab') as ViewMode;\n\t\t\t\tif (tab) {\n\t\t\t\t\tthis.viewMode = tab;\n\t\t\t\t\tthis.saveViewMode();\n\t\t\t\t\tthis.render();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! モード別のイベントリスナーを設定。\n\t\tthis.setupModeEventListeners();\n\t}\n\n\tprivate setupModeEventListeners(): void {\n\t\tif (this.viewMode === 'learning') {\n\t\t\tdocument.getElementById('startBtn')?.addEventListener('click', () => {\n\t\t\t\tthis.startLesson();\n\t\t\t});\n\n\t\t\t//! レッスンアイテムのクリックイベント。\n\t\t\tdocument.querySelectorAll('.lesson-item').forEach(item => {\n\t\t\t\titem.addEventListener('click', () => {\n\t\t\t\t\tconst lessonNum = parseInt(item.getAttribute('data-lesson') || '1', 10);\n\t\t\t\t\tthis.state.currentLesson = lessonNum;\n\t\t\t\t\tthis.saveProgress();\n\t\t\t\t\tthis.render();\n\t\t\t\t\twindow.scrollTo({ top: 0, behavior: 'smooth' });\n\t\t\t\t});\n\t\t\t});\n\t\t} else if (this.viewMode === 'custom') {\n\t\t\tif (!this.customState.isCustomRunning) {\n\t\t\t\tdocument.getElementById('startCustomBtn')?.addEventListener('click', () => {\n\t\t\t\t\tthis.startCustom();\n\t\t\t\t});\n\n\t\t\t\t//! 文字選択ボタン。\n\t\t\t\tdocument.querySelectorAll('.char-select-btn').forEach(btn => {\n\t\t\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\t\t\tconst char = btn.getAttribute('data-char');\n\t\t\t\t\t\tif (char) {\n\t\t\t\t\t\t\tif (this.customState.selectedChars.has(char)) {\n\t\t\t\t\t\t\t\tthis.customState.selectedChars.delete(char);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.customState.selectedChars.add(char);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.saveSelectedChars();\n\t\t\t\t\t\t\tthis.render();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy(): void {\n\t\t//! 音声を停止。\n\t\tthis.audio.stopPlaying();\n\t}\n}\n","/**\n * 聞き取り練習ビュー\n */\n\nimport type { View } from '../../router';\nimport {\n\tListeningTrainer,\n\tAudioGenerator,\n\tMorseCodec,\n\ttype ListeningTemplate,\n\ttype TemplateCategory\n} from 'morse-engine';\nimport { downloadBlob, sanitizeFilename } from '../../utils/download-helper';\nimport { SettingsModal, ALL_SETTING_ITEMS, type SettingValues } from 'morse-engine';\n\ninterface ListeningSettings {\n\tcharacterSpeed: number;\n\teffectiveSpeed: number;\n\tfrequency: number;\n\tbFrequency: number;  // B側（相手方）の周波数\n\tvolume: number;\n}\n\nconst DEFAULT_SETTINGS: ListeningSettings = {\n\tcharacterSpeed: 20,\n\teffectiveSpeed: 15,\n\tfrequency: 700,\n\tbFrequency: 600,  // B側のデフォルト周波数\n\tvolume: 0.7\n};\n\ninterface State {\n\tcurrentCategory: TemplateCategory | 'custom';\n\tselectedTemplate: ListeningTemplate | null;\n\tisPlaying: boolean;\n\tuserInput: string;\n\tshowResult: boolean;\n\tshowAnswer: boolean;\n\tshowDialogFormat: boolean;\n}\n\n/**\n * 聞き取り練習ビュークラス\n */\nexport class ListeningView implements View {\n\tprivate audio: AudioGenerator;  // A側（自局）のAudioGenerator\n\tprivate audioB: AudioGenerator;  // B側（相手方）のAudioGenerator\n\tprivate settings: ListeningSettings = { ...DEFAULT_SETTINGS };\n\n\tprivate state: State = {\n\t\tcurrentCategory: 'qso',\n\t\tselectedTemplate: null,\n\t\tisPlaying: false,\n\t\tuserInput: '',\n\t\tshowResult: false,\n\t\tshowAnswer: false,\n\t\tshowDialogFormat: false\n\t};\n\n\tprivate customTemplates: ListeningTemplate[] = [];\n\n\tconstructor() {\n\t\t//! 設定を読み込む。\n\t\tthis.loadSettings();\n\t\tthis.loadCategory();\n\t\tthis.loadCustomTemplates();\n\n\t\t//! A側のAudioGeneratorを初期化。\n\t\tthis.audio = new AudioGenerator({\n\t\t\tfrequency: this.settings.frequency,\n\t\t\tvolume: this.settings.volume,\n\t\t\twpm: this.settings.characterSpeed,\n\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t});\n\n\t\t//! B側のAudioGeneratorを初期化。\n\t\tthis.audioB = new AudioGenerator({\n\t\t\tfrequency: this.settings.bFrequency,\n\t\t\tvolume: this.settings.volume,\n\t\t\twpm: this.settings.characterSpeed,\n\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t});\n\t}\n\n\t//! ========== 設定管理 ==========\n\n\tprivate loadSettings(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.listening.settings');\n\t\t\tif (saved) {\n\t\t\t\tthis.settings = { ...DEFAULT_SETTINGS, ...JSON.parse(saved) };\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load settings:', error);\n\t\t}\n\t}\n\n\tprivate saveSettings(): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem('v10.listening.settings', JSON.stringify(this.settings));\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save settings:', error);\n\t\t}\n\t}\n\n\tprivate loadCategory(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.listening.category') as TemplateCategory | 'custom' | null;\n\t\t\tif (saved && ['qso', 'text100', 'text200', 'text300', 'custom'].includes(saved)) {\n\t\t\t\tthis.state.currentCategory = saved;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load category:', error);\n\t\t}\n\t}\n\n\tprivate saveCategory(): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem('v10.listening.category', this.state.currentCategory);\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save category:', error);\n\t\t}\n\t}\n\n\tprivate loadCustomTemplates(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.listening.customTemplates');\n\t\t\tif (saved) {\n\t\t\t\tthis.customTemplates = JSON.parse(saved);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load custom templates:', error);\n\t\t}\n\t}\n\n\tprivate saveCustomTemplates(): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem('v10.listening.customTemplates', JSON.stringify(this.customTemplates));\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save custom templates:', error);\n\t\t}\n\t}\n\n\t//! ========== テンプレート管理 ==========\n\n\tprivate getTemplates(): ListeningTemplate[] {\n\t\tif (this.state.currentCategory === 'custom') {\n\t\t\t//! ランダムQSO生成ボタンを追加。\n\t\t\tconst randomButton: ListeningTemplate = {\n\t\t\t\tid: 'qso-random-generate',\n\t\t\t\tcategory: 'qso',\n\t\t\t\ttitle: 'ランダムQSO生成',\n\t\t\t\tcontent: ''\n\t\t\t};\n\t\t\treturn [randomButton, ...this.customTemplates];\n\t\t} else {\n\t\t\tconst builtin = ListeningTrainer.getBuiltinTemplates(this.state.currentCategory);\n\t\t\t//! QSOカテゴリーにはランダムQSO生成ボタンを追加。\n\t\t\tif (this.state.currentCategory === 'qso') {\n\t\t\t\tconst randomButton: ListeningTemplate = {\n\t\t\t\t\tid: 'qso-random-generate',\n\t\t\t\t\tcategory: 'qso',\n\t\t\t\t\ttitle: 'ランダムQSO生成',\n\t\t\t\t\tcontent: ''\n\t\t\t\t};\n\t\t\t\treturn [randomButton, ...builtin];\n\t\t\t}\n\t\t\treturn builtin;\n\t\t}\n\t}\n\n\t//! ========== 再生制御 ==========\n\n\tprivate async playMorse(): Promise<void> {\n\t\tif (!this.state.selectedTemplate || this.state.isPlaying) return;\n\n\t\tthis.state.isPlaying = true;\n\t\tthis.updatePlaybackButtons();\n\n\t\t//! テンプレートに応じて再生（dialogがあればA/B交互、なければcontentを再生）。\n\t\tif (this.state.showDialogFormat && this.state.selectedTemplate.dialog) {\n\t\t\t//! 対話形式で再生（A側とB側を交互に再生）。\n\t\t\tawait this.playDialogQSO(this.state.selectedTemplate);\n\t\t} else if (this.state.selectedTemplate.content) {\n\t\t\t//! 通常モードで再生（全体をA側で再生）。\n\t\t\tconst morse = MorseCodec.textToMorse(this.state.selectedTemplate.content);\n\t\t\tawait this.audio.playMorseString(morse);\n\t\t}\n\n\t\tthis.state.isPlaying = false;\n\t\tthis.updatePlaybackButtons();\n\t}\n\n\t/**\n\t * テンプレートからテキストを取得する\n\t * @param template - テンプレート\n\t * @returns 表示用テキスト\n\t */\n\tprivate getTemplateText(template: ListeningTemplate): string {\n\t\tif (template.dialog && template.dialog.length > 0) {\n\t\t\treturn template.dialog.map(seg => seg.text).join(' BT ');\n\t\t}\n\t\treturn template.content || '';\n\t}\n\n\t/**\n\t * 対話形式のQSOを再生する\n\t * A側とB側を交互に異なる周波数で再生\n\t * @param template - 再生するテンプレート\n\t */\n\tprivate async playDialogQSO(template: ListeningTemplate): Promise<void> {\n\t\t//! dialogがない場合（テキストカテゴリ）はcontentを再生。\n\t\tif (!template.dialog || template.dialog.length === 0) {\n\t\t\tif (template.content) {\n\t\t\t\tconst morse = MorseCodec.textToMorse(template.content);\n\t\t\t\tawait this.audio.playMorseString(morse);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t//! 各セグメントを交互にA側とB側で再生。\n\t\tfor (let i = 0; i < template.dialog.length; i++) {\n\t\t\tconst segment = template.dialog[i];\n\t\t\tconst morse = MorseCodec.textToMorse(segment.text);\n\n\t\t\t//! A側またはB側のAudioGeneratorを選択。\n\t\t\tconst generator = segment.side === 'A' ? this.audio : this.audioB;\n\t\t\tawait generator.playMorseString(morse);\n\n\t\t\t//! セグメント間に短い間隔を入れる。\n\t\t\tif (i < template.dialog.length - 1) {\n\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 500));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate pauseMorse(): void {\n\t\tthis.audio.stopPlaying();\n\t\tthis.state.isPlaying = false;\n\t\tthis.updatePlaybackButtons();\n\t}\n\n\tprivate stopMorse(): void {\n\t\tthis.audio.stopPlaying();\n\t\tthis.state.isPlaying = false;\n\t\tthis.state.userInput = '';\n\t\tthis.state.showResult = false;\n\t\tthis.state.showAnswer = false;\n\t\tthis.renderPracticeArea();\n\t}\n\n\n\tprivate updatePlaybackButtons(): void {\n\t\tconst playBtn = document.getElementById('playBtn') as HTMLButtonElement;\n\t\tconst pauseBtn = document.getElementById('pauseBtn') as HTMLButtonElement;\n\n\t\tif (playBtn) playBtn.disabled = this.state.isPlaying;\n\t\tif (pauseBtn) pauseBtn.disabled = !this.state.isPlaying;\n\t}\n\n\t//! ========== 採点と結果表示 ==========\n\n\tprivate checkAnswer(): void {\n\t\tif (!this.state.selectedTemplate) return;\n\n\t\tthis.state.showResult = true;\n\t\tthis.state.showAnswer = true;\n\t\tthis.renderPracticeArea();\n\t}\n\n\tprivate toggleAnswer(): void {\n\t\tthis.state.showAnswer = !this.state.showAnswer;\n\t\tthis.renderPracticeArea();\n\t}\n\n\tprivate toggleDialogFormat(): void {\n\t\tthis.state.showDialogFormat = !this.state.showDialogFormat;\n\t\tthis.renderAnswer();\n\t}\n\n\t//! ========== カスタムテンプレート管理 ==========\n\n\tprivate showCustomTemplateDialog(template?: ListeningTemplate): void {\n\t\tconst isEdit = !!template;\n\t\tconst title = isEdit ? template.title : '';\n\t\tconst content = isEdit ? template.content : '';\n\n\t\tconst modal = document.createElement('div');\n\t\tmodal.className = 'modal-overlay';\n\t\tmodal.innerHTML = `\n\t\t\t<div class=\"modal\">\n\t\t\t\t<h2>${isEdit ? 'テンプレート編集' : 'テンプレート新規作成'}</h2>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label for=\"templateTitle\">タイトル:</label>\n\t\t\t\t\t<input type=\"text\" id=\"templateTitle\" value=\"${title}\" placeholder=\"タイトルを入力\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label for=\"templateContent\">内容:</label>\n\t\t\t\t\t<textarea id=\"templateContent\" placeholder=\"モールス信号に変換するテキストを入力\">${content}</textarea>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"modal-actions\">\n\t\t\t\t\t<button id=\"saveTemplateBtn\" class=\"btn btn-primary\">保存</button>\n\t\t\t\t\t<button id=\"cancelTemplateBtn\" class=\"btn\">キャンセル</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t\tdocument.body.appendChild(modal);\n\n\t\t//! 保存ボタン。\n\t\tdocument.getElementById('saveTemplateBtn')?.addEventListener('click', () => {\n\t\t\tconst titleInput = document.getElementById('templateTitle') as HTMLInputElement;\n\t\t\tconst contentInput = document.getElementById('templateContent') as HTMLTextAreaElement;\n\n\t\t\tif (!titleInput.value.trim() || !contentInput.value.trim()) {\n\t\t\t\talert('タイトルと内容を入力してください');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isEdit && template) {\n\t\t\t\t//! 既存テンプレートを更新。\n\t\t\t\ttemplate.title = titleInput.value.trim();\n\t\t\t\ttemplate.content = contentInput.value.trim().toUpperCase();\n\t\t\t} else {\n\t\t\t\t//! 新規テンプレートを追加。\n\t\t\t\tconst newTemplate: ListeningTemplate = {\n\t\t\t\t\tid: `custom-${Date.now()}`,\n\t\t\t\t\tcategory: 'qso',\n\t\t\t\t\ttitle: titleInput.value.trim(),\n\t\t\t\t\tcontent: contentInput.value.trim().toUpperCase()\n\t\t\t\t};\n\t\t\t\tthis.customTemplates.push(newTemplate);\n\t\t\t}\n\n\t\t\tthis.saveCustomTemplates();\n\t\t\tmodal.remove();\n\t\t\tthis.render();\n\t\t});\n\n\t\t//! キャンセルボタン。\n\t\tdocument.getElementById('cancelTemplateBtn')?.addEventListener('click', () => {\n\t\t\tmodal.remove();\n\t\t});\n\n\t\t//! モーダル外クリックで閉じる。\n\t\tmodal.addEventListener('click', (e) => {\n\t\t\tif (e.target === modal) {\n\t\t\t\tmodal.remove();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate deleteCustomTemplate(id: string): void {\n\t\tif (confirm('この定型文を削除しますか?')) {\n\t\t\tthis.customTemplates = this.customTemplates.filter(t => t.id !== id);\n\t\t\tthis.saveCustomTemplates();\n\t\t\tthis.render();\n\t\t}\n\t}\n\n\t//! ========== 設定モーダル ==========\n\n\tprivate showSettings(): void {\n\t\t//! 現在の設定値を取得（volumeを0-100の範囲に変換）。\n\t\tconst currentValues: SettingValues = {\n\t\t\tcharacterSpeed: this.settings.characterSpeed,\n\t\t\teffectiveSpeed: this.settings.effectiveSpeed,\n\t\t\tfrequency: this.settings.frequency,\n\t\t\tbFrequency: this.settings.bFrequency,\n\t\t\tvolume: Math.round(this.settings.volume * 100)\n\t\t};\n\n\t\t//! 設定変更前の値を保存（キャンセル時の復元用）。\n\t\tconst savedSettings = { ...this.settings };\n\n\t\t//! SettingsModalを作成。\n\t\tconst modal = new SettingsModal(\n\t\t\t'listening-settings-modal',\n\t\t\tALL_SETTING_ITEMS,\n\t\t\tcurrentValues,\n\t\t\t{\n\t\t\t\tonSave: (values: SettingValues) => {\n\t\t\t\t\t//! 実効速度は文字速度を上限とする。\n\t\t\t\t\tlet effSpeed = values.effectiveSpeed as number;\n\t\t\t\t\tconst charSpeed = values.characterSpeed as number;\n\t\t\t\t\tif (effSpeed > charSpeed) {\n\t\t\t\t\t\teffSpeed = charSpeed;\n\t\t\t\t\t}\n\n\t\t\t\t\t//! 設定を保存。\n\t\t\t\t\tthis.settings.characterSpeed = charSpeed;\n\t\t\t\t\tthis.settings.effectiveSpeed = effSpeed;\n\t\t\t\t\tthis.settings.frequency = values.frequency as number;\n\t\t\t\t\tthis.settings.bFrequency = values.bFrequency as number;\n\t\t\t\t\tthis.settings.volume = (values.volume as number) / 100;\n\n\t\t\t\t\tthis.saveSettings();\n\n\t\t\t\t\t//! A側のAudioGeneratorを更新。\n\t\t\t\t\tthis.audio.updateSettings({\n\t\t\t\t\t\tfrequency: this.settings.frequency,\n\t\t\t\t\t\tvolume: this.settings.volume,\n\t\t\t\t\t\twpm: this.settings.characterSpeed,\n\t\t\t\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t\t\t\t});\n\n\t\t\t\t\t//! B側のAudioGeneratorを更新。\n\t\t\t\t\tthis.audioB.updateSettings({\n\t\t\t\t\t\tfrequency: this.settings.bFrequency,\n\t\t\t\t\t\tvolume: this.settings.volume,\n\t\t\t\t\t\twpm: this.settings.characterSpeed,\n\t\t\t\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tonCancel: () => {\n\t\t\t\t\t//! 設定を元に戻す。\n\t\t\t\t\tthis.settings = { ...savedSettings };\n\t\t\t\t\tthis.audio.updateSettings({\n\t\t\t\t\t\tfrequency: savedSettings.frequency,\n\t\t\t\t\t\tvolume: savedSettings.volume,\n\t\t\t\t\t\twpm: savedSettings.characterSpeed,\n\t\t\t\t\t\teffectiveWpm: savedSettings.effectiveSpeed\n\t\t\t\t\t});\n\t\t\t\t\tthis.audioB.updateSettings({\n\t\t\t\t\t\tfrequency: savedSettings.bFrequency,\n\t\t\t\t\t\tvolume: savedSettings.volume,\n\t\t\t\t\t\twpm: savedSettings.characterSpeed,\n\t\t\t\t\t\teffectiveWpm: savedSettings.effectiveSpeed\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tonTestPlay: async () => {\n\t\t\t\t\t//! テスト再生: A側とB側の周波数で順番に再生。\n\t\t\t\t\tconst morse = MorseCodec.textToMorse('CQ');\n\t\t\t\t\tawait this.audio.playMorseString(morse);\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 500));\n\t\t\t\t\tawait this.audioB.playMorseString(morse);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t//! モーダルを表示。\n\t\tmodal.show('listening');\n\t}\n\n\t//! ========== レンダリング ==========\n\n\trender(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"settings-icon\" id=\"settingsIcon\">\n\t\t\t\t<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<button id=\"backBtn\" class=\"back-btn\">← 戻る</button>\n\t\t\t\t\t<h1>モールス信号聞き取り練習</h1>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"tabs\">\n\t\t\t\t\t${this.renderCategoryTabs()}\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"content-area\">\n\t\t\t\t\t${this.state.selectedTemplate ? this.renderPracticeContent() : this.renderTemplateList()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachEventListeners();\n\t}\n\n\tprivate renderCategoryTabs(): string {\n\t\tconst categories: { id: TemplateCategory | 'custom'; label: string }[] = [\n\t\t\t{ id: 'qso', label: 'ラバースタンプQSO' },\n\t\t\t{ id: 'text100', label: '英文100字' },\n\t\t\t{ id: 'text200', label: '英文200字' },\n\t\t\t{ id: 'text300', label: '英文300字' },\n\t\t\t{ id: 'custom', label: 'ユーザー定義' }\n\t\t];\n\n\t\treturn categories\n\t\t\t.map(\n\t\t\t\tcat => `\n\t\t\t<button class=\"tab-button ${this.state.currentCategory === cat.id ? 'active' : ''}\" data-category=\"${cat.id}\">\n\t\t\t\t${cat.label}\n\t\t\t</button>\n\t\t`\n\t\t\t)\n\t\t\t.join('');\n\t}\n\n\tprivate renderTemplateList(): string {\n\t\tconst templates = this.getTemplates();\n\n\t\tif (templates.length === 0 || (templates.length === 1 && templates[0].id === 'qso-random-generate')) {\n\t\t\treturn `\n\t\t\t\t<div class=\"empty-state\">\n\t\t\t\t\t<p>定型文がありません</p>\n\t\t\t\t\t${this.state.currentCategory === 'custom' ? '<button id=\"addCustomBtn\" class=\"btn btn-primary\">新規作成</button>' : ''}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\treturn `\n\t\t\t<div class=\"template-list\">\n\t\t\t\t${this.state.currentCategory === 'custom' ? '<button id=\"addCustomBtn\" class=\"btn btn-primary\">新規作成</button>' : ''}\n\t\t\t\t${templates\n\t\t\t\t\t.map(template => {\n\t\t\t\t\t\tconst text = this.getTemplateText(template);\n\t\t\t\t\t\tconst preview = template.id === 'qso-random-generate'\n\t\t\t\t\t\t\t? 'コールサイン、地名、名前、RSレポート、リグなどがランダムに生成された完全なQSOが作成されます。毎回異なる内容で練習できます。'\n\t\t\t\t\t\t\t: `${text.substring(0, 100)}${text.length > 100 ? '...' : ''}`;\n\t\t\t\t\t\treturn `\n\t\t\t\t\t<div class=\"template-card\" data-template-id=\"${template.id}\">\n\t\t\t\t\t\t<h3>${template.title}</h3>\n\t\t\t\t\t\t<p class=\"template-preview\">${preview}</p>\n\t\t\t\t\t\t<div class=\"template-actions\">\n\t\t\t\t\t\t\t<button class=\"btn select-btn\" data-template-id=\"${template.id}\">選択</button>\n\t\t\t\t\t\t\t${\n\t\t\t\t\t\t\t\tthis.state.currentCategory === 'custom' && template.id !== 'qso-random-generate'\n\t\t\t\t\t\t\t\t\t? `\n\t\t\t\t\t\t\t\t<button class=\"btn edit-btn\" data-template-id=\"${template.id}\">編集</button>\n\t\t\t\t\t\t\t\t<button class=\"btn delete-btn\" data-template-id=\"${template.id}\">削除</button>\n\t\t\t\t\t\t\t`\n\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t`;\n\t\t\t\t\t})\n\t\t\t\t\t.join('')}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tprivate renderPracticeContent(): string {\n\t\tif (!this.state.selectedTemplate) return '';\n\n\t\treturn `\n\t\t\t<div class=\"practice-area\">\n\t\t\t\t<div class=\"practice-header\">\n\t\t\t\t\t<h2>${this.state.selectedTemplate.title}</h2>\n\t\t\t\t\t<button id=\"backToListBtn\" class=\"btn\">一覧に戻る</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"playback-controls\">\n\t\t\t\t\t<button id=\"playBtn\" class=\"control-btn\" title=\"再生\" ${this.state.isPlaying ? 'disabled' : ''}>\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M8 5v14l11-7z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"pauseBtn\" class=\"control-btn\" title=\"一時停止\" ${!this.state.isPlaying ? 'disabled' : ''}>\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M6 4h4v16H6V4zm8 0h4v16h-4V4z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"stopBtn\" class=\"control-btn\" title=\"停止\">\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<rect x=\"6\" y=\"6\" width=\"12\" height=\"12\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"downloadBtn\" class=\"control-btn\" title=\"WAVファイルとしてダウンロード\">\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"practiceInputArea\"></div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tprivate renderPracticeArea(): void {\n\t\tconst practiceInputArea = document.getElementById('practiceInputArea');\n\t\tif (!practiceInputArea) return;\n\n\t\tpracticeInputArea.innerHTML = `\n\t\t\t<div class=\"input-section\">\n\t\t\t\t<label for=\"userInput\">聞き取った内容を入力してください:</label>\n\t\t\t\t<textarea id=\"userInput\" class=\"input-area\" placeholder=\"聞き取った文字を入力...\">${this.state.userInput}</textarea>\n\t\t\t</div>\n\n\t\t\t<div class=\"action-buttons\">\n\t\t\t\t<button id=\"checkBtn\" class=\"btn btn-primary\">採点</button>\n\t\t\t\t<button id=\"showAnswerBtn\" class=\"btn\">${this.state.showAnswer ? '正解を非表示' : '正解を表示'}</button>\n\t\t\t</div>\n\n\t\t\t${this.state.showAnswer ? '<div id=\"answerArea\"></div>' : ''}\n\t\t\t${this.state.showResult ? '<div id=\"resultArea\"></div>' : ''}\n\t\t`;\n\n\t\t//! ユーザー入力の監視。\n\t\tconst userInput = document.getElementById('userInput') as HTMLTextAreaElement;\n\t\tuserInput?.addEventListener('input', () => {\n\t\t\tthis.state.userInput = userInput.value;\n\t\t});\n\n\t\t//! 採点ボタン。\n\t\tdocument.getElementById('checkBtn')?.addEventListener('click', () => {\n\t\t\tthis.checkAnswer();\n\t\t});\n\n\t\t//! 正解表示ボタン。\n\t\tdocument.getElementById('showAnswerBtn')?.addEventListener('click', () => {\n\t\t\tthis.toggleAnswer();\n\t\t});\n\n\t\t//! 正解と結果を描画。\n\t\tif (this.state.showAnswer) {\n\t\t\tthis.renderAnswer();\n\t\t}\n\t\tif (this.state.showResult) {\n\t\t\tthis.renderResult();\n\t\t}\n\t}\n\n\tprivate renderAnswer(): void {\n\t\tconst answerArea = document.getElementById('answerArea');\n\t\tif (!answerArea || !this.state.selectedTemplate) return;\n\n\t\tconst isQSO = this.state.selectedTemplate.category === 'qso';\n\t\tconst content = this.getTemplateText(this.state.selectedTemplate);\n\n\t\t//! 対話形式ボタン（QSOの場合のみ表示）。\n\t\tconst dialogButton = isQSO\n\t\t\t? `<button id=\"toggleDialogBtn\" class=\"btn\" style=\"margin-left: 10px;\">${this.state.showDialogFormat ? '通常表示' : '対話形式で表示'}</button>`\n\t\t\t: '';\n\n\t\t//! 対話形式表示の生成。\n\t\tlet answerContent = '';\n\t\tif (isQSO && this.state.showDialogFormat) {\n\t\t\t//! BTで区切って話者別に表示。\n\t\t\tconst segments = content.split(/\\s+BT\\s+/);\n\t\t\tanswerContent = `\n\t\t\t\t<table class=\"dialog-table\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t${segments.map((segment, index) => {\n\t\t\t\t\t\t\tconst speaker = index % 2 === 0 ? 'A' : 'B';\n\t\t\t\t\t\t\treturn `\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td class=\"speaker-cell\">${speaker}</td>\n\t\t\t\t\t\t\t\t\t<td class=\"content-cell\">${segment.trim()}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t`;\n\t\t\t\t\t\t}).join('')}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t`;\n\t\t} else {\n\t\t\tanswerContent = `<div class=\"answer-text\">${content}</div>`;\n\t\t}\n\n\t\tanswerArea.innerHTML = `\n\t\t\t<div class=\"answer-area\">\n\t\t\t\t<h3 style=\"display: inline-block;\">正解</h3>\n\t\t\t\t${dialogButton}\n\t\t\t\t${answerContent}\n\t\t\t</div>\n\t\t`;\n\n\t\t//! 対話形式ボタン。\n\t\tdocument.getElementById('toggleDialogBtn')?.addEventListener('click', () => {\n\t\t\tthis.toggleDialogFormat();\n\t\t});\n\t}\n\n\tprivate renderResult(): void {\n\t\tconst resultArea = document.getElementById('resultArea');\n\t\tif (!resultArea || !this.state.selectedTemplate) return;\n\n\t\tconst correctText = this.getTemplateText(this.state.selectedTemplate);\n\t\tconst accuracy = ListeningTrainer.calculateAccuracy(\n\t\t\tcorrectText,\n\t\t\tthis.state.userInput\n\t\t);\n\n\t\tresultArea.innerHTML = `\n\t\t\t<div class=\"result-area\">\n\t\t\t\t<h3>結果</h3>\n\t\t\t\t<div class=\"accuracy\">正答率: ${accuracy}%</div>\n\t\t\t\t<div class=\"comparison\">\n\t\t\t\t\t<div class=\"comparison-row\">\n\t\t\t\t\t\t<strong>正解:</strong>\n\t\t\t\t\t\t<div class=\"comparison-text\">${correctText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"comparison-row\">\n\t\t\t\t\t\t<strong>入力:</strong>\n\t\t\t\t\t\t<div class=\"comparison-text\">${this.state.userInput || '（未入力）'}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\t//! ========== イベントリスナー ==========\n\n\tprivate attachEventListeners(): void {\n\t\t//! 戻るボタン。\n\t\tdocument.getElementById('backBtn')?.addEventListener('click', () => {\n\t\t\twindow.location.hash = '#menu';\n\t\t});\n\n\t\t//! 設定アイコン。\n\t\tdocument.getElementById('settingsIcon')?.addEventListener('click', () => {\n\t\t\tthis.showSettings();\n\t\t});\n\n\t\t//! カテゴリータブ。\n\t\tdocument.querySelectorAll('.tab-button').forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst category = btn.getAttribute('data-category') as TemplateCategory | 'custom';\n\t\t\t\tif (category) {\n\t\t\t\t\tthis.state.currentCategory = category;\n\t\t\t\t\tthis.state.selectedTemplate = null;\n\t\t\t\t\tthis.state.showResult = false;\n\t\t\t\t\tthis.state.showAnswer = false;\n\t\t\t\t\tthis.state.showDialogFormat = false;\n\t\t\t\t\tthis.state.userInput = '';\n\t\t\t\t\tthis.saveCategory();\n\t\t\t\t\tthis.render();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! 定型文選択ボタン。\n\t\tdocument.querySelectorAll('.select-btn').forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst id = btn.getAttribute('data-template-id');\n\t\t\t\tif (id) {\n\t\t\t\t\t//! ランダムQSO生成ボタンの場合。\n\t\t\t\t\tif (id === 'qso-random-generate') {\n\t\t\t\t\t\tthis.state.selectedTemplate = ListeningTrainer.generateRandomQSO();\n\t\t\t\t\t\tthis.state.showResult = false;\n\t\t\t\t\t\tthis.state.showAnswer = false;\n\t\t\t\t\t\tthis.state.showDialogFormat = false;\n\t\t\t\t\t\tthis.state.userInput = '';\n\t\t\t\t\t\tthis.render();\n\t\t\t\t\t\tthis.renderPracticeArea();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//! 通常のテンプレート選択。\n\t\t\t\t\t\tconst allTemplates = [...ListeningTrainer.getBuiltinTemplates(), ...this.customTemplates];\n\t\t\t\t\t\tconst template = allTemplates.find(t => t.id === id);\n\t\t\t\t\t\tif (template) {\n\t\t\t\t\t\t\tthis.state.selectedTemplate = template;\n\t\t\t\t\t\t\tthis.state.showResult = false;\n\t\t\t\t\t\t\tthis.state.showAnswer = false;\n\t\t\t\t\t\t\tthis.state.showDialogFormat = false;\n\t\t\t\t\t\t\tthis.state.userInput = '';\n\t\t\t\t\t\t\tthis.render();\n\t\t\t\t\t\t\tthis.renderPracticeArea();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! 一覧に戻るボタン。\n\t\tdocument.getElementById('backToListBtn')?.addEventListener('click', () => {\n\t\t\tthis.state.selectedTemplate = null;\n\t\t\tthis.state.showResult = false;\n\t\t\tthis.state.showAnswer = false;\n\t\t\tthis.state.showDialogFormat = false;\n\t\t\tthis.state.userInput = '';\n\t\t\tthis.audio.stopPlaying();\n\t\t\tthis.render();\n\t\t});\n\n\t\t//! ユーザー定義定型文の新規作成ボタン。\n\t\tdocument.getElementById('addCustomBtn')?.addEventListener('click', () => {\n\t\t\tthis.showCustomTemplateDialog();\n\t\t});\n\n\t\t//! ユーザー定義定型文の編集ボタン。\n\t\tdocument.querySelectorAll('.edit-btn').forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst id = btn.getAttribute('data-template-id');\n\t\t\t\tif (id) {\n\t\t\t\t\tconst template = this.customTemplates.find(t => t.id === id);\n\t\t\t\t\tif (template) {\n\t\t\t\t\t\tthis.showCustomTemplateDialog(template);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! ユーザー定義定型文の削除ボタン。\n\t\tdocument.querySelectorAll('.delete-btn').forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst id = btn.getAttribute('data-template-id');\n\t\t\t\tif (id) {\n\t\t\t\t\tthis.deleteCustomTemplate(id);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! 再生コントロール（練習画面のみ）。\n\t\tif (this.state.selectedTemplate) {\n\t\t\tdocument.getElementById('playBtn')?.addEventListener('click', () => {\n\t\t\t\tthis.playMorse();\n\t\t\t});\n\n\t\t\tdocument.getElementById('pauseBtn')?.addEventListener('click', () => {\n\t\t\t\tthis.pauseMorse();\n\t\t\t});\n\n\t\t\tdocument.getElementById('stopBtn')?.addEventListener('click', () => {\n\t\t\t\tthis.stopMorse();\n\t\t\t});\n\n\t\t\tdocument.getElementById('downloadBtn')?.addEventListener('click', () => {\n\t\t\t\tthis.downloadWav();\n\t\t\t});\n\n\t\t\tthis.renderPracticeArea();\n\t\t}\n\t}\n\n\t/**\n\t * モールス信号をWAVファイルとしてダウンロードする\n\t */\n\tprivate async downloadWav(): Promise<void> {\n\t\tif (!this.state.selectedTemplate) return;\n\n\t\ttry {\n\t\t\t//! テキストをモールス符号に変換。\n\t\t\tconst text = this.getTemplateText(this.state.selectedTemplate);\n\t\t\tconst morse = MorseCodec.textToMorse(text);\n\n\t\t\t//! WAVファイルを生成。\n\t\t\tconst wavBlob = await this.audio.generateWav(morse);\n\n\t\t\t//! ダウンロード。\n\t\t\tconst filename = `${sanitizeFilename(this.state.selectedTemplate.title)}.wav`;\n\t\t\tdownloadBlob(wavBlob, filename);\n\t\t} catch (error) {\n\t\t\tconsole.error('WAVダウンロードエラー:', error);\n\t\t\talert('WAVファイルの生成に失敗しました。');\n\t\t}\n\t}\n\n\tdestroy(): void {\n\t\t//! AudioGeneratorを停止。\n\t\tthis.audio.stopPlaying();\n\t}\n}\n","/**\n * ダウンロードヘルパー関数\n * Blobをファイルとしてダウンロードさせるユーティリティ\n */\n\n/**\n * Blobをファイルとしてダウンロードする\n *\n * @param blob - ダウンロードするBlob\n * @param filename - ファイル名\n */\nexport function downloadBlob(blob: Blob, filename: string): void {\n\tconst url = URL.createObjectURL(blob);\n\tconst a = document.createElement('a');\n\ta.href = url;\n\ta.download = filename;\n\tdocument.body.appendChild(a);\n\ta.click();\n\tdocument.body.removeChild(a);\n\tURL.revokeObjectURL(url);\n}\n\n/**\n * ファイル名をサニタイズする（安全なファイル名に変換）\n *\n * @param filename - 元のファイル名\n * @returns サニタイズされたファイル名\n */\nexport function sanitizeFilename(filename: string): string {\n\treturn filename.replace(/[^a-zA-Z0-9_-]/g, '_');\n}\n","/**\n * ルーター\n * ハッシュベースのSPAルーティング\n */\n\nimport { MenuView } from '../ui/views/MenuView';\nimport { VerticalKeyView } from '../ui/views/VerticalKeyView';\nimport { HorizontalKeyView } from '../ui/views/HorizontalKeyView';\nimport { FlashcardView } from '../ui/views/FlashcardView';\nimport { KochView } from '../ui/views/KochView';\nimport { ListeningView } from '../ui/views/ListeningView';\n\n/**\n * ビューインターフェース\n */\nexport interface View {\n\t/**\n\t * ビューをレンダリングする\n\t */\n\trender(): void | Promise<void>;\n\n\t/**\n\t * ビューを破棄する\n\t */\n\tdestroy(): void;\n}\n\n/**\n * ルート定義\n */\ntype Route = {\n\tpath: string;\n\tview: new () => View;\n};\n\n/**\n * ルータークラス\n */\nexport class Router {\n\tprivate currentView: View | null = null;\n\tprivate routes: Route[] = [];\n\n\tconstructor() {\n\t\t//! ルート定義。\n\t\tthis.routes = [\n\t\t\t{ path: '', view: MenuView },\n\t\t\t{ path: 'menu', view: MenuView },\n\t\t\t{ path: 'vertical', view: VerticalKeyView },\n\t\t\t{ path: 'horizontal', view: HorizontalKeyView },\n\t\t\t{ path: 'flashcard', view: FlashcardView },\n\t\t\t{ path: 'koch', view: KochView },\n\t\t\t{ path: 'listening', view: ListeningView },\n\t\t];\n\t}\n\n\t/**\n\t * ルーターを初期化する\n\t */\n\tinit(): void {\n\t\t//! ハッシュ変更時のリスナーを登録。\n\t\twindow.addEventListener('hashchange', () => this.handleRoute());\n\n\t\t//! 初回ルーティング。\n\t\tthis.handleRoute();\n\t}\n\n\t/**\n\t * 現在のハッシュに基づいてルーティングする\n\t */\n\tprivate handleRoute(): void {\n\t\t//! 現在のビューを破棄。\n\t\tif (this.currentView) {\n\t\t\tthis.currentView.destroy();\n\t\t\tthis.currentView = null;\n\t\t}\n\n\t\t//! ハッシュからパスを取得（#を除去）。\n\t\tconst hash = window.location.hash.slice(1);\n\t\tconst route = this.routes.find(r => r.path === hash);\n\n\t\tif (route) {\n\t\t\t//! ビューを作成してレンダリング。\n\t\t\tthis.currentView = new route.view();\n\t\t\tthis.currentView.render();\n\t\t} else {\n\t\t\t//! 該当するルートがない場合はメニューに遷移。\n\t\t\twindow.location.hash = '#menu';\n\t\t}\n\t}\n\n\t/**\n\t * 指定したパスに遷移する\n\t */\n\tnavigate(path: string): void {\n\t\twindow.location.hash = `#${path}`;\n\t}\n}\n","/**\n * アプリケーションエントリポイント\n */\n\nimport { Router } from './router';\nimport './assets/styles.css';\n\n//! アプリケーション起動時の処理。\nfunction init(): void {\n\tconsole.log('モールス練習アプリ v10 起動');\n\n\t//! ルーターを初期化。\n\tconst router = new Router();\n\trouter.init();\n}\n\n//! DOMContentLoaded後に初期化。\nif (document.readyState === 'loading') {\n\tdocument.addEventListener('DOMContentLoaded', init);\n} else {\n\tinit();\n}\n"],"names":["MenuView","constructor","__publicField","this","id","title","description","route","render","app","document","getElementById","innerHTML","menuItems","map","item","renderMenuItem","join","attachEventListeners","querySelectorAll","forEach","addEventListener","getAttribute","window","location","hash","destroy","VerticalKeyView","savedWPM","localStorage","getItem","currentWPM","parseInt","savedKeyCode","keyCode","buffer","MorseBuffer","timer","TimerManager","audio","AudioGenerator","frequency","volume","wpm","timings","TimingCalculator","calculate","trainer","VerticalKeyTrainer","onKeyPress","startContinuousTone","onKeyRelease","stopContinuousTone","startUpdate","backBtn","querySelector","_a","openSettingsModal","clearBtn","clear","updateDisplay","keyPressHandler","e","code","repeat","preventDefault","isKeyPressed","handleKeyDown","keyReleaseHandler","handleKeyUp","keyButton","keyPress","updateKeyStatus","classList","add","keyRelease","remove","updateIntervalId","setInterval","morseBuffer","decodedText","charCount","getBuffer","sequence","getSequence","fullDisplay","textContent","text","getDecoded","length","toString","isPressed","keyStatus","valueSpan","currentValues","Math","round","getVolume","getFrequency","savedSettings","SettingsModal","ALL_SETTING_ITEMS","onSave","values","setVolume","setFrequency","setWPM","setItem","currentWpmDisplay","onCancel","show","removeEventListener","clearInterval","HorizontalKeyView","savedIambicMode","iambicMode","savedPaddleLayout","paddleLayout","savedLeftKeyCode","leftKeyCode","savedRightKeyCode","rightKeyCode","initializeTrainer","HorizontalKeyTrainer","onElementStart","_element","duration","scheduleTone","handleLeftPaddlePress","handleRightPaddlePress","handleLeftPaddleRelease","handleRightPaddleRelease","leftPaddle","leftPressed","rightPaddle","rightPressed","leftPaddlePress","leftPaddleRelease","rightPaddlePress","rightPaddleRelease","updatePaddleLabels","className","currentIambicModeDisplay","async","loadFlashcardData","url","response","fetch","ok","Error","statusText","lines","split","filter","line","trim","slice","index","columns","tags","abbreviation","english","japanese","example","_b","entry","parseTSV","FlashcardView","Set","known","unknown","progress","FlashcardState","loadProgress","filters","loadFilters","selectedTags","selectedFrequencies","searchQuery","viewState","loadViewState","displayMode","sortColumn","sortDirection","learnQuestionType","questionType","examQuestionType","saveProgress","clearProgress","saveFilters","currentState","allEntries","updateFilteredEntries","viewMode","error","renderBrowseMode","renderLearnMode","renderExamMode","renderExamResultMode","renderFilterSection","FlashcardTrainer","getAllTags","tag","has","freq","filteredEntries","renderEntries","attachBrowseModeListeners","container","renderCardView","renderListView","currentlyPlaying","formatAbbreviation","card","abbr","playMorse","toggleBtn","saveDisplayMode","getSortIndicator","header","column","toggleSort","btn","learnCards","renderLearnSetup","renderLearnCard","cardCount","reviewMode","size","attachCommonListeners","attachLearnSetupListeners","tagFilter","target","type","checked","value","delete","frequencyFilter","searchInput","reviewModeBtn","saveLearnQuestionType","startLearnBtn","startLearn","clearProgressBtn","confirm","cards","sort","random","currentLearnIndex","isFlipped","alert","currentNum","totalNum","frontContent","backContent","isKnown","judgmentButtons","attachLearnCardListeners","backToSetupBtn","flipCardBtn","body","playMorseBtn","markUnknownBtn","moveToNextCard","markKnownBtn","prevCardBtn","nextCardBtn","questions","renderExamSetup","renderExamQuestion","questionCount","attachExamSetupListeners","question","currentQuestionIndex","total","questionText","choices","choice","attachExamQuestionListeners","setTimeout","score","calculateScore","results","isPassed","percentage","wrongAnswers","getWrongAnswers","correct","r","isCorrect","result","userAnswer","correctAnswer","attachResultListeners","updateFilteredCount","saveExamQuestionType","count","startExamBtn","startExam","replayBtn","currentTarget","dataset","handleAnswer","retryBtn","tab","saveViewMode","filteredCountElem","questionCountInput","max","entries","filterByTags","filterByFrequencies","filterByQuery","sortEntries","ascending","sortByAbbreviation","sortByEnglish","sortByJapanese","sortByFrequency","sortByTags","saveSortState","prosignMatch","match","morseSequence","MorseCodec","textToMorse","char","Promise","resolve","actualCount","min","generateExamQuestions","checkAnswer","push","getWPM","onTestPlay","DEFAULT_SETTINGS","characterSpeed","effectiveSpeed","practiceDuration","groupSize","showInput","KochView","currentLesson","isPlaying","userInput","groups","currentGroupIndex","selectedChars","isCustomRunning","customUserInput","customCorrectAnswer","customGroups","customCurrentGroupIndex","customIsPlaying","loadSettings","loadViewMode","loadSelectedChars","settings","effectiveWpm","saved","JSON","parse","saveSettings","stringify","state","includes","chars","customState","saveSelectedChars","Array","from","startLesson","KochTrainer","getCharsForLesson","practiceSettings","generateRandomGroups","updateSettings","renderPractice","updateProgress","updatePlaybackButtons","i","group","morse","playMorseString","showResult","pauseMorse","stopPlaying","stopLesson","accuracy","calculateAccuracy","passed","resultContainer","toFixed","progressEl","progressBar","percent","style","width","playBtn","pauseBtn","disabled","startCustom","renderCustomPractice","playCustomMorse","updateCustomProgress","updateCustomPlaybackButtons","pauseCustomMorse","stopCustom","showCustomResult","replace","showSettings","effSpeed","charSpeed","renderModeContent","renderLearningMode","renderCustomMode","lessonList","KOCH_SEQUENCE","_","lessonNum","lessonChars","practiceContainer","renderKeyboard","inputEl","toUpperCase","_c","setupKeyboardEvents","setupCustomControls","availableChars","groupIndex","isLearned","_d","setupModeEventListeners","scrollTo","top","behavior","bFrequency","ListeningView","currentCategory","selectedTemplate","showAnswer","showDialogFormat","loadCategory","loadCustomTemplates","audioB","saveCategory","customTemplates","saveCustomTemplates","getTemplates","category","content","builtin","ListeningTrainer","getBuiltinTemplates","dialog","playDialogQSO","getTemplateText","template","seg","segment","generator","side","stopMorse","renderPracticeArea","toggleAnswer","toggleDialogFormat","renderAnswer","showCustomTemplateDialog","isEdit","modal","createElement","appendChild","titleInput","contentInput","newTemplate","Date","now","deleteCustomTemplate","t","renderCategoryTabs","renderPracticeContent","renderTemplateList","label","cat","templates","preview","substring","practiceInputArea","renderResult","answerArea","isQSO","dialogButton","answerContent","resultArea","correctText","generateRandomQSO","find","_e","_f","_g","_h","downloadWav","wavBlob","generateWav","blob","filename","URL","createObjectURL","a","href","download","click","removeChild","revokeObjectURL","downloadBlob","sanitizeFilename","Router","routes","path","view","init","handleRoute","currentView","navigate","readyState"],"mappings":"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"}