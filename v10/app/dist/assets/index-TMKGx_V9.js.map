{"version":3,"file":"index-TMKGx_V9.js","sources":["../../src/ui/views/MenuView.ts","../../../lib/dist/index.js","../../src/ui/views/VerticalKeyView.ts","../../src/ui/views/HorizontalKeyView.ts","../../src/utils/flashcard-loader.ts","../../src/ui/views/FlashcardView.ts","../../src/ui/views/KochView.ts","../../src/utils/download-helper.ts","../../src/ui/views/ListeningView.ts","../../src/router/index.ts","../../src/main.ts"],"sourcesContent":["/**\n * メニュービュー\n */\n\nimport type { View } from '../../router';\n\n/**\n * メニュー項目の定義\n */\ninterface MenuItem {\n\tid: string;\n\ttitle: string;\n\tdescription: string;\n\troute: string;\n}\n\n/**\n * メニュービュークラス\n */\nexport class MenuView implements View {\n\tprivate menuItems: MenuItem[] = [\n\t\t{\n\t\t\tid: 'vertical',\n\t\t\ttitle: '縦振り電鍵練習',\n\t\t\tdescription: '上下に動かす電鍵（ストレートキー）の練習',\n\t\t\troute: 'vertical'\n\t\t},\n\t\t{\n\t\t\tid: 'horizontal',\n\t\t\ttitle: '横振り電鍵練習',\n\t\t\tdescription: '左右に動かす電鍵（パドル）の練習（Iambic A/B対応）',\n\t\t\troute: 'horizontal'\n\t\t},\n\t\t{\n\t\t\tid: 'flashcard',\n\t\t\ttitle: 'CW略語・Q符号',\n\t\t\tdescription: 'CW通信で使用される略語とQ符号を学習',\n\t\t\troute: 'flashcard'\n\t\t},\n\t\t{\n\t\t\tid: 'koch',\n\t\t\ttitle: 'コッホ法トレーニング',\n\t\t\tdescription: '段階的に文字を増やして学習する方式',\n\t\t\troute: 'koch'\n\t\t},\n\t\t{\n\t\t\tid: 'listening',\n\t\t\ttitle: 'モールス信号聞き取り練習',\n\t\t\tdescription: 'ランダムQSOや英文を聞いて練習',\n\t\t\troute: 'listening'\n\t\t}\n\t];\n\n\t/**\n\t * ビューをレンダリングする\n\t */\n\trender(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"menu-header\">\n\t\t\t\t\t<h1>モールス練習アプリ</h1>\n\t\t\t\t\t<p class=\"version\">v10 - Engine/GUI分離版</p>\n\t\t\t\t</header>\n\n\t\t\t\t<main class=\"menu-main\">\n\t\t\t\t\t<div class=\"menu-grid\">\n\t\t\t\t\t\t${this.menuItems.map(item => this.renderMenuItem(item)).join('')}\n\t\t\t\t\t</div>\n\t\t\t\t</main>\n\n\t\t\t\t<footer class=\"menu-footer\">\n\t\t\t\t\t<p>&copy; 2025 モールス練習アプリ</p>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t`;\n\n\t\t//! イベントリスナーを設定。\n\t\tthis.attachEventListeners();\n\t}\n\n\t/**\n\t * メニュー項目を描画する\n\t */\n\tprivate renderMenuItem(item: MenuItem): string {\n\t\treturn `\n\t\t\t<div class=\"menu-item\" data-route=\"${item.route}\">\n\t\t\t\t<h2 class=\"menu-item-title\">${item.title}</h2>\n\t\t\t\t<p class=\"menu-item-description\">${item.description}</p>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\t/**\n\t * イベントリスナーを設定する\n\t */\n\tprivate attachEventListeners(): void {\n\t\tconst menuItems = document.querySelectorAll('.menu-item');\n\t\tmenuItems.forEach(item => {\n\t\t\titem.addEventListener('click', () => {\n\t\t\t\tconst route = item.getAttribute('data-route');\n\t\t\t\tif (route) {\n\t\t\t\t\twindow.location.hash = `#${route}`;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * ビューを破棄する\n\t */\n\tdestroy(): void {\n\t\t//! イベントリスナーは新しいHTMLで上書きされるため、特に処理不要。\n\t}\n}\n","const O = {\n  A: \".-\",\n  B: \"-...\",\n  C: \"-.-.\",\n  D: \"-..\",\n  E: \".\",\n  F: \"..-.\",\n  G: \"--.\",\n  H: \"....\",\n  I: \"..\",\n  J: \".---\",\n  K: \"-.-\",\n  L: \".-..\",\n  M: \"--\",\n  N: \"-.\",\n  O: \"---\",\n  P: \".--.\",\n  Q: \"--.-\",\n  R: \".-.\",\n  S: \"...\",\n  T: \"-\",\n  U: \"..-\",\n  V: \"...-\",\n  W: \".--\",\n  X: \"-..-\",\n  Y: \"-.--\",\n  Z: \"--..\",\n  0: \"-----\",\n  1: \".----\",\n  2: \"..---\",\n  3: \"...--\",\n  4: \"....-\",\n  5: \".....\",\n  6: \"-....\",\n  7: \"--...\",\n  8: \"---..\",\n  9: \"----.\",\n  \" \": \"/\",\n  \".\": \".-.-.-\",\n  \",\": \"--..--\",\n  \":\": \"---...\",\n  \"?\": \"..--..\",\n  _: \"..--.-\",\n  \"+\": \".-.-.\",\n  \"-\": \"-....-\",\n  \"×\": \"-..-\",\n  \"^\": \"......\",\n  \"/\": \"-..-.\",\n  \"@\": \".--.-.\",\n  \"(\": \"-.--.\",\n  \")\": \"-.--.-\",\n  '\"': \".-..-.\",\n  \"'\": \".----.\",\n  \"=\": \"-...-\"\n}, B = Object.fromEntries(\n  Object.entries(O).map(([f, t]) => [t, f])\n);\nclass d {\n  /**\n   * テキストをモールス符号に変換\n   * @param text 変換するテキスト\n   * @returns モールス符号文字列（スペース区切り）\n   */\n  static textToMorse(t) {\n    const e = t.toUpperCase(), s = /\\[([A-Z]+)\\]/g, r = [];\n    let n = 0, i;\n    for (; (i = s.exec(e)) !== null; ) {\n      if (i.index > n) {\n        const u = e.substring(n, i.index), E = Array.from(u).map((c) => O[c] || c);\n        r.push(E.join(\" \"));\n      }\n      const a = Array.from(i[1]).map((u) => O[u] || u);\n      r.push(a.join(\"\")), n = s.lastIndex;\n    }\n    if (n < e.length) {\n      const o = e.substring(n), a = Array.from(o).map((u) => O[u] || u);\n      r.push(a.join(\" \"));\n    }\n    return r.filter((o) => o).join(\" \");\n  }\n  /**\n   * モールス符号シーケンスを文字に変換\n   * @param sequences モールス符号の配列（['.-', '-...', '...']など）\n   * @returns デコードされたテキスト\n   */\n  static morseToText(t) {\n    let e = \"\";\n    for (const s of t)\n      s === \"/\" ? e += \" \" : s && s !== \"\" && (e += B[s] || \"?\");\n    return e;\n  }\n  /**\n   * モールス符号マップを取得\n   * @returns 文字→モールス符号のマップ\n   */\n  static getMorseMap() {\n    return { ...O };\n  }\n  /**\n   * 1文字からモールス符号を取得\n   * @param char 変換する文字\n   * @returns モールス符号、未対応文字の場合はundefined\n   */\n  static charToMorse(t) {\n    return O[t.toUpperCase()];\n  }\n}\nclass P {\n  /**\n   * WPMからモールス信号のタイミングを計算する\n   *\n   * @param wpm - Words Per Minute（1分間あたりの単語数）\n   * @param options - タイミング計算のオプション\n   * @returns モールス信号のタイミング情報\n   *\n   * @example\n   * ```ts\n   * const timings = TimingCalculator.calculate(20);\n   * console.log(timings.dot); // 60ms\n   * console.log(timings.dash); // 180ms\n   * ```\n   */\n  static calculate(t, e = {}) {\n    if (t <= 0)\n      throw new Error(`Invalid WPM value: ${t}. WPM must be greater than 0.`);\n    const s = 1200 / t, r = e.shortenGaps ? 0.9 : 1;\n    return {\n      dot: s,\n      dash: s * 3,\n      elementGap: s,\n      charGap: s * 3 * r,\n      wordGap: s * 7 * r\n    };\n  }\n  /**\n   * タイミング情報から文字確定までの待機時間を計算する\n   *\n   * @param timings - モールス信号のタイミング情報\n   * @returns 文字確定までの待機時間（ミリ秒）\n   */\n  static getCharGapDelay(t) {\n    const e = t.charGap / (t.dot * 3);\n    return t.dot * 4 * e;\n  }\n  /**\n   * タイミング情報から語間スペース確定までの待機時間を計算する\n   *\n   * @param timings - モールス信号のタイミング情報\n   * @returns 語間スペース確定までの待機時間（ミリ秒）\n   */\n  static getWordGapDelay(t) {\n    return t.wordGap;\n  }\n  /**\n   * 押下時間からdot/dashを判定する\n   *\n   * @param pressDuration - キー押下時間（ミリ秒）\n   * @param dotDuration - dot時間（ミリ秒）\n   * @returns '.'（dot）または '-'（dash）\n   */\n  static classifyElement(t, e) {\n    const s = e * 1.5;\n    return t < s ? \".\" : \"-\";\n  }\n}\nclass F {\n  constructor() {\n    this.buffer = \"\", this.sequence = \"\";\n  }\n  /**\n   * 現在入力中のシーケンスを取得する\n   *\n   * @returns 入力中のモールス符号シーケンス\n   */\n  getSequence() {\n    return this.sequence;\n  }\n  /**\n   * 確定済みのバッファを取得する\n   *\n   * @returns 確定済みのモールス符号バッファ\n   */\n  getBuffer() {\n    return this.buffer;\n  }\n  /**\n   * 入力中のシーケンスに符号要素を追加する\n   *\n   * @param element - 追加する符号要素（'.' または '-'）\n   */\n  addElement(t) {\n    this.sequence += t;\n  }\n  /**\n   * 入力中のシーケンスを確定してバッファに追加する\n   *\n   * @param addSpace - 確定後にスペースを追加するか（デフォルト: true）\n   */\n  commitSequence(t = !0) {\n    this.sequence && (this.buffer += this.sequence, t && (this.buffer += \" \"), this.sequence = \"\");\n  }\n  /**\n   * 語間スペース（'/'）を追加する\n   * すでに語間スペースで終わっている場合は追加しない\n   */\n  addWordSeparator() {\n    this.commitSequence(!0), this.buffer.endsWith(\"/ \") || (this.buffer += \"/ \");\n  }\n  /**\n   * バッファとシーケンスをクリアする\n   */\n  clear() {\n    this.buffer = \"\", this.sequence = \"\";\n  }\n  /**\n   * バッファの末尾が指定の文字列で終わっているかチェックする\n   *\n   * @param suffix - チェックする末尾文字列\n   * @returns 末尾が一致する場合true\n   */\n  endsWith(t) {\n    return this.buffer.endsWith(t);\n  }\n  /**\n   * バッファの長さを取得する\n   *\n   * @returns バッファの長さ\n   */\n  getBufferLength() {\n    return this.buffer.length;\n  }\n  /**\n   * シーケンスの長さを取得する\n   *\n   * @returns シーケンスの長さ\n   */\n  getSequenceLength() {\n    return this.sequence.length;\n  }\n  /**\n   * バッファが空かどうかをチェックする\n   *\n   * @returns バッファとシーケンスの両方が空の場合true\n   */\n  isEmpty() {\n    return this.buffer.length === 0 && this.sequence.length === 0;\n  }\n}\nclass G {\n  constructor() {\n    this.timers = /* @__PURE__ */ new Map();\n  }\n  /**\n   * タイマーを設定する\n   *\n   * @param name - タイマーの識別名\n   * @param callback - タイマー実行時のコールバック\n   * @param delay - 遅延時間（ミリ秒）\n   *\n   * @example\n   * ```ts\n   * const manager = new TimerManager();\n   * manager.set('charGap', () => console.log('Character committed'), 200);\n   * ```\n   */\n  set(t, e, s) {\n    this.clear(t);\n    const r = window.setTimeout(e, s);\n    this.timers.set(t, r);\n  }\n  /**\n   * 指定したタイマーをクリアする\n   *\n   * @param name - タイマーの識別名\n   *\n   * @example\n   * ```ts\n   * manager.clear('charGap');\n   * ```\n   */\n  clear(t) {\n    const e = this.timers.get(t);\n    e !== void 0 && (clearTimeout(e), this.timers.delete(t));\n  }\n  /**\n   * 全てのタイマーをクリアする\n   *\n   * @example\n   * ```ts\n   * manager.clearAll();\n   * ```\n   */\n  clearAll() {\n    for (const t of this.timers.values())\n      clearTimeout(t);\n    this.timers.clear();\n  }\n  /**\n   * 指定したタイマーが存在するかチェックする\n   *\n   * @param name - タイマーの識別名\n   * @returns タイマーが存在する場合true\n   */\n  has(t) {\n    return this.timers.has(t);\n  }\n  /**\n   * 管理中のタイマー数を取得する\n   *\n   * @returns タイマー数\n   */\n  count() {\n    return this.timers.size;\n  }\n}\nclass K {\n  /**\n   * AudioGeneratorを初期化する\n   *\n   * @param settings - 音声設定\n   */\n  constructor(t = { frequency: 750, volume: 0.7, wpm: 20 }) {\n    this.audioContext = null, this.currentOscillator = null, this.currentGain = null, this.isPlaying = !1, this.settings = t;\n  }\n  /**\n   * AudioContextの初期化\n   */\n  ensureAudioContext() {\n    this.audioContext || (this.audioContext = new (window.AudioContext || window.webkitAudioContext)()), this.audioContext.state === \"suspended\" && this.audioContext.resume();\n  }\n  /**\n   * 設定を更新する\n   *\n   * @param settings - 更新する設定（部分更新可能）\n   */\n  updateSettings(t) {\n    this.settings = { ...this.settings, ...t };\n  }\n  /**\n   * 現在の設定を取得する\n   *\n   * @returns 現在の音声設定\n   */\n  getSettings() {\n    return { ...this.settings };\n  }\n  /**\n   * 指定された時間に音を再生する\n   *\n   * @param startTime - 開始時刻（AudioContext時刻）\n   * @param durationMs - 音の長さ（ミリ秒）\n   */\n  scheduleTone(t, e) {\n    if (this.ensureAudioContext(), !!this.audioContext)\n      try {\n        const s = this.audioContext.createOscillator(), r = this.audioContext.createGain();\n        s.connect(r), r.connect(this.audioContext.destination), s.frequency.value = this.settings.frequency, s.type = \"sine\";\n        const n = this.audioContext.currentTime, i = Math.max(n, t);\n        r.gain.setValueAtTime(0, i), r.gain.linearRampToValueAtTime(this.settings.volume, i + 1e-3), r.gain.setValueAtTime(this.settings.volume, i + (e - 1) / 1e3), r.gain.linearRampToValueAtTime(0, i + e / 1e3), s.start(i), s.stop(i + e / 1e3);\n      } catch (s) {\n        console.error(\"音声エラー:\", s);\n      }\n  }\n  /**\n   * 連続音の開始\n   */\n  startContinuousTone() {\n    if (this.ensureAudioContext(), !!this.audioContext)\n      try {\n        this.stopContinuousTone();\n        const t = this.audioContext.createOscillator(), e = this.audioContext.createGain();\n        t.connect(e), e.connect(this.audioContext.destination), t.frequency.value = this.settings.frequency, t.type = \"sine\";\n        const s = this.audioContext.currentTime;\n        e.gain.setValueAtTime(0, s), e.gain.linearRampToValueAtTime(this.settings.volume, s + 1e-3), t.start(s), this.currentOscillator = t, this.currentGain = e;\n      } catch (t) {\n        console.error(\"連続音開始エラー:\", t);\n      }\n  }\n  /**\n   * 連続音の停止\n   */\n  stopContinuousTone() {\n    if (this.audioContext)\n      try {\n        if (this.currentOscillator && this.currentGain) {\n          const t = this.audioContext.currentTime;\n          this.currentGain.gain.cancelScheduledValues(t), this.currentGain.gain.setValueAtTime(this.currentGain.gain.value, t), this.currentGain.gain.linearRampToValueAtTime(0, t + 1e-3), this.currentOscillator.stop(t + 2e-3), this.currentOscillator = null, this.currentGain = null;\n        }\n      } catch (t) {\n        console.error(\"連続音停止エラー:\", t);\n      }\n  }\n  /**\n   * モールス符号文字列を再生する\n   *\n   * @param morse - モールス符号文字列（'.-', ' ', '/' を含む）\n   * @returns 再生が完了したらtrueを返すPromise（中断された場合はfalse）\n   *\n   * @example\n   * ```ts\n   * const audio = new AudioGenerator({ frequency: 750, volume: 0.7, wpm: 20 });\n   * await audio.playMorseString('.- -... -.-. / -.. . ..-.');\n   * ```\n   */\n  async playMorseString(t) {\n    if (this.isPlaying || !t || (this.ensureAudioContext(), !this.audioContext)) return !1;\n    this.isPlaying = !0;\n    const e = this.settings.wpm || 20, s = Math.min(this.settings.effectiveWpm || e, e), r = 1200 / e, n = r, i = 3 * r, o = r, a = 3 * r, E = 7 * (1200 / s);\n    let c = this.audioContext.currentTime + 0.02;\n    for (let T = 0; T < t.length && this.isPlaying; T++) {\n      const l = t[T];\n      l === \".\" ? (this.scheduleTone(c, n), c += (n + o) / 1e3) : l === \"-\" ? (this.scheduleTone(c, i), c += (i + o) / 1e3) : l === \" \" ? c += (a - o) / 1e3 : l === \"/\" && (c += (E - o) / 1e3);\n    }\n    const A = (c - this.audioContext.currentTime) * 1e3;\n    await new Promise((T) => setTimeout(T, A));\n    const R = this.isPlaying;\n    return this.isPlaying = !1, R;\n  }\n  /**\n   * 再生を停止する\n   */\n  stopPlaying() {\n    this.isPlaying = !1;\n  }\n  /**\n   * 再生中かどうかを確認する\n   *\n   * @returns 再生中の場合true\n   */\n  isCurrentlyPlaying() {\n    return this.isPlaying;\n  }\n  /**\n   * AudioContextを取得する\n   *\n   * @returns AudioContextインスタンス（未初期化の場合null）\n   */\n  getAudioContext() {\n    return this.audioContext;\n  }\n  /**\n   * 音量を取得する\n   *\n   * @returns 現在の音量（0-1）\n   */\n  getVolume() {\n    return this.settings.volume;\n  }\n  /**\n   * 音量を設定する\n   *\n   * @param volume - 音量（0-1）\n   */\n  setVolume(t) {\n    this.settings.volume = Math.max(0, Math.min(1, t));\n  }\n  /**\n   * 周波数を取得する\n   *\n   * @returns 現在の周波数（Hz）\n   */\n  getFrequency() {\n    return this.settings.frequency;\n  }\n  /**\n   * 周波数を設定する\n   *\n   * @param frequency - 周波数（Hz、400-1200の範囲）\n   */\n  setFrequency(t) {\n    this.settings.frequency = Math.max(400, Math.min(1200, t));\n  }\n  /**\n   * WPMを取得する\n   *\n   * @returns 現在のWPM\n   */\n  getWPM() {\n    return this.settings.wpm || 20;\n  }\n  /**\n   * WPMを設定する\n   *\n   * @param wpm - WPM（5-40の範囲）\n   */\n  setWPM(t) {\n    this.settings.wpm = Math.max(5, Math.min(40, t));\n  }\n  /**\n   * モールス符号文字列からWAVファイルを生成する\n   *\n   * @param morse - モールス符号文字列（'.-', ' ', '/' を含む）\n   * @returns WAVファイルのBlob\n   *\n   * @example\n   * ```ts\n   * const audio = new AudioGenerator({ frequency: 750, volume: 0.7, wpm: 20 });\n   * const wavBlob = await audio.generateWav('.- -... -.-. / -.. . ..-.');\n   * ```\n   */\n  async generateWav(t) {\n    if (!t)\n      throw new Error(\"モールス符号が空です\");\n    const e = this.settings.wpm || 20, s = Math.min(this.settings.effectiveWpm || e, e), r = 1200 / e, n = r, i = 3 * r, o = r, a = 3 * r, E = 7 * (1200 / s);\n    let c = 0;\n    for (let h = 0; h < t.length; h++) {\n      const I = t[h];\n      I === \".\" ? c += n + o : I === \"-\" ? c += i + o : I === \" \" ? c += a - o : I === \"/\" && (c += E - o);\n    }\n    const A = 44100, R = (c + 100) / 1e3, T = new OfflineAudioContext(1, Math.ceil(R * A), A);\n    let l = 0.02;\n    for (let h = 0; h < t.length; h++) {\n      const I = t[h];\n      I === \".\" ? (this.scheduleOfflineTone(T, l, n), l += (n + o) / 1e3) : I === \"-\" ? (this.scheduleOfflineTone(T, l, i), l += (i + o) / 1e3) : I === \" \" ? l += (a - o) / 1e3 : I === \"/\" && (l += (E - o) / 1e3);\n    }\n    const S = await T.startRendering();\n    return this.audioBufferToWav(S);\n  }\n  /**\n   * OfflineAudioContextで音を生成する\n   *\n   * @param context - OfflineAudioContext\n   * @param startTime - 開始時刻（秒）\n   * @param durationMs - 音の長さ（ミリ秒）\n   */\n  scheduleOfflineTone(t, e, s) {\n    const r = t.createOscillator(), n = t.createGain();\n    r.connect(n), n.connect(t.destination), r.frequency.value = this.settings.frequency, r.type = \"sine\";\n    const i = e;\n    n.gain.setValueAtTime(0, i), n.gain.linearRampToValueAtTime(this.settings.volume, i + 1e-3), n.gain.setValueAtTime(this.settings.volume, i + (s - 1) / 1e3), n.gain.linearRampToValueAtTime(0, i + s / 1e3), r.start(i), r.stop(i + s / 1e3);\n  }\n  /**\n   * AudioBufferをWAVファイルに変換する\n   *\n   * @param buffer - AudioBuffer\n   * @returns WAVファイルのBlob\n   */\n  audioBufferToWav(t) {\n    const e = t.numberOfChannels, s = t.sampleRate, r = 1, n = 16, i = n / 8, o = e * i, a = new Float32Array(t.length * e);\n    for (let l = 0; l < t.numberOfChannels; l++) {\n      const S = t.getChannelData(l);\n      for (let h = 0; h < S.length; h++)\n        a[h * e + l] = S[h];\n    }\n    const u = a.length * i, E = 44 + u, c = new ArrayBuffer(E), A = new DataView(c), R = (l, S) => {\n      for (let h = 0; h < S.length; h++)\n        A.setUint8(l + h, S.charCodeAt(h));\n    };\n    R(0, \"RIFF\"), A.setUint32(4, E - 8, !0), R(8, \"WAVE\"), R(12, \"fmt \"), A.setUint32(16, 16, !0), A.setUint16(20, r, !0), A.setUint16(22, e, !0), A.setUint32(24, s, !0), A.setUint32(28, s * o, !0), A.setUint16(32, o, !0), A.setUint16(34, n, !0), R(36, \"data\"), A.setUint32(40, u, !0);\n    let T = 44;\n    for (let l = 0; l < a.length; l++) {\n      const S = Math.max(-1, Math.min(1, a[l])), h = S < 0 ? S * 32768 : S * 32767;\n      A.setInt16(T, h, !0), T += 2;\n    }\n    return new Blob([c], { type: \"audio/wav\" });\n  }\n}\nclass b {\n  /**\n   * 縦振り電鍵トレーナーを初期化する\n   * @param buffer - モールスバッファインスタンス\n   * @param timer - タイマーマネージャーインスタンス\n   * @param timings - タイミング設定\n   * @param callbacks - イベントコールバック\n   */\n  constructor(t, e, s, r = {}) {\n    this.buffer = t, this.timer = e, this.timings = s, this.callbacks = r, this.keyDown = !1, this.keyDownTime = 0;\n  }\n  /**\n   * キーが押された時の処理\n   * 連続音の開始と状態の記録を行う\n   */\n  keyPress() {\n    var t, e;\n    this.keyDown || (this.keyDown = !0, this.keyDownTime = Date.now(), this.timer.clearAll(), (e = (t = this.callbacks).onKeyPress) == null || e.call(t));\n  }\n  /**\n   * キーが離された時の処理\n   * 押下時間からdot/dashを判定し、バッファに追加する\n   */\n  keyRelease() {\n    var s, r, n, i;\n    if (!this.keyDown) return;\n    this.keyDown = !1;\n    const e = Date.now() - this.keyDownTime < this.timings.dot * 2 ? \".\" : \"-\";\n    this.buffer.addElement(e), (r = (s = this.callbacks).onKeyRelease) == null || r.call(s, e), (i = (n = this.callbacks).onSequenceUpdate) == null || i.call(n, this.buffer.getSequence()), this.notifyBufferUpdate(), this.setupCharWordTimers();\n  }\n  /**\n   * 文字確定・語間スペースタイマーを設定する\n   */\n  setupCharWordTimers() {\n    this.timer.clearAll();\n    const t = this.timings.charGap;\n    this.timer.set(\"charGap\", () => {\n      var r, n;\n      const s = this.buffer.getSequence();\n      if (s) {\n        const i = d.morseToText([s]);\n        this.buffer.commitSequence(), (n = (r = this.callbacks).onCharacter) == null || n.call(r, s, i || \"?\"), this.notifyBufferUpdate();\n      }\n    }, t);\n    const e = this.timings.wordGap;\n    this.timer.set(\"wordGap\", () => {\n      var r, n, i, o;\n      const s = this.buffer.getSequence();\n      if (s) {\n        const a = d.morseToText([s]);\n        this.buffer.commitSequence(), (n = (r = this.callbacks).onCharacter) == null || n.call(r, s, a || \"?\");\n      }\n      this.buffer.addWordSeparator(), (o = (i = this.callbacks).onWordSeparator) == null || o.call(i), this.notifyBufferUpdate();\n    }, e);\n  }\n  /**\n   * バッファ更新を通知する\n   */\n  notifyBufferUpdate() {\n    var r, n;\n    const t = this.buffer.getBuffer(), e = t.trim().split(/\\s+/), s = d.morseToText(e);\n    (n = (r = this.callbacks).onBufferUpdate) == null || n.call(r, t, s);\n  }\n  /**\n   * バッファとタイマーをクリアする\n   */\n  clear() {\n    this.buffer.clear(), this.timer.clearAll(), this.notifyBufferUpdate();\n  }\n  /**\n   * 現在のモールス信号バッファを取得する\n   * @returns モールス信号文字列 (例: \".- -...\")\n   */\n  getBuffer() {\n    return this.buffer.getBuffer();\n  }\n  /**\n   * 現在入力中のシーケンスを取得する\n   * @returns シーケンス文字列 (例: \".-\")\n   */\n  getSequence() {\n    return this.buffer.getSequence();\n  }\n  /**\n   * 現在のバッファを解読した文字列を取得する\n   * @returns 解読された文字列 (例: \"AB\")\n   */\n  getDecoded() {\n    const e = this.buffer.getBuffer().trim().split(/\\s+/);\n    return d.morseToText(e);\n  }\n  /**\n   * キーが現在押されているかどうかを取得する\n   * @returns キーが押されている場合true\n   */\n  isKeyDown() {\n    return this.keyDown;\n  }\n  /**\n   * タイマーの状態を取得する（主にテスト用）\n   * @returns アクティブなタイマーの数\n   */\n  getTimerCount() {\n    return this.timer.count();\n  }\n}\nclass W {\n  /**\n   * 横振り電鍵トレーナーを初期化する\n   * @param buffer - モールスバッファインスタンス\n   * @param timer - タイマーマネージャーインスタンス\n   * @param timings - タイミング設定\n   * @param callbacks - イベントコールバック\n   * @param settings - トレーナー設定\n   */\n  constructor(t, e, s, r = {}, n = {}) {\n    this.buffer = t, this.timer = e, this.timings = s, this.callbacks = r, this.leftDown = !1, this.rightDown = !1, this.sending = !1, this.lastSent = null, this.forceNextElement = null, this.squeezeDetected = !1, this.isSqueezing = !1, this.iambicMode = n.iambicMode || \"A\", this.paddleLayout = n.paddleLayout || \"normal\";\n  }\n  /**\n   * 左パドルが押された時の処理\n   */\n  leftPaddlePress() {\n    if (this.leftDown = !0, this.updateSqueezeState(), this.iambicMode === \"B\" && this.sending && this.rightDown) {\n      const t = this.paddleLayout === \"reversed\" ? \"-\" : \".\";\n      this.forceNextElement = t, this.squeezeDetected = !0;\n    }\n    if (!this.sending) {\n      const t = this.paddleLayout === \"reversed\" ? \"-\" : \".\";\n      this.sendPaddleElement(t);\n    }\n  }\n  /**\n   * 右パドルが押された時の処理\n   */\n  rightPaddlePress() {\n    if (this.rightDown = !0, this.updateSqueezeState(), this.iambicMode === \"B\" && this.sending && this.leftDown) {\n      const t = this.paddleLayout === \"reversed\" ? \".\" : \"-\";\n      this.forceNextElement = t, this.squeezeDetected = !0;\n    }\n    if (!this.sending) {\n      const t = this.paddleLayout === \"reversed\" ? \".\" : \"-\";\n      this.sendPaddleElement(t);\n    }\n  }\n  /**\n   * 左パドルが離された時の処理\n   */\n  leftPaddleRelease() {\n    this.leftDown = !1, this.updateSqueezeState();\n  }\n  /**\n   * 右パドルが離された時の処理\n   */\n  rightPaddleRelease() {\n    this.rightDown = !1, this.updateSqueezeState();\n  }\n  /**\n   * パドル要素を送信する\n   * @param element - 送信する要素 ('.' | '-')\n   */\n  sendPaddleElement(t) {\n    var s, r, n, i;\n    if (this.sending) return;\n    this.sending = !0, this.timer.clearAll(), this.leftDown && this.rightDown || (this.squeezeDetected = !1);\n    const e = t === \".\" ? this.timings.dot : this.timings.dash;\n    (r = (s = this.callbacks).onElementStart) == null || r.call(s, t, e), this.buffer.addElement(t), this.lastSent = t, (i = (n = this.callbacks).onSequenceUpdate) == null || i.call(n, this.buffer.getSequence()), this.notifyBufferUpdate(), this.timer.set(\"iambicCheck\", () => {\n      const o = this.leftDown && this.rightDown;\n      this.iambicMode === \"B\" && this.squeezeDetected && !this.forceNextElement && (this.forceNextElement = t === \".\" ? \"-\" : \".\"), o && !this.forceNextElement && (this.forceNextElement = t === \".\" ? \"-\" : \".\");\n    }, Math.max(0, e - 5)), this.timer.set(\"elementEnd\", () => {\n      var o, a;\n      this.sending = !1, (a = (o = this.callbacks).onElementEnd) == null || a.call(o, t), this.forceNextElement ? this.scheduleNext() : this.leftDown || this.rightDown ? this.scheduleNext() : this.setupCharWordTimers();\n    }, e + this.timings.dot);\n  }\n  /**\n   * 次の要素をスケジュールする\n   */\n  scheduleNext() {\n    if (this.forceNextElement) {\n      const t = this.forceNextElement;\n      this.forceNextElement = null, this.sendPaddleElement(t);\n    } else if (this.leftDown && this.rightDown) {\n      const t = this.lastSent === \".\" ? \"-\" : \".\";\n      this.sendPaddleElement(t);\n    } else if (this.leftDown) {\n      const t = this.paddleLayout === \"reversed\" ? \"-\" : \".\";\n      this.sendPaddleElement(t);\n    } else if (this.rightDown) {\n      const t = this.paddleLayout === \"reversed\" ? \".\" : \"-\";\n      this.sendPaddleElement(t);\n    }\n  }\n  /**\n   * 文字確定・語間スペースタイマーを設定する\n   */\n  setupCharWordTimers() {\n    this.timer.clearAll(), this.timer.set(\"charGap\", () => {\n      var e, s;\n      const t = this.buffer.getSequence();\n      if (t) {\n        const r = d.morseToText([t]);\n        this.buffer.commitSequence(), (s = (e = this.callbacks).onCharacter) == null || s.call(e, t, r || \"?\"), this.notifyBufferUpdate();\n      }\n    }, this.timings.charGap), this.timer.set(\"wordGap\", () => {\n      var e, s, r, n;\n      const t = this.buffer.getSequence();\n      if (t) {\n        const i = d.morseToText([t]);\n        this.buffer.commitSequence(), (s = (e = this.callbacks).onCharacter) == null || s.call(e, t, i || \"?\");\n      }\n      this.buffer.addWordSeparator(), (n = (r = this.callbacks).onWordSeparator) == null || n.call(r), this.notifyBufferUpdate();\n    }, this.timings.wordGap);\n  }\n  /**\n   * スクイーズ状態を更新する\n   */\n  updateSqueezeState() {\n    var e, s;\n    const t = this.leftDown && this.rightDown;\n    this.isSqueezing !== t && (this.isSqueezing = t, (s = (e = this.callbacks).onSqueezeChange) == null || s.call(e, t));\n  }\n  /**\n   * バッファ更新を通知する\n   */\n  notifyBufferUpdate() {\n    var r, n;\n    const t = this.buffer.getBuffer(), e = t.trim().split(/\\s+/), s = d.morseToText(e);\n    (n = (r = this.callbacks).onBufferUpdate) == null || n.call(r, t, s);\n  }\n  /**\n   * バッファとタイマーをクリアする\n   */\n  clear() {\n    this.buffer.clear(), this.timer.clearAll(), this.sending = !1, this.forceNextElement = null, this.squeezeDetected = !1, this.lastSent = null, this.notifyBufferUpdate();\n  }\n  /**\n   * 現在のモールス信号バッファを取得する\n   * @returns モールス信号文字列 (例: \".- -...\")\n   */\n  getBuffer() {\n    return this.buffer.getBuffer();\n  }\n  /**\n   * 現在入力中のシーケンスを取得する\n   * @returns シーケンス文字列 (例: \".-\")\n   */\n  getSequence() {\n    return this.buffer.getSequence();\n  }\n  /**\n   * 現在のバッファを解読した文字列を取得する\n   * @returns 解読された文字列 (例: \"AB\")\n   */\n  getDecoded() {\n    const e = this.buffer.getBuffer().trim().split(/\\s+/);\n    return d.morseToText(e);\n  }\n  /**\n   * 左パドルが押されているかどうかを取得する\n   * @returns 左パドルが押されている場合true\n   */\n  isLeftPaddleDown() {\n    return this.leftDown;\n  }\n  /**\n   * 右パドルが押されているかどうかを取得する\n   * @returns 右パドルが押されている場合true\n   */\n  isRightPaddleDown() {\n    return this.rightDown;\n  }\n  /**\n   * 現在送信中かどうかを取得する\n   * @returns 送信中の場合true\n   */\n  isSending() {\n    return this.sending;\n  }\n  /**\n   * スクイーズ中かどうかを取得する\n   * @returns スクイーズ中の場合true\n   */\n  isSqueezingNow() {\n    return this.isSqueezing;\n  }\n  /**\n   * Iambicモードを設定する\n   * @param mode - 'A' または 'B'\n   */\n  setIambicMode(t) {\n    this.iambicMode = t;\n  }\n  /**\n   * パドルレイアウトを設定する\n   * @param layout - 'normal' または 'reversed'\n   */\n  setPaddleLayout(t) {\n    this.paddleLayout = t;\n  }\n  /**\n   * 現在のIambicモードを取得する\n   * @returns 'A' または 'B'\n   */\n  getIambicMode() {\n    return this.iambicMode;\n  }\n  /**\n   * 現在のパドルレイアウトを取得する\n   * @returns 'normal' または 'reversed'\n   */\n  getPaddleLayout() {\n    return this.paddleLayout;\n  }\n}\nconst D = [\n  \"K\",\n  \"M\",\n  \"U\",\n  \"R\",\n  \"E\",\n  \"S\",\n  \"N\",\n  \"A\",\n  \"P\",\n  \"T\",\n  \"L\",\n  \"W\",\n  \"I\",\n  \".\",\n  \"J\",\n  \"Z\",\n  \"=\",\n  \"F\",\n  \"O\",\n  \"Y\",\n  \",\",\n  \"V\",\n  \"G\",\n  \"5\",\n  \"/\",\n  \"Q\",\n  \"9\",\n  \"2\",\n  \"H\",\n  \"3\",\n  \"8\",\n  \"B\",\n  \"?\",\n  \"4\",\n  \"7\",\n  \"C\",\n  \"1\",\n  \"D\",\n  \"6\",\n  \"0\",\n  \"X\"\n];\nclass M {\n  /**\n   * コッホ法トレーナーを初期化する\n   * @param initialLesson - 初期レッスン番号（1-40、デフォルト: 1）\n   */\n  constructor(t = 1) {\n    this.currentLesson = 1, this.currentLesson = Math.max(1, Math.min(40, t));\n  }\n  /**\n   * レッスン番号で学習する文字を取得\n   * @param lessonNum - レッスン番号（1-40）\n   * @returns 学習文字の配列\n   */\n  static getCharsForLesson(t) {\n    const e = Math.max(1, Math.min(40, t));\n    return D.slice(0, e + 1);\n  }\n  /**\n   * ランダムな文字グループを生成\n   * @param chars - 使用する文字の配列\n   * @param settings - 練習設定\n   * @returns 文字グループの配列\n   */\n  static generateRandomGroups(t, e = {}) {\n    const s = e.groupSize || 5, r = e.duration || 60, n = e.wpm || 20, i = Math.floor(r * n / (s * 5)), o = [];\n    for (let a = 0; a < i; a++) {\n      let u = \"\";\n      for (let E = 0; E < s; E++) {\n        const c = t[Math.floor(Math.random() * t.length)];\n        u += c;\n      }\n      o.push(u);\n    }\n    return o;\n  }\n  /**\n   * 指定した文字セットでランダムグループを生成\n   * @param charSet - 使用する文字セット\n   * @param settings - 練習設定\n   * @returns 文字グループの配列\n   */\n  static generateCustomGroups(t, e = {}) {\n    const s = Array.from(t);\n    if (s.length < 2)\n      throw new Error(\"文字セットには最低2文字必要です\");\n    return M.generateRandomGroups(s, e);\n  }\n  /**\n   * 正答率を計算する\n   * @param correctAnswer - 正解の文字列\n   * @param userInput - ユーザー入力の文字列\n   * @returns 正答率（0-100）\n   */\n  static calculateAccuracy(t, e) {\n    if (!e) return 0;\n    const s = t.replace(/\\s/g, \"\"), r = e.replace(/\\s/g, \"\"), n = Math.max(s.length, r.length);\n    if (n === 0) return 0;\n    let i = 0;\n    for (let o = 0; o < n; o++)\n      s[o] === r[o] && i++;\n    return i / n * 100;\n  }\n  /**\n   * 合格判定（90%以上）\n   * @param accuracy - 正答率（0-100）\n   * @returns 合格の場合true\n   */\n  static isPassed(t) {\n    return t >= 90;\n  }\n  /**\n   * 現在のレッスン番号を取得\n   * @returns レッスン番号（1-40）\n   */\n  getCurrentLesson() {\n    return this.currentLesson;\n  }\n  /**\n   * レッスン番号を設定\n   * @param lessonNum - レッスン番号（1-40）\n   */\n  setCurrentLesson(t) {\n    this.currentLesson = Math.max(1, Math.min(40, t));\n  }\n  /**\n   * 現在のレッスンで学習する文字を取得\n   * @returns 学習文字の配列\n   */\n  getCurrentChars() {\n    return M.getCharsForLesson(this.currentLesson);\n  }\n  /**\n   * 現在のレッスン用の練習問題を生成\n   * @param settings - 練習設定\n   * @returns 練習問題（文字グループの配列）\n   */\n  generatePractice(t = {}) {\n    const e = this.getCurrentChars();\n    return M.generateRandomGroups(e, t);\n  }\n  /**\n   * 次のレッスンに進む\n   * @returns 次のレッスン番号（最大40）\n   */\n  advanceLesson() {\n    return this.currentLesson < 40 && this.currentLesson++, this.currentLesson;\n  }\n  /**\n   * 前のレッスンに戻る\n   * @returns 前のレッスン番号（最小1）\n   */\n  previousLesson() {\n    return this.currentLesson > 1 && this.currentLesson--, this.currentLesson;\n  }\n  /**\n   * 最後のレッスンかどうかを判定\n   * @returns 最後のレッスンの場合true\n   */\n  isLastLesson() {\n    return this.currentLesson === 40;\n  }\n  /**\n   * 最初のレッスンかどうかを判定\n   * @returns 最初のレッスンの場合true\n   */\n  isFirstLesson() {\n    return this.currentLesson === 1;\n  }\n  /**\n   * 全レッスン数を取得\n   * @returns 全レッスン数（40）\n   */\n  static getTotalLessons() {\n    return 40;\n  }\n  /**\n   * 全文字数を取得\n   * @returns 全文字数（41）\n   */\n  static getTotalChars() {\n    return D.length;\n  }\n  /**\n   * コッホシーケンス全体を取得\n   * @returns 全41文字の配列\n   */\n  static getAllChars() {\n    return [...D];\n  }\n}\n//! 日本の都市名（ローマ字）。\nconst L = [\n  \"TOKYO\",\n  \"OSAKA\",\n  \"KYOTO\",\n  \"NAGOYA\",\n  \"YOKOHAMA\",\n  \"KOBE\",\n  \"FUKUOKA\",\n  \"SAPPORO\",\n  \"SENDAI\",\n  \"HIROSHIMA\",\n  \"KAWASAKI\",\n  \"SAITAMA\",\n  \"CHIBA\",\n  \"KITAKYUSHU\",\n  \"SAKAI\",\n  \"NIIGATA\",\n  \"HAMAMATSU\",\n  \"KUMAMOTO\",\n  \"OKAYAMA\",\n  \"SAGAMIHARA\",\n  \"SHIZUOKA\",\n  \"KAGOSHIMA\",\n  \"MATSUYAMA\",\n  \"GIFU\",\n  \"UTSUNOMIYA\",\n  \"KANAZAWA\",\n  \"TOYAMA\",\n  \"NARA\",\n  \"NAGASAKI\",\n  \"OITA\",\n  \"KOCHI\",\n  \"MIYAZAKI\",\n  \"NAHA\",\n  \"WAKAYAMA\",\n  \"AOMORI\",\n  \"AKITA\",\n  \"FUKUSHIMA\",\n  \"MORIOKA\",\n  \"MAEBASHI\",\n  \"KOFU\",\n  \"MATSUMOTO\",\n  \"TOYOHASHI\",\n  \"FUKUI\",\n  \"OTSU\",\n  \"TSU\",\n  \"YOKKAICHI\",\n  \"MATSUE\",\n  \"TOTTORI\",\n  \"YAMAGUCHI\",\n  \"TOKUSHIMA\",\n  \"TAKAMATSU\",\n  \"MITO\",\n  \"KORIYAMA\",\n  \"IWAKI\",\n  \"TAKASAKI\",\n  \"HACHIOJI\",\n  \"MACHIDA\",\n  \"KURASHIKI\",\n  \"HIMEJI\",\n  \"NISHINOMIYA\",\n  \"AMAGASAKI\",\n  \"TAKATSUKI\",\n  \"TOYONAKA\",\n  \"SUITA\",\n  \"KAWAGUCHI\",\n  \"FUNABASHI\",\n  \"HAKODATE\",\n  \"ASAHIKAWA\",\n  \"OTARU\",\n  \"KUSHIRO\",\n  \"OBIHIRO\",\n  \"TOMAKOMAI\",\n  \"IWAMIZAWA\",\n  \"HACHINOHE\",\n  \"HIROSAKI\",\n  \"ISHINOMAKI\",\n  \"YAMAGATA\",\n  \"TSURUOKA\",\n  \"YONEZAWA\",\n  \"HITACHI\",\n  \"TSUKUBA\",\n  \"KASUKABE\",\n  \"KAWAGOE\",\n  \"TOKOROZAWA\",\n  \"AGEO\",\n  \"FUCHU\",\n  \"CHOFU\",\n  \"HINO\",\n  \"KOKUBUNJI\",\n  \"ATSUGI\",\n  \"ODAWARA\",\n  \"HIRATSUKA\",\n  \"FUJISAWA\",\n  \"KAMAKURA\",\n  \"ZUSHI\",\n  \"NUMAZU\",\n  \"FUJI\",\n  \"MISHIMA\",\n  \"KAKEGAWA\",\n  \"IWATA\"\n];\n//! 名前（ファーストネーム）。\nconst U = [\n  \"JOHN\",\n  \"MIKE\",\n  \"TOM\",\n  \"DAVE\",\n  \"BOB\",\n  \"BILL\",\n  \"JIM\",\n  \"JACK\",\n  \"FRANK\",\n  \"PAUL\",\n  \"MARK\",\n  \"DAN\",\n  \"KEN\",\n  \"RON\",\n  \"RICK\",\n  \"STEVE\",\n  \"GEORGE\",\n  \"PETE\",\n  \"RAY\",\n  \"AL\",\n  \"FRED\",\n  \"JEFF\",\n  \"GARY\",\n  \"LARRY\",\n  \"DOUG\",\n  \"DENNIS\",\n  \"RANDY\",\n  \"SCOTT\",\n  \"BRIAN\",\n  \"BRUCE\",\n  \"ERIC\",\n  \"KEVIN\",\n  \"CRAIG\",\n  \"GLENN\",\n  \"GREG\",\n  \"WAYNE\",\n  \"CARL\",\n  \"TONY\",\n  \"KEITH\",\n  \"CHRIS\",\n  \"DONALD\",\n  \"EDWARD\",\n  \"JOSEPH\",\n  \"RICHARD\",\n  \"ROBERT\",\n  \"CHARLES\",\n  \"WILLIAM\",\n  \"THOMAS\",\n  \"JAMES\",\n  \"PATRICK\",\n  \"HENRY\",\n  \"HAROLD\",\n  \"HOWARD\",\n  \"WALTER\",\n  \"ARTHUR\",\n  \"ALBERT\",\n  \"EUGENE\",\n  \"RALPH\",\n  \"LAWRENCE\",\n  \"HERBERT\",\n  \"CLARENCE\",\n  \"ERNEST\",\n  \"WILLIE\",\n  \"ANDREW\",\n  \"SAMUEL\",\n  \"LOUIS\",\n  \"OSCAR\",\n  \"LEONARD\",\n  \"ROY\",\n  \"EARL\",\n  \"CHESTER\",\n  \"CLIFFORD\",\n  \"NORMAN\",\n  \"CLYDE\",\n  \"HOMER\",\n  \"STANLEY\",\n  \"LESTER\",\n  \"MORRIS\",\n  \"RAYMOND\",\n  \"LEWIS\",\n  \"LEON\",\n  \"EDDIE\",\n  \"CHARLIE\",\n  \"FLOYD\",\n  \"FRED\",\n  \"MARTIN\",\n  \"MELVIN\",\n  \"MARVIN\",\n  \"IRVING\",\n  \"HARVEY\",\n  \"SAM\",\n  \"MAX\",\n  \"MACK\",\n  \"JOE\",\n  \"ABE\",\n  \"HARRY\",\n  \"NED\",\n  \"GUS\",\n  \"BERT\",\n  \"EARL\"\n];\n//! CW用無線機のリスト。\nconst H = [\n  \"FT-991A\",\n  \"FT-891\",\n  \"FT-857D\",\n  \"FT-450D\",\n  \"FT-101ES\",\n  // Yaesu\n  \"IC-7300\",\n  \"IC-7610\",\n  \"IC-9700\",\n  \"IC-705\",\n  \"IC-718\",\n  // ICOM\n  \"TS-590SG\",\n  \"TS-590S\",\n  \"TS-480SAT\",\n  \"TS-850S\",\n  \"TS-2000\"\n  // Kenwood\n];\n//! RSTレポートのリスト。\nconst y = [\n  \"599\",\n  \"589\",\n  \"579\",\n  \"569\",\n  \"559\",\n  \"449\",\n  \"339\"\n];\n//! QSOのサンプルテンプレート。\nconst g = [\n  {\n    id: \"qso-1\",\n    category: \"qso\",\n    title: \"QSO例1: CQ呼び出しから終了まで\",\n    content: \"CQ CQ CQ DE JF2SDR JF2SDR PSE K\"\n  },\n  {\n    id: \"qso-2\",\n    category: \"qso\",\n    title: \"QSO例2: 応答\",\n    content: \"JF2SDR DE JR2ZWA JR2ZWA K\"\n  },\n  {\n    id: \"qso-3\",\n    category: \"qso\",\n    title: \"QSO例3: 挨拶と信号報告\",\n    content: \"R JR2ZWA DE JF2SDR GM OM TNX FER UR CALL BT UR RST IS 599 599 BT MI QTH IS NAGOYA NAGOYA CITY ES MI NAME IS SHIN SHIN HW ? AR JF2SDR DE JF2SDR KN\"\n  },\n  {\n    id: \"qso-4\",\n    category: \"qso\",\n    title: \"QSO例4: 返信と自己紹介\",\n    content: \"R JF2SDR DE JR2ZWA GM DR SHIN OM TKS FER FB RPT 599 FM NAGOYA BT UR RST ALSO 599 599 VY FB MI QTH IS GIFU GIFU CITY BT NAME IS HIRO HIRO HW? JF2SDR DE JR2ZWA KN\"\n  },\n  {\n    id: \"qso-5\",\n    category: \"qso\",\n    title: \"QSO例5: リグとアンテナ情報\",\n    content: \"R FB DE JF2SDR DR HIRO OM BT MI RIG IS TS-850S PWR 100W ES ANT IS 3ELE YAGI 12MH BT PSE UR QSL CRD VIA JARL ? MI CRD SURE HW? AR JR2ZWA DE JF2SDR KN\"\n  },\n  {\n    id: \"qso-6\",\n    category: \"qso\",\n    title: \"QSO例6: QSL確認と終了\",\n    content: \"R JF2SDR DE JR2ZWA OK SHIN OM BT UR RIG ES ANT VY FB BT MI RIG IS FT-101ES VY OLD RIG ES ANT IS DP 8MH BT QSL VIA JARL OK SURE BT TNX FB 1ST QSO ES 73 AR JF2SDR DE JR2ZWA VA\"\n  },\n  {\n    id: \"qso-7\",\n    category: \"qso\",\n    title: \"QSO例7: 最終挨拶\",\n    content: \"OK HIRO SOLID CPI BT TKS FB QSO ES BEST 73 AR JR2ZWA DE JF2SDR VA TU E E\"\n  }\n];\n//! 英文100字程度のサンプルテンプレート。\nconst m = [\n  {\n    id: \"text100-1\",\n    category: \"text100\",\n    title: \"英文例1: 自己紹介\",\n    content: \"MY NAME IS JOHN. I LIVE IN TOKYO JAPAN. I AM A STUDENT AT THE UNIVERSITY. I ENJOY LEARNING MORSE CODE IN MY FREE TIME.\"\n  },\n  {\n    id: \"text100-2\",\n    category: \"text100\",\n    title: \"英文例2: 天気\",\n    content: \"THE WEATHER TODAY IS VERY NICE. IT IS SUNNY AND WARM. I WENT FOR A WALK IN THE PARK. MANY PEOPLE WERE ENJOYING THE SUNSHINE.\"\n  },\n  {\n    id: \"text100-3\",\n    category: \"text100\",\n    title: \"英文例3: 趣味\",\n    content: \"I HAVE MANY HOBBIES. I LIKE READING BOOKS AND LISTENING TO MUSIC. ON WEEKENDS I PLAY TENNIS WITH MY FRIENDS. WE HAVE A LOT OF FUN.\"\n  }\n];\n//! 英文200字程度のサンプルテンプレート。\nconst N = [\n  {\n    id: \"text200-1\",\n    category: \"text200\",\n    title: \"英文例1: アマチュア無線の歴史\",\n    content: \"AMATEUR RADIO HAS A LONG AND RICH HISTORY. IT BEGAN IN THE EARLY TWENTIETH CENTURY WHEN ENTHUSIASTS STARTED EXPERIMENTING WITH RADIO WAVES. MORSE CODE WAS THE PRIMARY MODE OF COMMUNICATION. TODAY AMATEUR RADIO CONTINUES TO BE A POPULAR HOBBY AROUND THE WORLD. OPERATORS USE VARIOUS MODES INCLUDING CW SSB AND DIGITAL MODES. IT IS A GREAT WAY TO MAKE FRIENDS AND LEARN ABOUT TECHNOLOGY.\"\n  },\n  {\n    id: \"text200-2\",\n    category: \"text200\",\n    title: \"英文例2: 旅行の思い出\",\n    content: \"LAST SUMMER I WENT ON A TRIP TO KYOTO. IT WAS MY FIRST TIME VISITING THE ANCIENT CAPITAL OF JAPAN. I VISITED MANY FAMOUS TEMPLES AND SHRINES. THE ARCHITECTURE WAS BEAUTIFUL AND THE GARDENS WERE PEACEFUL. I ALSO ENJOYED TRYING LOCAL FOODS LIKE TOFU AND GREEN TEA. THE PEOPLE WERE VERY FRIENDLY AND HELPFUL. I TOOK MANY PHOTOS TO REMEMBER THIS WONDERFUL EXPERIENCE. I HOPE TO RETURN SOMEDAY.\"\n  }\n];\n//! 英文300字程度のサンプルテンプレート。\nconst C = [\n  {\n    id: \"text300-1\",\n    category: \"text300\",\n    title: \"英文例1: モールス符号の学習\",\n    content: \"LEARNING MORSE CODE IS A REWARDING EXPERIENCE. AT FIRST IT MAY SEEM DIFFICULT BUT WITH REGULAR PRACTICE IT BECOMES EASIER. THE KOCH METHOD IS ONE OF THE MOST EFFECTIVE WAYS TO LEARN. IT STARTS WITH JUST TWO CHARACTERS AND GRADUALLY ADDS MORE. THIS APPROACH HELPS YOU LEARN AT A STEADY PACE. LISTENING PRACTICE IS ALSO VERY IMPORTANT. YOU SHOULD TRY TO COPY REAL MORSE CODE TRANSMISSIONS. MANY ONLINE RESOURCES ARE AVAILABLE TO HELP YOU PRACTICE. JOINING AN AMATEUR RADIO CLUB CAN ALSO BE BENEFICIAL. YOU CAN MEET OTHER ENTHUSIASTS AND SHARE EXPERIENCES. WITH DEDICATION AND PATIENCE YOU WILL MASTER MORSE CODE AND ENJOY USING IT IN YOUR RADIO COMMUNICATIONS.\"\n  },\n  {\n    id: \"text300-2\",\n    category: \"text300\",\n    title: \"英文例2: 無線交信の楽しみ\",\n    content: \"AMATEUR RADIO OFFERS MANY EXCITING OPPORTUNITIES. ONE OF THE GREATEST JOYS IS MAKING CONTACT WITH STATIONS AROUND THE WORLD. YOU CAN TALK TO PEOPLE FROM DIFFERENT COUNTRIES AND CULTURES. EACH CONTACT IS UNIQUE AND SPECIAL. SOME OPERATORS ENJOY CONTESTS WHERE THEY TRY TO MAKE AS MANY CONTACTS AS POSSIBLE. OTHERS PREFER RELAXED CONVERSATIONS ABOUT HOBBIES AND DAILY LIFE. DX CONTACTS WITH DISTANT STATIONS ARE PARTICULARLY THRILLING. THE THRILL OF HEARING A WEAK SIGNAL FROM FAR AWAY IS UNFORGETTABLE. OPERATING PORTABLE FROM MOUNTAINTOPS OR PARKS IS ALSO FUN. YOU CAN COMBINE YOUR LOVE OF RADIO WITH OUTDOOR ACTIVITIES. AMATEUR RADIO IS MORE THAN A HOBBY IT IS A LIFELONG PASSION.\"\n  }\n];\nclass x {\n  /**\n   * ランダムなコールサインを生成する\n   * @returns JA/JE/JF等のプレフィックス + 0-9のエリア番号 + 3文字のサフィックス\n   */\n  static generateCallsign() {\n    const t = [\"JA\", \"JE\", \"JF\", \"JH\", \"JI\", \"JJ\", \"JK\", \"JL\", \"JM\", \"JN\", \"JO\", \"JP\", \"JQ\", \"JR\"], e = t[Math.floor(Math.random() * t.length)], s = Math.floor(Math.random() * 10), r = String.fromCharCode(65 + Math.floor(Math.random() * 26)) + String.fromCharCode(65 + Math.floor(Math.random() * 26)) + String.fromCharCode(65 + Math.floor(Math.random() * 26));\n    return `${e}${s}${r}`;\n  }\n  /**\n   * 配列からランダムな要素を選択する\n   * @param array - 選択元の配列\n   * @returns ランダムに選ばれた要素\n   */\n  static randomChoice(t) {\n    return t[Math.floor(Math.random() * t.length)];\n  }\n  /**\n   * ランダムなQSOを生成する\n   * @returns 完全なQSOテンプレート\n   */\n  static generateRandomQSO() {\n    const t = this.generateCallsign(), e = this.generateCallsign(), s = this.randomChoice(L), r = this.randomChoice(L), n = this.randomChoice(U), i = this.randomChoice(U), o = this.randomChoice(y), a = this.randomChoice(y), u = this.randomChoice(H), E = this.randomChoice(H), c = this.randomChoice([\"GM\", \"GA\", \"GE\", \"GN\"]), A = `CQ CQ CQ DE ${t} ${t} PSE K BT ${t} DE ${e} ${e} K BT R ${e} DE ${t} ${c} OM TNX FER UR CALL BT UR RST IS ${a} ${a} BT MI QTH IS ${s} ${s} ES MI NAME IS ${n} ${n} HW ? AR ${t} DE ${t} KN BT R ${t} DE ${e} ${c} DR ${n} OM TKS FER FB RPT ${a} FM ${s} BT UR RST ALSO ${o} ${o} VY FB MI QTH IS ${r} ${r} BT NAME IS ${i} ${i} HW? ${t} DE ${e} KN BT R FB DE ${t} DR ${i} OM BT MI RIG IS ${u} PWR 100W BT PSE UR QSL CRD VIA JARL ? MI CRD SURE HW? AR ${e} DE ${t} KN BT R ${t} DE ${e} OK ${n} OM BT UR RIG ${u} VY FB BT MI RIG IS ${E} BT QSL VIA JARL OK SURE BT TNX FB QSO ES 73 AR ${t} DE ${e} VA BT OK ${i} SOLID CPI BT TKS FB QSO ES BEST 73 AR ${e} DE ${t} VA TU E E`;\n    return {\n      id: `qso-random-${Date.now()}`,\n      category: \"qso\",\n      title: \"ランダムQSO\",\n      content: A\n    };\n  }\n  /**\n   * カテゴリー別にビルトインテンプレートを取得する\n   * @param category - テンプレートカテゴリー（省略時は全カテゴリー）\n   * @returns テンプレートの配列\n   */\n  static getBuiltinTemplates(t) {\n    if (!t)\n      return [...g, ...m, ...N, ...C];\n    switch (t) {\n      case \"qso\":\n        return [...g];\n      case \"text100\":\n        return [...m];\n      case \"text200\":\n        return [...N];\n      case \"text300\":\n        return [...C];\n      default:\n        return [];\n    }\n  }\n  /**\n   * IDでテンプレートを検索する\n   * @param id - テンプレートID\n   * @returns 該当するテンプレート（見つからない場合はundefined）\n   */\n  static getTemplateById(t) {\n    return this.getBuiltinTemplates().find((s) => s.id === t);\n  }\n  /**\n   * 正答率を計算する\n   * @param correctAnswer - 正解の文字列\n   * @param userInput - ユーザー入力の文字列\n   * @returns 正答率（0-100）\n   */\n  static calculateAccuracy(t, e) {\n    if (!e) return 0;\n    //! 空白を除去して大文字化して比較。\n    const s = t.replace(/\\s/g, \"\").toUpperCase(), r = e.replace(/\\s/g, \"\").toUpperCase(), n = Math.max(s.length, r.length);\n    if (n === 0) return 0;\n    let i = 0;\n    for (let o = 0; o < n; o++)\n      s[o] === r[o] && i++;\n    return Math.round(i / n * 100);\n  }\n  /**\n   * 合格判定\n   * @param accuracy - 正答率（0-100）\n   * @param threshold - 合格ライン（デフォルト: 90）\n   * @returns 合格の場合true\n   */\n  static isPassed(t, e = 90) {\n    return t >= e;\n  }\n  /**\n   * 全カテゴリーのテンプレート数を取得する\n   * @returns カテゴリーごとのテンプレート数\n   */\n  static getTemplateCounts() {\n    return {\n      qso: g.length,\n      text100: m.length,\n      text200: N.length,\n      text300: C.length\n    };\n  }\n  /**\n   * 全ビルトインテンプレートの総数を取得する\n   * @returns 全テンプレート数\n   */\n  static getTotalTemplateCount() {\n    return g.length + m.length + N.length + C.length;\n  }\n}\nclass Y {\n  /**\n   * カードをシャッフルする（Fisher-Yates shuffle）\n   * @param cards - シャッフルするカードの配列\n   * @returns シャッフルされたカードの配列\n   */\n  static shuffleCards(t) {\n    const e = [...t];\n    for (let s = e.length - 1; s > 0; s--) {\n      const r = Math.floor(Math.random() * (s + 1));\n      [e[s], e[r]] = [e[r], e[s]];\n    }\n    return e;\n  }\n  /**\n   * 試験問題を生成する\n   * @param entries - 問題の元となるエントリーの配列\n   * @param questionType - 出題形式\n   * @param count - 問題数（entriesの長さを超える場合はentriesの長さになる）\n   * @returns 試験問題の配列\n   */\n  static generateExamQuestions(t, e, s) {\n    if (t.length === 0) return [];\n    const r = Math.min(s, t.length);\n    return this.shuffleCards(t).slice(0, r).map((o) => this.createQuestion(o, t, e));\n  }\n  /**\n   * 1つの試験問題を作成する\n   * @param entry - 正解となるエントリー\n   * @param allEntries - 選択肢生成用の全エントリー\n   * @param questionType - 出題形式\n   * @returns 試験問題\n   */\n  static createQuestion(t, e, s) {\n    //! 正解以外のエントリーから3つ選ぶ。\n    const r = e.filter((o) => o.abbreviation !== t.abbreviation).sort(() => Math.random() - 0.5).slice(0, 3);\n    let n, i;\n    switch (s) {\n      case \"abbr-to-meaning\":\n      case \"morse-to-meaning\":\n        n = `${t.english} / ${t.japanese}`, i = [n, ...r.map((o) => `${o.english} / ${o.japanese}`)];\n        break;\n      case \"meaning-to-abbr\":\n      case \"morse-to-abbr\":\n        n = t.abbreviation, i = [n, ...r.map((o) => o.abbreviation)];\n        break;\n    }\n    //! 選択肢をシャッフル。\n    return i = i.sort(() => Math.random() - 0.5), {\n      type: s,\n      entry: t,\n      choices: i,\n      correctAnswer: n\n    };\n  }\n  /**\n   * ユーザーの回答が正解かどうかを判定する\n   * @param question - 試験問題\n   * @param userAnswer - ユーザーの回答\n   * @returns 正解の場合true\n   */\n  static checkAnswer(t, e) {\n    return e === t.correctAnswer;\n  }\n  /**\n   * 試験結果のスコアを計算する\n   * @param results - 試験結果の配列\n   * @returns スコア情報\n   */\n  static calculateScore(t) {\n    const e = t.length, s = t.filter((n) => n.isCorrect).length, r = e > 0 ? Math.round(s / e * 100) : 0;\n    return {\n      correct: s,\n      total: e,\n      percentage: r\n    };\n  }\n  /**\n   * 合格判定\n   * @param percentage - 正答率（0-100）\n   * @param threshold - 合格ライン（デフォルト: 80）\n   * @returns 合格の場合true\n   */\n  static isPassed(t, e = 80) {\n    return t >= e;\n  }\n  /**\n   * 間違えた問題のエントリーを抽出する\n   * @param results - 試験結果の配列\n   * @returns 間違えたエントリーの配列\n   */\n  static getWrongAnswers(t) {\n    return t.filter((e) => !e.isCorrect).map((e) => e.question.entry);\n  }\n  /**\n   * 正解した問題のエントリーを抽出する\n   * @param results - 試験結果の配列\n   * @returns 正解したエントリーの配列\n   */\n  static getCorrectAnswers(t) {\n    return t.filter((e) => e.isCorrect).map((e) => e.question.entry);\n  }\n  /**\n   * タグでフィルタリングする\n   * @param entries - フィルタリング対象のエントリー配列\n   * @param tags - フィルタリングに使用するタグのセット\n   * @returns フィルタリングされたエントリー配列\n   */\n  static filterByTags(t, e) {\n    return e.size === 0 ? t : t.filter((s) => {\n      const r = s.tags.split(\",\").map((n) => n.trim());\n      return Array.from(e).some((n) => r.includes(n));\n    });\n  }\n  /**\n   * 使用頻度でフィルタリングする\n   * @param entries - フィルタリング対象のエントリー配列\n   * @param frequencies - フィルタリングに使用する頻度のセット（1-5）\n   * @returns フィルタリングされたエントリー配列\n   */\n  static filterByFrequencies(t, e) {\n    return e.size === 0 ? t : t.filter((s) => e.has(s.frequency));\n  }\n  /**\n   * 検索クエリでフィルタリングする\n   * @param entries - フィルタリング対象のエントリー配列\n   * @param query - 検索クエリ（略語、英語、日本語、タグから検索）\n   * @returns フィルタリングされたエントリー配列\n   */\n  static filterByQuery(t, e) {\n    if (!e.trim()) return t;\n    const s = e.toLowerCase();\n    return t.filter(\n      (r) => r.abbreviation.toLowerCase().includes(s) || r.english.toLowerCase().includes(s) || r.japanese.includes(e) || r.tags.toLowerCase().includes(s)\n    );\n  }\n  /**\n   * 全てのタグを抽出する\n   * @param entries - エントリー配列\n   * @returns ユニークなタグの配列（ソート済み）\n   */\n  static getAllTags(t) {\n    const e = /* @__PURE__ */ new Set();\n    return t.forEach((s) => {\n      s.tags.split(\",\").forEach((r) => {\n        const n = r.trim();\n        n && e.add(n);\n      });\n    }), Array.from(e).sort();\n  }\n  /**\n   * エントリーを略語でソートする\n   * @param entries - ソート対象のエントリー配列\n   * @param ascending - 昇順の場合true（デフォルト: true）\n   * @returns ソートされたエントリー配列\n   */\n  static sortByAbbreviation(t, e = !0) {\n    const s = [...t];\n    return s.sort((r, n) => {\n      const i = r.abbreviation.localeCompare(n.abbreviation);\n      return e ? i : -i;\n    }), s;\n  }\n  /**\n   * エントリーを使用頻度でソートする\n   * @param entries - ソート対象のエントリー配列\n   * @param ascending - 昇順の場合true（デフォルト: false、頻度の高い順）\n   * @returns ソートされたエントリー配列\n   */\n  static sortByFrequency(t, e = !1) {\n    const s = [...t];\n    return s.sort((r, n) => {\n      const i = r.frequency - n.frequency;\n      return e ? i : -i;\n    }), s;\n  }\n  /**\n   * エントリーを英語でソートする\n   * @param entries - ソート対象のエントリー配列\n   * @param ascending - 昇順の場合true（デフォルト: true）\n   * @returns ソートされたエントリー配列\n   */\n  static sortByEnglish(t, e = !0) {\n    const s = [...t];\n    return s.sort((r, n) => {\n      const i = r.english.localeCompare(n.english);\n      return e ? i : -i;\n    }), s;\n  }\n  /**\n   * エントリーを日本語でソートする\n   * @param entries - ソート対象のエントリー配列\n   * @param ascending - 昇順の場合true（デフォルト: true）\n   * @returns ソートされたエントリー配列\n   */\n  static sortByJapanese(t, e = !0) {\n    const s = [...t];\n    return s.sort((r, n) => {\n      const i = r.japanese.localeCompare(n.japanese, \"ja\");\n      return e ? i : -i;\n    }), s;\n  }\n  /**\n   * エントリーをタグでソートする\n   * @param entries - ソート対象のエントリー配列\n   * @param ascending - 昇順の場合true（デフォルト: true）\n   * @returns ソートされたエントリー配列\n   */\n  static sortByTags(t, e = !0) {\n    const s = [...t];\n    return s.sort((r, n) => {\n      const i = r.tags.localeCompare(n.tags);\n      return e ? i : -i;\n    }), s;\n  }\n}\nconst p = class p {\n  /**\n   * 進捗を保存する\n   */\n  static saveProgress(t) {\n    try {\n      const e = {\n        known: Array.from(t.known),\n        unknown: Array.from(t.unknown)\n      };\n      localStorage.setItem(\n        `${this.STORAGE_PREFIX}progress`,\n        JSON.stringify(e)\n      );\n    } catch (e) {\n      console.error(\"進捗保存エラー:\", e);\n    }\n  }\n  /**\n   * 進捗を読み込む\n   */\n  static loadProgress() {\n    try {\n      const t = localStorage.getItem(`${this.STORAGE_PREFIX}progress`);\n      if (t) {\n        const e = JSON.parse(t);\n        return {\n          known: new Set(e.known || []),\n          unknown: new Set(e.unknown || [])\n        };\n      }\n    } catch (t) {\n      console.error(\"進捗読み込みエラー:\", t);\n    }\n    return { known: /* @__PURE__ */ new Set(), unknown: /* @__PURE__ */ new Set() };\n  }\n  /**\n   * 進捗をクリアする\n   */\n  static clearProgress() {\n    try {\n      localStorage.removeItem(`${this.STORAGE_PREFIX}progress`);\n    } catch (t) {\n      console.error(\"進捗クリアエラー:\", t);\n    }\n  }\n  /**\n   * フィルター状態を保存する\n   */\n  static saveFilters(t) {\n    try {\n      const e = {\n        selectedTags: Array.from(t.selectedTags),\n        selectedFrequencies: Array.from(t.selectedFrequencies),\n        searchQuery: t.searchQuery\n      };\n      localStorage.setItem(\n        `${this.STORAGE_PREFIX}filters`,\n        JSON.stringify(e)\n      );\n    } catch (e) {\n      console.error(\"フィルター保存エラー:\", e);\n    }\n  }\n  /**\n   * フィルター状態を読み込む\n   */\n  static loadFilters() {\n    try {\n      const t = localStorage.getItem(`${this.STORAGE_PREFIX}filters`);\n      if (t) {\n        const e = JSON.parse(t);\n        return {\n          selectedTags: new Set(e.selectedTags || []),\n          selectedFrequencies: new Set(e.selectedFrequencies || [5]),\n          searchQuery: e.searchQuery || \"\"\n        };\n      }\n    } catch (t) {\n      console.error(\"フィルター読み込みエラー:\", t);\n    }\n    return {\n      selectedTags: /* @__PURE__ */ new Set(),\n      selectedFrequencies: /* @__PURE__ */ new Set([5]),\n      searchQuery: \"\"\n    };\n  }\n  /**\n   * ビュー状態を保存する\n   */\n  static saveViewState(t) {\n    try {\n      localStorage.setItem(\n        `${this.STORAGE_PREFIX}viewState`,\n        JSON.stringify(t)\n      );\n    } catch (e) {\n      console.error(\"ビュー状態保存エラー:\", e);\n    }\n  }\n  /**\n   * ビュー状態を読み込む\n   */\n  static loadViewState() {\n    try {\n      const t = localStorage.getItem(`${this.STORAGE_PREFIX}viewState`);\n      if (t)\n        return JSON.parse(t);\n    } catch (t) {\n      console.error(\"ビュー状態読み込みエラー:\", t);\n    }\n    return {\n      viewMode: \"browse\",\n      displayMode: \"card\",\n      sortColumn: \"abbreviation\",\n      sortDirection: \"asc\",\n      learnQuestionType: \"abbr-to-meaning\",\n      examQuestionType: \"abbr-to-meaning\"\n    };\n  }\n  /**\n   * viewModeのみ保存する\n   */\n  static saveViewMode(t) {\n    const e = this.loadViewState();\n    e.viewMode = t, this.saveViewState(e);\n  }\n  /**\n   * displayModeのみ保存する\n   */\n  static saveDisplayMode(t) {\n    const e = this.loadViewState();\n    e.displayMode = t, this.saveViewState(e);\n  }\n  /**\n   * learnQuestionTypeのみ保存する\n   */\n  static saveLearnQuestionType(t) {\n    const e = this.loadViewState();\n    e.learnQuestionType = t, this.saveViewState(e);\n  }\n  /**\n   * examQuestionTypeのみ保存する\n   */\n  static saveExamQuestionType(t) {\n    const e = this.loadViewState();\n    e.examQuestionType = t, this.saveViewState(e);\n  }\n  /**\n   * sortColumnとsortDirectionを保存する\n   */\n  static saveSortState(t, e) {\n    const s = this.loadViewState();\n    s.sortColumn = t, s.sortDirection = e, this.saveViewState(s);\n  }\n};\np.STORAGE_PREFIX = \"v10.flashcard.\";\nlet w = p;\nexport {\n  K as AudioGenerator,\n  w as FlashcardState,\n  Y as FlashcardTrainer,\n  W as HorizontalKeyTrainer,\n  D as KOCH_SEQUENCE,\n  M as KochTrainer,\n  x as ListeningTrainer,\n  F as MorseBuffer,\n  d as MorseCodec,\n  G as TimerManager,\n  P as TimingCalculator,\n  b as VerticalKeyTrainer\n};\n//# sourceMappingURL=index.js.map\n","/**\n * 縦振り電鍵練習ビュー\n */\n\nimport type { View } from '../../router';\nimport {\n\tVerticalKeyTrainer,\n\tMorseBuffer,\n\tTimerManager,\n\tTimingCalculator,\n\tAudioGenerator\n} from 'morse-engine';\n\n/**\n * 縦振り電鍵練習ビュークラス\n */\nexport class VerticalKeyView implements View {\n\tprivate trainer: VerticalKeyTrainer;\n\tprivate buffer: MorseBuffer;\n\tprivate timer: TimerManager;\n\tprivate audio: AudioGenerator;\n\tprivate isKeyPressed = false;\n\tprivate keyPressHandler: ((e: KeyboardEvent) => void) | null = null;\n\tprivate keyReleaseHandler: ((e: KeyboardEvent) => void) | null = null;\n\tprivate updateIntervalId: number | null = null;\n\tprivate currentWPM = 20;\n\tprivate keyCode = 'Space';\n\n\tconstructor() {\n\t\t//! 設定を読み込む。\n\t\tconst savedWPM = localStorage.getItem('verticalKeyWPM');\n\t\tif (savedWPM) {\n\t\t\tthis.currentWPM = parseInt(savedWPM, 10);\n\t\t}\n\n\t\tconst savedKeyCode = localStorage.getItem('verticalKeyCode');\n\t\tif (savedKeyCode) {\n\t\t\tthis.keyCode = savedKeyCode;\n\t\t}\n\n\t\t//! コアコンポーネントを初期化。\n\t\tthis.buffer = new MorseBuffer();\n\t\tthis.timer = new TimerManager();\n\t\tthis.audio = new AudioGenerator({\n\t\t\tfrequency: 700,\n\t\t\tvolume: 0.5,\n\t\t\twpm: this.currentWPM\n\t\t});\n\n\t\t//! タイミング計算。\n\t\tconst timings = TimingCalculator.calculate(this.currentWPM);\n\n\t\t//! トレーナーを初期化（コールバックで音声制御）。\n\t\tthis.trainer = new VerticalKeyTrainer(\n\t\t\tthis.buffer,\n\t\t\tthis.timer,\n\t\t\ttimings,\n\t\t\t{\n\t\t\t\tonKeyPress: () => {\n\t\t\t\t\t//! キー押下時に音を鳴らす。\n\t\t\t\t\tthis.audio.startContinuousTone();\n\t\t\t\t},\n\t\t\t\tonKeyRelease: () => {\n\t\t\t\t\t//! キー解放時に音を止める。\n\t\t\t\t\tthis.audio.stopContinuousTone();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * キーコードを表示用にフォーマットする (KeyJ → J)\n\t */\n\tprivate formatKeyCode(keyCode: string): string {\n\t\treturn keyCode.replace(/^Key/, '');\n\t}\n\n\t/**\n\t * ビューをレンダリングする\n\t */\n\trender(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"settings-modal\" id=\"settings-modal\">\n\t\t\t\t<div class=\"settings-content\">\n\t\t\t\t\t<h2>設定</h2>\n\t\t\t\t\t<div class=\"settings-grid\">\n\t\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t\t<label for=\"volume-range\">音量</label>\n\t\t\t\t\t\t\t<div class=\"setting-row\">\n\t\t\t\t\t\t\t\t<input type=\"range\" id=\"volume-range\" min=\"0\" max=\"100\" value=\"${Math.round(this.audio.getVolume() * 100)}\">\n\t\t\t\t\t\t\t\t<input type=\"number\" id=\"volume-input\" min=\"0\" max=\"100\" value=\"${Math.round(this.audio.getVolume() * 100)}\">\n\t\t\t\t\t\t\t\t<span>%</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t\t<label for=\"frequency-input\">周波数 (Hz)</label>\n\t\t\t\t\t\t\t<input type=\"number\" id=\"frequency-input\" min=\"400\" max=\"1200\" value=\"${this.audio.getFrequency()}\" step=\"50\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t\t<label for=\"wpm-input\">WPM (速度: 5-40)</label>\n\t\t\t\t\t\t\t<input type=\"number\" id=\"wpm-input\" min=\"5\" max=\"40\" value=\"${this.currentWPM}\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t\t<label for=\"key-binding\">キーバインド</label>\n\t\t\t\t\t\t\t<input type=\"text\" id=\"key-binding\" value=\"${this.formatKeyCode(this.keyCode)}\" readonly placeholder=\"キーを押してください\">\n\t\t\t\t\t\t\t<span class=\"key-hint\">クリックしてキーを押す</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"settings-buttons\">\n\t\t\t\t\t\t<button id=\"cancel-btn\" class=\"btn btn-secondary\">キャンセル</button>\n\t\t\t\t\t\t<button id=\"ok-btn\" class=\"btn btn-primary\">OK</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t<h1>縦振り電鍵練習</h1>\n\t\t\t\t\t<button class=\"settings-btn\" id=\"settings-btn\" title=\"設定\">⚙</button>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"key-button-container\">\n\t\t\t\t\t<button class=\"key-button\" id=\"morse-key\">\n\t\t\t\t\t\tKEY\n\t\t\t\t\t\t<span class=\"key-label\">(クリック/タップで送信)</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"practice-container\">\n\t\t\t\t\t<div class=\"display-area\">\n\t\t\t\t\t\t<div class=\"display-section\">\n\t\t\t\t\t\t\t<h3>モールス信号</h3>\n\t\t\t\t\t\t\t<div class=\"display-output morse-buffer\" id=\"morse-buffer\">（ここにモールス符号が表示されます）</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"display-section\">\n\t\t\t\t\t\t\t<h3>デコード結果</h3>\n\t\t\t\t\t\t\t<div class=\"display-output\" id=\"decoded-text\">（ここにデコードされた文字が表示されます）</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"action-area\">\n\t\t\t\t\t\t<button class=\"btn btn-large btn-danger\" id=\"clear-btn\">クリア</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"status-area\">\n\t\t\t\t\t\t<div class=\"status-item\">\n\t\t\t\t\t\t\t<span class=\"label\">現在の速度</span>\n\t\t\t\t\t\t\t<span class=\"value\" id=\"current-wpm\">${this.currentWPM}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"status-item\" id=\"key-status\">\n\t\t\t\t\t\t\t<span class=\"label\">キー状態</span>\n\t\t\t\t\t\t\t<span class=\"value\">解放</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"status-item\">\n\t\t\t\t\t\t\t<span class=\"label\">入力文字数</span>\n\t\t\t\t\t\t\t<span class=\"value\" id=\"char-count\">0</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t\t<h3>使い方</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>スペースキーまたは画面のボタンを押している間、モールス信号が送信されます</li>\n\t\t\t\t\t\t\t<li>短く押すと「・」(dit)、長く押すと「ー」(dah)になります</li>\n\t\t\t\t\t\t\t<li>文字間は自動的に判定されます</li>\n\t\t\t\t\t\t\t<li>WPM（Words Per Minute）で速度を調整できます</li>\n\t\t\t\t\t\t\t<li>画面右上の⚙アイコンから音量・周波数・速度を調整できます</li>\n\t\t\t\t\t\t\t<li>音声が鳴らない場合は、一度ボタンをクリックしてください（ブラウザのオーディオポリシー）</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\t//! イベントリスナーを設定。\n\t\tthis.attachEventListeners();\n\t\t//! 定期更新を開始。\n\t\tthis.startUpdate();\n\t}\n\n\t/**\n\t * イベントリスナーを設定する\n\t */\n\tprivate attachEventListeners(): void {\n\t\t//! 戻るボタン。\n\t\tconst backBtn = document.querySelector('.back-btn');\n\t\tbackBtn?.addEventListener('click', () => {\n\t\t\twindow.location.hash = '#menu';\n\t\t});\n\n\t\t//! 設定ボタン。\n\t\tconst settingsBtn = document.getElementById('settings-btn');\n\t\tsettingsBtn?.addEventListener('click', () => {\n\t\t\tthis.openSettingsModal();\n\t\t});\n\n\t\t//! クリアボタン。\n\t\tconst clearBtn = document.getElementById('clear-btn');\n\t\tclearBtn?.addEventListener('click', () => {\n\t\t\tthis.trainer.clear();\n\t\t\tthis.updateDisplay();\n\t\t});\n\n\t\t//! キーボードイベント（設定されたキー）。\n\t\tthis.keyPressHandler = (e: KeyboardEvent) => {\n\t\t\tif (e.code === this.keyCode && !e.repeat) {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (!this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyDown();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.keyReleaseHandler = (e: KeyboardEvent) => {\n\t\t\tif (e.code === this.keyCode) {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyUp();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener('keydown', this.keyPressHandler);\n\t\twindow.addEventListener('keyup', this.keyReleaseHandler);\n\n\t\t//! ボタンイベント（マウス/タッチ）。\n\t\tconst keyButton = document.getElementById('morse-key');\n\t\tif (keyButton) {\n\t\t\t//! マウスイベント。\n\t\t\tkeyButton.addEventListener('mousedown', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (!this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyDown();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tkeyButton.addEventListener('mouseup', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyUp();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tkeyButton.addEventListener('mouseleave', () => {\n\t\t\t\tif (this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyUp();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//! タッチイベント。\n\t\t\tkeyButton.addEventListener('touchstart', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (!this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyDown();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tkeyButton.addEventListener('touchend', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyUp();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tkeyButton.addEventListener('touchcancel', () => {\n\t\t\t\tif (this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyUp();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t//! モーダルのキャンセルボタン。\n\t\tconst cancelBtn = document.getElementById('cancel-btn');\n\t\tcancelBtn?.addEventListener('click', () => {\n\t\t\tthis.closeSettingsModal(false);\n\t\t});\n\n\t\t//! モーダルのOKボタン。\n\t\tconst okBtn = document.getElementById('ok-btn');\n\t\tokBtn?.addEventListener('click', () => {\n\t\t\tthis.closeSettingsModal(true);\n\t\t});\n\n\t\t//! モーダル背景クリックで閉じる。\n\t\tconst modal = document.getElementById('settings-modal');\n\t\tmodal?.addEventListener('click', (e) => {\n\t\t\tif (e.target === modal) {\n\t\t\t\tthis.closeSettingsModal(false);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * キー押下処理\n\t */\n\tprivate handleKeyDown(): void {\n\t\tthis.isKeyPressed = true;\n\t\tthis.trainer.keyPress();\n\t\tthis.updateKeyStatus(true);\n\n\t\t//! ボタンの見た目を更新。\n\t\tconst keyButton = document.getElementById('morse-key');\n\t\tif (keyButton) {\n\t\t\tkeyButton.classList.add('pressed');\n\t\t}\n\t}\n\n\t/**\n\t * キー解放処理\n\t */\n\tprivate handleKeyUp(): void {\n\t\tthis.isKeyPressed = false;\n\t\tthis.trainer.keyRelease();\n\t\tthis.updateKeyStatus(false);\n\n\t\t//! ボタンの見た目を更新。\n\t\tconst keyButton = document.getElementById('morse-key');\n\t\tif (keyButton) {\n\t\t\tkeyButton.classList.remove('pressed');\n\t\t}\n\t}\n\n\t/**\n\t * 定期更新を開始する\n\t */\n\tprivate startUpdate(): void {\n\t\t//! 100msごとに画面を更新。\n\t\tthis.updateIntervalId = window.setInterval(() => {\n\t\t\tthis.updateDisplay();\n\t\t}, 100);\n\t}\n\n\t/**\n\t * 表示を更新する\n\t */\n\tprivate updateDisplay(): void {\n\t\tconst morseBuffer = document.getElementById('morse-buffer');\n\t\tconst decodedText = document.getElementById('decoded-text');\n\t\tconst charCount = document.getElementById('char-count');\n\n\t\tif (morseBuffer) {\n\t\t\tconst buffer = this.trainer.getBuffer();\n\t\t\tconst sequence = this.trainer.getSequence();\n\t\t\tconst fullDisplay = sequence ? `${buffer} ${sequence}` : buffer;\n\t\t\tmorseBuffer.textContent = fullDisplay || '（ここにモールス符号が表示されます）';\n\t\t}\n\n\t\tif (decodedText) {\n\t\t\tconst text = this.trainer.getDecoded();\n\t\t\tdecodedText.textContent = text || '（ここにデコードされた文字が表示されます）';\n\t\t}\n\n\t\tif (charCount) {\n\t\t\tconst text = this.trainer.getDecoded();\n\t\t\tcharCount.textContent = text.length.toString();\n\t\t}\n\t}\n\n\t/**\n\t * キー状態表示を更新する\n\t */\n\tprivate updateKeyStatus(isPressed: boolean): void {\n\t\tconst keyStatus = document.getElementById('key-status');\n\t\tif (keyStatus) {\n\t\t\tconst valueSpan = keyStatus.querySelector('.value');\n\t\t\tif (valueSpan) {\n\t\t\t\tvalueSpan.textContent = isPressed ? '押下中' : '解放';\n\t\t\t}\n\t\t\tif (isPressed) {\n\t\t\t\tkeyStatus.classList.add('active');\n\t\t\t} else {\n\t\t\t\tkeyStatus.classList.remove('active');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * 設定モーダルを開く\n\t */\n\tprivate openSettingsModal(): void {\n\t\tconst modal = document.getElementById('settings-modal');\n\t\tif (!modal) return;\n\n\t\t//! モーダルを表示。\n\t\tmodal.classList.add('active');\n\n\t\t//! 現在の設定値をinput要素に反映。\n\t\tconst volumeRange = document.getElementById('volume-range') as HTMLInputElement;\n\t\tconst volumeInput = document.getElementById('volume-input') as HTMLInputElement;\n\t\tconst frequencyInput = document.getElementById('frequency-input') as HTMLInputElement;\n\t\tconst wpmInput = document.getElementById('wpm-input') as HTMLInputElement;\n\n\t\tconst volume = Math.round(this.audio.getVolume() * 100);\n\t\tif (volumeRange) volumeRange.value = volume.toString();\n\t\tif (volumeInput) volumeInput.value = volume.toString();\n\t\tif (frequencyInput) frequencyInput.value = this.audio.getFrequency().toString();\n\t\tif (wpmInput) wpmInput.value = this.currentWPM.toString();\n\n\t\t//! 音量スライダーと数値入力の同期のみ（実際の音声設定は変更しない）。\n\t\tconst syncVolume = () => {\n\t\t\tif (volumeRange && volumeInput) {\n\t\t\t\tvolumeInput.value = volumeRange.value;\n\t\t\t}\n\t\t};\n\t\tconst syncVolumeReverse = () => {\n\t\t\tif (volumeRange && volumeInput) {\n\t\t\t\tvolumeRange.value = volumeInput.value;\n\t\t\t}\n\t\t};\n\n\t\tvolumeRange?.addEventListener('input', syncVolume);\n\t\tvolumeInput?.addEventListener('input', syncVolumeReverse);\n\n\t\t//! キーバインド設定。\n\t\tconst keyBindingInput = document.getElementById('key-binding') as HTMLInputElement;\n\t\tif (keyBindingInput) {\n\t\t\tkeyBindingInput.addEventListener('click', () => {\n\t\t\t\tkeyBindingInput.value = 'キーを押してください...';\n\t\t\t\tkeyBindingInput.classList.add('waiting-key');\n\t\t\t});\n\n\t\t\tkeyBindingInput.addEventListener('keydown', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t\tkeyBindingInput.value = e.code;\n\t\t\t\tkeyBindingInput.classList.remove('waiting-key');\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * 設定モーダルを閉じる\n\t */\n\tprivate closeSettingsModal(save: boolean): void {\n\t\tconst modal = document.getElementById('settings-modal');\n\t\tif (!modal) return;\n\n\t\t//! モーダルを非表示。\n\t\tmodal.classList.remove('active');\n\n\t\tif (save) {\n\t\t\t//! 設定を適用。\n\t\t\tconst volumeInput = document.getElementById('volume-input') as HTMLInputElement;\n\t\t\tconst frequencyInput = document.getElementById('frequency-input') as HTMLInputElement;\n\t\t\tconst wpmInput = document.getElementById('wpm-input') as HTMLInputElement;\n\t\t\tconst keyBindingInput = document.getElementById('key-binding') as HTMLInputElement;\n\n\t\t\tif (volumeInput) {\n\t\t\t\tconst volume = parseInt(volumeInput.value, 10) / 100;\n\t\t\t\tthis.audio.setVolume(volume);\n\t\t\t}\n\n\t\t\tif (frequencyInput) {\n\t\t\t\tconst frequency = parseInt(frequencyInput.value, 10);\n\t\t\t\tthis.audio.setFrequency(frequency);\n\t\t\t}\n\n\t\t\tif (wpmInput) {\n\t\t\t\tconst newWpm = parseInt(wpmInput.value, 10);\n\t\t\t\tthis.currentWPM = newWpm;\n\t\t\t\tthis.audio.setWPM(newWpm);\n\n\t\t\t\t//! WPMをlocalStorageに保存。\n\t\t\t\tlocalStorage.setItem('verticalKeyWPM', newWpm.toString());\n\n\t\t\t\t//! タイミングを再計算してトレーナーを再初期化。\n\t\t\t\tconst timings = TimingCalculator.calculate(newWpm);\n\t\t\t\tthis.trainer = new VerticalKeyTrainer(\n\t\t\t\t\tthis.buffer,\n\t\t\t\t\tthis.timer,\n\t\t\t\t\ttimings,\n\t\t\t\t\t{\n\t\t\t\t\t\tonKeyPress: () => {\n\t\t\t\t\t\t\tthis.audio.startContinuousTone();\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonKeyRelease: () => {\n\t\t\t\t\t\t\tthis.audio.stopContinuousTone();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t//! 現在のWPM表示を更新。\n\t\t\t\tconst currentWpmDisplay = document.getElementById('current-wpm');\n\t\t\t\tif (currentWpmDisplay) currentWpmDisplay.textContent = newWpm.toString();\n\t\t\t}\n\n\t\t\tif (keyBindingInput && keyBindingInput.value) {\n\t\t\t\tthis.keyCode = keyBindingInput.value;\n\n\t\t\t\t//! キーバインドをlocalStorageに保存。\n\t\t\t\tlocalStorage.setItem('verticalKeyCode', this.keyCode);\n\t\t\t}\n\t\t}\n\t\t//! キャンセル時は何もしない（設定を元に戻す必要もない）。\n\t}\n\n\t/**\n\t * ビューを破棄する\n\t */\n\tdestroy(): void {\n\t\t//! イベントリスナーを削除。\n\t\tif (this.keyPressHandler) {\n\t\t\twindow.removeEventListener('keydown', this.keyPressHandler);\n\t\t\tthis.keyPressHandler = null;\n\t\t}\n\t\tif (this.keyReleaseHandler) {\n\t\t\twindow.removeEventListener('keyup', this.keyReleaseHandler);\n\t\t\tthis.keyReleaseHandler = null;\n\t\t}\n\n\t\t//! 定期更新を停止。\n\t\tif (this.updateIntervalId !== null) {\n\t\t\tclearInterval(this.updateIntervalId);\n\t\t\tthis.updateIntervalId = null;\n\t\t}\n\n\t\t//! 音声を停止。\n\t\tthis.audio.stopContinuousTone();\n\n\t\t//! トレーナーをクリア。\n\t\tthis.trainer.clear();\n\t}\n}\n","/**\n * 横振り電鍵練習ビュー\n */\n\nimport type { View } from '../../router';\nimport {\n\tHorizontalKeyTrainer,\n\tMorseBuffer,\n\tTimerManager,\n\tTimingCalculator,\n\tAudioGenerator,\n\ttype IambicMode,\n\ttype PaddleLayout\n} from 'morse-engine';\n\n/**\n * 横振り電鍵練習ビュークラス\n */\nexport class HorizontalKeyView implements View {\n\tprivate trainer!: HorizontalKeyTrainer;\n\tprivate buffer: MorseBuffer;\n\tprivate timer: TimerManager;\n\tprivate audio: AudioGenerator;\n\tprivate leftPressed = false;\n\tprivate rightPressed = false;\n\tprivate updateIntervalId: number | null = null;\n\tprivate currentWPM = 20;\n\tprivate iambicMode: IambicMode = 'B';\n\tprivate paddleLayout: PaddleLayout = 'normal';\n\tprivate leftKeyCode = 'KeyJ';\n\tprivate rightKeyCode = 'KeyK';\n\n\t// イベントハンドラーの参照を保持\n\tprivate keyPressHandler: ((e: KeyboardEvent) => void) | null = null;\n\tprivate keyReleaseHandler: ((e: KeyboardEvent) => void) | null = null;\n\n\tconstructor() {\n\t\t//! 設定を読み込む。\n\t\tconst savedWPM = localStorage.getItem('horizontalKeyWPM');\n\t\tif (savedWPM) {\n\t\t\tthis.currentWPM = parseInt(savedWPM, 10);\n\t\t}\n\n\t\tconst savedIambicMode = localStorage.getItem('horizontalKeyIambicMode');\n\t\tif (savedIambicMode === 'A' || savedIambicMode === 'B') {\n\t\t\tthis.iambicMode = savedIambicMode;\n\t\t}\n\n\t\tconst savedPaddleLayout = localStorage.getItem('horizontalKeyPaddleLayout');\n\t\tif (savedPaddleLayout === 'normal' || savedPaddleLayout === 'reversed') {\n\t\t\tthis.paddleLayout = savedPaddleLayout;\n\t\t}\n\n\t\tconst savedLeftKeyCode = localStorage.getItem('horizontalKeyLeftCode');\n\t\tif (savedLeftKeyCode) {\n\t\t\tthis.leftKeyCode = savedLeftKeyCode;\n\t\t}\n\n\t\tconst savedRightKeyCode = localStorage.getItem('horizontalKeyRightCode');\n\t\tif (savedRightKeyCode) {\n\t\t\tthis.rightKeyCode = savedRightKeyCode;\n\t\t}\n\n\t\t//! コアコンポーネントを初期化。\n\t\tthis.buffer = new MorseBuffer();\n\t\tthis.timer = new TimerManager();\n\t\tthis.audio = new AudioGenerator({\n\t\t\tfrequency: 700,\n\t\t\tvolume: 0.5,\n\t\t\twpm: this.currentWPM\n\t\t});\n\n\t\t//! トレーナーを初期化。\n\t\tthis.initializeTrainer();\n\t}\n\n\t/**\n\t * トレーナーを初期化する\n\t */\n\tprivate initializeTrainer(): void {\n\t\tconst timings = TimingCalculator.calculate(this.currentWPM);\n\n\t\tthis.trainer = new HorizontalKeyTrainer(\n\t\t\tthis.buffer,\n\t\t\tthis.timer,\n\t\t\ttimings,\n\t\t\t{\n\t\t\t\tonElementStart: (_element: '.' | '-', duration: number) => {\n\t\t\t\t\t//! 要素送信開始時に指定時間だけ音を鳴らす。\n\t\t\t\t\t// scheduleToneに0を渡すと現在時刻から再生される\n\t\t\t\t\tthis.audio.scheduleTone(0, duration);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tiambicMode: this.iambicMode,\n\t\t\t\tpaddleLayout: this.paddleLayout\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * キーコードを表示用にフォーマットする (KeyJ → J)\n\t */\n\tprivate formatKeyCode(keyCode: string): string {\n\t\treturn keyCode.replace(/^Key/, '');\n\t}\n\n\t/**\n\t * ビューをレンダリングする\n\t */\n\trender(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"settings-modal\" id=\"settings-modal\">\n\t\t\t\t<div class=\"settings-content\">\n\t\t\t\t\t<h2>設定</h2>\n\t\t\t\t\t<div class=\"settings-grid\">\n\t\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t\t<label for=\"volume-range\">音量</label>\n\t\t\t\t\t\t\t<div class=\"setting-row\">\n\t\t\t\t\t\t\t\t<input type=\"range\" id=\"volume-range\" min=\"0\" max=\"100\" value=\"${Math.round(this.audio.getVolume() * 100)}\">\n\t\t\t\t\t\t\t\t<input type=\"number\" id=\"volume-input\" min=\"0\" max=\"100\" value=\"${Math.round(this.audio.getVolume() * 100)}\">\n\t\t\t\t\t\t\t\t<span>%</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t\t<label for=\"frequency-input\">周波数 (Hz)</label>\n\t\t\t\t\t\t\t<input type=\"number\" id=\"frequency-input\" min=\"400\" max=\"1200\" value=\"${this.audio.getFrequency()}\" step=\"50\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t\t<label for=\"wpm-input\">WPM (速度: 5-40)</label>\n\t\t\t\t\t\t\t<input type=\"number\" id=\"wpm-input\" min=\"5\" max=\"40\" value=\"${this.currentWPM}\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t\t<label for=\"iambic-mode-select\">Iambicモード</label>\n\t\t\t\t\t\t\t<select id=\"iambic-mode-select\">\n\t\t\t\t\t\t\t\t<option value=\"A\" ${this.iambicMode === 'A' ? 'selected' : ''}>Iambic A</option>\n\t\t\t\t\t\t\t\t<option value=\"B\" ${this.iambicMode === 'B' ? 'selected' : ''}>Iambic B</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t\t<label for=\"paddle-layout-select\">パドルレイアウト</label>\n\t\t\t\t\t\t\t<select id=\"paddle-layout-select\">\n\t\t\t\t\t\t\t\t<option value=\"normal\" ${this.paddleLayout === 'normal' ? 'selected' : ''}>標準（左=dit / 右=dah）</option>\n\t\t\t\t\t\t\t\t<option value=\"reversed\" ${this.paddleLayout === 'reversed' ? 'selected' : ''}>反転（左=dah / 右=dit）</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t\t<label for=\"left-key-binding\">左パドルキー</label>\n\t\t\t\t\t\t\t<input type=\"text\" id=\"left-key-binding\" value=\"${this.formatKeyCode(this.leftKeyCode)}\" readonly placeholder=\"キーを押してください\">\n\t\t\t\t\t\t\t<span class=\"key-hint\">クリックしてキーを押す</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t\t<label for=\"right-key-binding\">右パドルキー</label>\n\t\t\t\t\t\t\t<input type=\"text\" id=\"right-key-binding\" value=\"${this.formatKeyCode(this.rightKeyCode)}\" readonly placeholder=\"キーを押してください\">\n\t\t\t\t\t\t\t<span class=\"key-hint\">クリックしてキーを押す</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"settings-buttons\">\n\t\t\t\t\t\t<button id=\"cancel-btn\" class=\"btn btn-secondary\">キャンセル</button>\n\t\t\t\t\t\t<button id=\"ok-btn\" class=\"btn btn-primary\">OK</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t<h1>横振り電鍵練習</h1>\n\t\t\t\t\t<button class=\"settings-btn\" id=\"settings-btn\" title=\"設定\">⚙</button>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"paddle-container\">\n\t\t\t\t\t<button class=\"paddle-button dit\" id=\"left-paddle\">\n\t\t\t\t\t\tDIT\n\t\t\t\t\t\t<span class=\"paddle-label\">(短点)</span>\n\t\t\t\t\t\t<span class=\"paddle-key\">J キー</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button class=\"paddle-button dah\" id=\"right-paddle\">\n\t\t\t\t\t\tDAH\n\t\t\t\t\t\t<span class=\"paddle-label\">(長点)</span>\n\t\t\t\t\t\t<span class=\"paddle-key\">K キー</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"practice-container\">\n\t\t\t\t\t<div class=\"display-area\">\n\t\t\t\t\t\t<div class=\"display-section\">\n\t\t\t\t\t\t\t<h3>モールス信号</h3>\n\t\t\t\t\t\t\t<div class=\"display-output morse-buffer\" id=\"morse-buffer\">（ここにモールス符号が表示されます）</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"display-section\">\n\t\t\t\t\t\t\t<h3>デコード結果</h3>\n\t\t\t\t\t\t\t<div class=\"display-output\" id=\"decoded-text\">（ここにデコードされた文字が表示されます）</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"action-area\">\n\t\t\t\t\t\t<button class=\"btn btn-large btn-danger\" id=\"clear-btn\">クリア</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"status-area\">\n\t\t\t\t\t\t<div class=\"status-item\">\n\t\t\t\t\t\t\t<span class=\"label\">現在の速度</span>\n\t\t\t\t\t\t\t<span class=\"value\" id=\"current-wpm\">${this.currentWPM}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"status-item\">\n\t\t\t\t\t\t\t<span class=\"label\">Iambicモード</span>\n\t\t\t\t\t\t\t<span class=\"value\" id=\"current-iambic-mode\">${this.iambicMode}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"status-item\">\n\t\t\t\t\t\t\t<span class=\"label\">入力文字数</span>\n\t\t\t\t\t\t\t<span class=\"value\" id=\"char-count\">0</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t\t<h3>使い方</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>左パドル（J）: 短点（・）/ 右パドル（K）: 長点（ー）</li>\n\t\t\t\t\t\t\t<li>両方同時押しで自動交互送信（Iambic）</li>\n\t\t\t\t\t\t\t<li>Iambic Bモード: スクイーズ後1要素追加送信</li>\n\t\t\t\t\t\t\t<li>画面右上の⚙アイコンから設定（WPM、Iambicモード、パドルレイアウト、音量・周波数）を変更できます</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\t//! イベントリスナーを設定。\n\t\tthis.attachEventListeners();\n\t\t//! 定期更新を開始。\n\t\tthis.startUpdate();\n\t}\n\n\t/**\n\t * イベントリスナーを設定する\n\t */\n\tprivate attachEventListeners(): void {\n\t\t//! 戻るボタン。\n\t\tconst backBtn = document.querySelector('.back-btn');\n\t\tbackBtn?.addEventListener('click', () => {\n\t\t\twindow.location.hash = '#menu';\n\t\t});\n\n\t\t//! 設定ボタン。\n\t\tconst settingsBtn = document.getElementById('settings-btn');\n\t\tsettingsBtn?.addEventListener('click', () => {\n\t\t\tthis.openSettingsModal();\n\t\t});\n\n\t\t//! クリアボタン。\n\t\tconst clearBtn = document.getElementById('clear-btn');\n\t\tclearBtn?.addEventListener('click', () => {\n\t\t\tthis.trainer.clear();\n\t\t\tthis.updateDisplay();\n\t\t});\n\n\t\t//! キーボードイベント（設定されたキー）。\n\t\tthis.keyPressHandler = (e: KeyboardEvent) => {\n\t\t\tif (e.repeat) return;\n\n\t\t\tif (e.code === this.leftKeyCode) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleLeftPaddlePress();\n\t\t\t} else if (e.code === this.rightKeyCode) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleRightPaddlePress();\n\t\t\t}\n\t\t};\n\n\t\tthis.keyReleaseHandler = (e: KeyboardEvent) => {\n\t\t\tif (e.code === this.leftKeyCode) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleLeftPaddleRelease();\n\t\t\t} else if (e.code === this.rightKeyCode) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleRightPaddleRelease();\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener('keydown', this.keyPressHandler);\n\t\twindow.addEventListener('keyup', this.keyReleaseHandler);\n\n\t\t//! ボタンイベント（左パドル）。\n\t\tconst leftPaddle = document.getElementById('left-paddle');\n\t\tif (leftPaddle) {\n\t\t\tleftPaddle.addEventListener('mousedown', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleLeftPaddlePress();\n\t\t\t});\n\t\t\tleftPaddle.addEventListener('mouseup', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleLeftPaddleRelease();\n\t\t\t});\n\t\t\tleftPaddle.addEventListener('mouseleave', () => {\n\t\t\t\tif (this.leftPressed) this.handleLeftPaddleRelease();\n\t\t\t});\n\t\t\tleftPaddle.addEventListener('touchstart', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleLeftPaddlePress();\n\t\t\t});\n\t\t\tleftPaddle.addEventListener('touchend', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleLeftPaddleRelease();\n\t\t\t});\n\t\t\tleftPaddle.addEventListener('touchcancel', () => {\n\t\t\t\tif (this.leftPressed) this.handleLeftPaddleRelease();\n\t\t\t});\n\t\t}\n\n\t\t//! ボタンイベント（右パドル）。\n\t\tconst rightPaddle = document.getElementById('right-paddle');\n\t\tif (rightPaddle) {\n\t\t\trightPaddle.addEventListener('mousedown', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleRightPaddlePress();\n\t\t\t});\n\t\t\trightPaddle.addEventListener('mouseup', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleRightPaddleRelease();\n\t\t\t});\n\t\t\trightPaddle.addEventListener('mouseleave', () => {\n\t\t\t\tif (this.rightPressed) this.handleRightPaddleRelease();\n\t\t\t});\n\t\t\trightPaddle.addEventListener('touchstart', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleRightPaddlePress();\n\t\t\t});\n\t\t\trightPaddle.addEventListener('touchend', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleRightPaddleRelease();\n\t\t\t});\n\t\t\trightPaddle.addEventListener('touchcancel', () => {\n\t\t\t\tif (this.rightPressed) this.handleRightPaddleRelease();\n\t\t\t});\n\t\t}\n\n\t\t//! モーダルのキャンセルボタン。\n\t\tconst cancelBtn = document.getElementById('cancel-btn');\n\t\tcancelBtn?.addEventListener('click', () => {\n\t\t\tthis.closeSettingsModal(false);\n\t\t});\n\n\t\t//! モーダルのOKボタン。\n\t\tconst okBtn = document.getElementById('ok-btn');\n\t\tokBtn?.addEventListener('click', () => {\n\t\t\tthis.closeSettingsModal(true);\n\t\t});\n\n\t\t//! モーダル背景クリックで閉じる。\n\t\tconst modal = document.getElementById('settings-modal');\n\t\tmodal?.addEventListener('click', (e) => {\n\t\t\tif (e.target === modal) {\n\t\t\t\tthis.closeSettingsModal(false);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * 左パドル押下処理\n\t */\n\tprivate handleLeftPaddlePress(): void {\n\t\tif (this.leftPressed) return;\n\t\tthis.leftPressed = true;\n\t\tthis.trainer.leftPaddlePress();\n\n\t\tconst leftPaddle = document.getElementById('left-paddle');\n\t\tif (leftPaddle) leftPaddle.classList.add('pressed');\n\t}\n\n\t/**\n\t * 左パドル解放処理\n\t */\n\tprivate handleLeftPaddleRelease(): void {\n\t\tif (!this.leftPressed) return;\n\t\tthis.leftPressed = false;\n\t\tthis.trainer.leftPaddleRelease();\n\n\t\tconst leftPaddle = document.getElementById('left-paddle');\n\t\tif (leftPaddle) leftPaddle.classList.remove('pressed');\n\t}\n\n\t/**\n\t * 右パドル押下処理\n\t */\n\tprivate handleRightPaddlePress(): void {\n\t\tif (this.rightPressed) return;\n\t\tthis.rightPressed = true;\n\t\tthis.trainer.rightPaddlePress();\n\n\t\tconst rightPaddle = document.getElementById('right-paddle');\n\t\tif (rightPaddle) rightPaddle.classList.add('pressed');\n\t}\n\n\t/**\n\t * 右パドル解放処理\n\t */\n\tprivate handleRightPaddleRelease(): void {\n\t\tif (!this.rightPressed) return;\n\t\tthis.rightPressed = false;\n\t\tthis.trainer.rightPaddleRelease();\n\n\t\tconst rightPaddle = document.getElementById('right-paddle');\n\t\tif (rightPaddle) rightPaddle.classList.remove('pressed');\n\t}\n\n\t/**\n\t * パドルラベルを更新する\n\t */\n\tprivate updatePaddleLabels(): void {\n\t\tconst leftPaddle = document.getElementById('left-paddle');\n\t\tconst rightPaddle = document.getElementById('right-paddle');\n\n\t\tif (this.paddleLayout === 'normal') {\n\t\t\tif (leftPaddle) {\n\t\t\t\tleftPaddle.className = 'paddle-button dit';\n\t\t\t\tleftPaddle.innerHTML = `\n\t\t\t\t\tDIT\n\t\t\t\t\t<span class=\"paddle-label\">(短点)</span>\n\t\t\t\t\t<span class=\"paddle-key\">J キー</span>\n\t\t\t\t`;\n\t\t\t}\n\t\t\tif (rightPaddle) {\n\t\t\t\trightPaddle.className = 'paddle-button dah';\n\t\t\t\trightPaddle.innerHTML = `\n\t\t\t\t\tDAH\n\t\t\t\t\t<span class=\"paddle-label\">(長点)</span>\n\t\t\t\t\t<span class=\"paddle-key\">K キー</span>\n\t\t\t\t`;\n\t\t\t}\n\t\t} else {\n\t\t\tif (leftPaddle) {\n\t\t\t\tleftPaddle.className = 'paddle-button dah';\n\t\t\t\tleftPaddle.innerHTML = `\n\t\t\t\t\tDAH\n\t\t\t\t\t<span class=\"paddle-label\">(長点)</span>\n\t\t\t\t\t<span class=\"paddle-key\">J キー</span>\n\t\t\t\t`;\n\t\t\t}\n\t\t\tif (rightPaddle) {\n\t\t\t\trightPaddle.className = 'paddle-button dit';\n\t\t\t\trightPaddle.innerHTML = `\n\t\t\t\t\tDIT\n\t\t\t\t\t<span class=\"paddle-label\">(短点)</span>\n\t\t\t\t\t<span class=\"paddle-key\">K キー</span>\n\t\t\t\t`;\n\t\t\t}\n\t\t}\n\n\t\t//! イベントリスナーを再設定。\n\t\tthis.attachEventListeners();\n\t}\n\n\t/**\n\t * 定期更新を開始する\n\t */\n\tprivate startUpdate(): void {\n\t\t//! 100msごとに画面を更新。\n\t\tthis.updateIntervalId = window.setInterval(() => {\n\t\t\tthis.updateDisplay();\n\t\t}, 100);\n\t}\n\n\t/**\n\t * 表示を更新する\n\t */\n\tprivate updateDisplay(): void {\n\t\tconst morseBuffer = document.getElementById('morse-buffer');\n\t\tconst decodedText = document.getElementById('decoded-text');\n\t\tconst charCount = document.getElementById('char-count');\n\n\t\tif (morseBuffer) {\n\t\t\tconst buffer = this.trainer.getBuffer();\n\t\t\tconst sequence = this.trainer.getSequence();\n\t\t\tconst fullDisplay = sequence ? `${buffer} ${sequence}` : buffer;\n\t\t\tmorseBuffer.textContent = fullDisplay || '（ここにモールス符号が表示されます）';\n\t\t}\n\n\t\tif (decodedText) {\n\t\t\tconst text = this.trainer.getDecoded();\n\t\t\tdecodedText.textContent = text || '（ここにデコードされた文字が表示されます）';\n\t\t}\n\n\t\tif (charCount) {\n\t\t\tconst text = this.trainer.getDecoded();\n\t\t\tcharCount.textContent = text.length.toString();\n\t\t}\n\t}\n\n\t/**\n\t * 設定モーダルを開く\n\t */\n\tprivate openSettingsModal(): void {\n\t\tconst modal = document.getElementById('settings-modal');\n\t\tif (!modal) return;\n\n\t\t//! モーダルを表示。\n\t\tmodal.classList.add('active');\n\n\t\t//! 現在の設定値をinput要素に反映。\n\t\tconst volumeRange = document.getElementById('volume-range') as HTMLInputElement;\n\t\tconst volumeInput = document.getElementById('volume-input') as HTMLInputElement;\n\t\tconst frequencyInput = document.getElementById('frequency-input') as HTMLInputElement;\n\t\tconst wpmInput = document.getElementById('wpm-input') as HTMLInputElement;\n\t\tconst iambicModeSelect = document.getElementById('iambic-mode-select') as HTMLSelectElement;\n\t\tconst paddleLayoutSelect = document.getElementById('paddle-layout-select') as HTMLSelectElement;\n\n\t\tconst volume = Math.round(this.audio.getVolume() * 100);\n\t\tif (volumeRange) volumeRange.value = volume.toString();\n\t\tif (volumeInput) volumeInput.value = volume.toString();\n\t\tif (frequencyInput) frequencyInput.value = this.audio.getFrequency().toString();\n\t\tif (wpmInput) wpmInput.value = this.currentWPM.toString();\n\t\tif (iambicModeSelect) iambicModeSelect.value = this.iambicMode;\n\t\tif (paddleLayoutSelect) paddleLayoutSelect.value = this.paddleLayout;\n\n\t\t//! 音量スライダーと数値入力の同期のみ（実際の音声設定は変更しない）。\n\t\tconst syncVolume = () => {\n\t\t\tif (volumeRange && volumeInput) {\n\t\t\t\tvolumeInput.value = volumeRange.value;\n\t\t\t}\n\t\t};\n\t\tconst syncVolumeReverse = () => {\n\t\t\tif (volumeRange && volumeInput) {\n\t\t\t\tvolumeRange.value = volumeInput.value;\n\t\t\t}\n\t\t};\n\n\t\tvolumeRange?.addEventListener('input', syncVolume);\n\t\tvolumeInput?.addEventListener('input', syncVolumeReverse);\n\n\t\t//! 左パドルキーバインド設定。\n\t\tconst leftKeyBindingInput = document.getElementById('left-key-binding') as HTMLInputElement;\n\t\tif (leftKeyBindingInput) {\n\t\t\tleftKeyBindingInput.addEventListener('click', () => {\n\t\t\t\tleftKeyBindingInput.value = 'キーを押してください...';\n\t\t\t\tleftKeyBindingInput.classList.add('waiting-key');\n\t\t\t});\n\n\t\t\tleftKeyBindingInput.addEventListener('keydown', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t\tleftKeyBindingInput.value = e.code;\n\t\t\t\tleftKeyBindingInput.classList.remove('waiting-key');\n\t\t\t});\n\t\t}\n\n\t\t//! 右パドルキーバインド設定。\n\t\tconst rightKeyBindingInput = document.getElementById('right-key-binding') as HTMLInputElement;\n\t\tif (rightKeyBindingInput) {\n\t\t\trightKeyBindingInput.addEventListener('click', () => {\n\t\t\t\trightKeyBindingInput.value = 'キーを押してください...';\n\t\t\t\trightKeyBindingInput.classList.add('waiting-key');\n\t\t\t});\n\n\t\t\trightKeyBindingInput.addEventListener('keydown', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t\trightKeyBindingInput.value = e.code;\n\t\t\t\trightKeyBindingInput.classList.remove('waiting-key');\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * 設定モーダルを閉じる\n\t */\n\tprivate closeSettingsModal(save: boolean): void {\n\t\tconst modal = document.getElementById('settings-modal');\n\t\tif (!modal) return;\n\n\t\t//! モーダルを非表示。\n\t\tmodal.classList.remove('active');\n\n\t\tif (save) {\n\t\t\t//! 設定を適用。\n\t\t\tconst volumeInput = document.getElementById('volume-input') as HTMLInputElement;\n\t\t\tconst frequencyInput = document.getElementById('frequency-input') as HTMLInputElement;\n\t\t\tconst wpmInput = document.getElementById('wpm-input') as HTMLInputElement;\n\t\t\tconst iambicModeSelect = document.getElementById('iambic-mode-select') as HTMLSelectElement;\n\t\t\tconst paddleLayoutSelect = document.getElementById('paddle-layout-select') as HTMLSelectElement;\n\t\t\tconst leftKeyBindingInput = document.getElementById('left-key-binding') as HTMLInputElement;\n\t\t\tconst rightKeyBindingInput = document.getElementById('right-key-binding') as HTMLInputElement;\n\n\t\t\tif (volumeInput) {\n\t\t\t\tconst volume = parseInt(volumeInput.value, 10) / 100;\n\t\t\t\tthis.audio.setVolume(volume);\n\t\t\t}\n\n\t\t\tif (frequencyInput) {\n\t\t\t\tconst frequency = parseInt(frequencyInput.value, 10);\n\t\t\t\tthis.audio.setFrequency(frequency);\n\t\t\t}\n\n\t\t\tif (wpmInput) {\n\t\t\t\tconst newWpm = parseInt(wpmInput.value, 10);\n\t\t\t\tthis.currentWPM = newWpm;\n\t\t\t\tthis.audio.setWPM(newWpm);\n\n\t\t\t\t//! WPMをlocalStorageに保存。\n\t\t\t\tlocalStorage.setItem('horizontalKeyWPM', newWpm.toString());\n\n\t\t\t\t//! 現在のWPM表示を更新。\n\t\t\t\tconst currentWpmDisplay = document.getElementById('current-wpm');\n\t\t\t\tif (currentWpmDisplay) currentWpmDisplay.textContent = newWpm.toString();\n\t\t\t}\n\n\t\t\tif (iambicModeSelect) {\n\t\t\t\tthis.iambicMode = iambicModeSelect.value as IambicMode;\n\n\t\t\t\t//! IambicモードをlocalStorageに保存。\n\t\t\t\tlocalStorage.setItem('horizontalKeyIambicMode', this.iambicMode);\n\n\t\t\t\t//! 現在のIambicモード表示を更新。\n\t\t\t\tconst currentIambicModeDisplay = document.getElementById('current-iambic-mode');\n\t\t\t\tif (currentIambicModeDisplay) currentIambicModeDisplay.textContent = this.iambicMode;\n\t\t\t}\n\n\t\t\tif (paddleLayoutSelect) {\n\t\t\t\tthis.paddleLayout = paddleLayoutSelect.value as PaddleLayout;\n\n\t\t\t\t//! パドルレイアウトをlocalStorageに保存。\n\t\t\t\tlocalStorage.setItem('horizontalKeyPaddleLayout', this.paddleLayout);\n\n\t\t\t\tthis.updatePaddleLabels();\n\t\t\t}\n\n\t\t\tif (leftKeyBindingInput && leftKeyBindingInput.value) {\n\t\t\t\tthis.leftKeyCode = leftKeyBindingInput.value;\n\n\t\t\t\t//! 左パドルキーバインドをlocalStorageに保存。\n\t\t\t\tlocalStorage.setItem('horizontalKeyLeftCode', this.leftKeyCode);\n\t\t\t}\n\n\t\t\tif (rightKeyBindingInput && rightKeyBindingInput.value) {\n\t\t\t\tthis.rightKeyCode = rightKeyBindingInput.value;\n\n\t\t\t\t//! 右パドルキーバインドをlocalStorageに保存。\n\t\t\t\tlocalStorage.setItem('horizontalKeyRightCode', this.rightKeyCode);\n\t\t\t}\n\n\t\t\t//! トレーナーを再初期化。\n\t\t\tthis.initializeTrainer();\n\t\t}\n\t\t//! キャンセル時は何もしない（設定を元に戻す必要もない）。\n\t}\n\n\t/**\n\t * ビューを破棄する\n\t */\n\tdestroy(): void {\n\t\t//! イベントリスナーを削除。\n\t\tif (this.keyPressHandler) {\n\t\t\twindow.removeEventListener('keydown', this.keyPressHandler);\n\t\t\tthis.keyPressHandler = null;\n\t\t}\n\t\tif (this.keyReleaseHandler) {\n\t\t\twindow.removeEventListener('keyup', this.keyReleaseHandler);\n\t\t\tthis.keyReleaseHandler = null;\n\t\t}\n\n\t\t//! 定期更新を停止。\n\t\tif (this.updateIntervalId !== null) {\n\t\t\tclearInterval(this.updateIntervalId);\n\t\t\tthis.updateIntervalId = null;\n\t\t}\n\n\t\t//! トレーナーをクリア。\n\t\tthis.trainer.clear();\n\t}\n}\n","/**\n * フラッシュカードTSVローダー\n */\n\nimport type { FlashcardEntry } from 'morse-engine';\n\n/**\n * TSVファイルからフラッシュカードデータをロードする\n * @param url - TSVファイルのURL\n * @returns FlashcardEntryの配列\n */\nexport async function loadFlashcardData(url: string): Promise<FlashcardEntry[]> {\n\t//! TSVファイルを取得。\n\tconst response = await fetch(url);\n\tif (!response.ok) {\n\t\tthrow new Error(`Failed to load flashcard data: ${response.statusText}`);\n\t}\n\n\tconst text = await response.text();\n\treturn parseTSV(text);\n}\n\n/**\n * TSVテキストをパースしてFlashcardEntry配列に変換する\n * @param text - TSVテキスト\n * @returns FlashcardEntryの配列\n */\nfunction parseTSV(text: string): FlashcardEntry[] {\n\t//! 行に分割。\n\tconst lines = text.split('\\n').filter(line => line.trim());\n\tif (lines.length === 0) return [];\n\n\t//! 先頭行はヘッダーなのでスキップ。\n\tconst dataLines = lines.slice(1);\n\n\treturn dataLines.map((line, index) => {\n\t\t//! タブで分割。\n\t\tconst columns = line.split('\\t');\n\n\t\t//! 最低限6列（タグ、頻度、略語、英文、和訳、説明）必要。\n\t\tif (columns.length < 6) {\n\t\t\tconsole.warn(`Line ${index + 2} has insufficient columns, skipping`);\n\t\t\treturn null;\n\t\t}\n\n\t\tconst entry: FlashcardEntry = {\n\t\t\ttags: columns[0].trim(),\n\t\t\tfrequency: parseInt(columns[1].trim(), 10) || 1,\n\t\t\tabbreviation: columns[2].trim(),\n\t\t\tenglish: columns[3].trim(),\n\t\t\tjapanese: columns[4].trim(),\n\t\t\tdescription: columns[5]?.trim(),\n\t\t\texample: columns[6]?.trim()\n\t\t};\n\n\t\treturn entry;\n\t}).filter((entry): entry is FlashcardEntry => entry !== null);\n}\n","/**\n * フラッシュカードビュー\n * CW略語・Q符号学習\n */\n\nimport type { View } from '../../router';\nimport {\n\tFlashcardTrainer,\n\tFlashcardState,\n\tAudioGenerator,\n\tMorseCodec,\n\ttype FlashcardEntry,\n\ttype ExamQuestion,\n\ttype ExamResult,\n\ttype QuestionType,\n\ttype LearnQuestionType,\n\ttype Progress,\n\ttype SortColumn,\n\ttype SortDirection,\n\ttype DisplayMode\n} from 'morse-engine';\nimport { loadFlashcardData } from '../../utils/flashcard-loader';\n\n/**\n * 画面状態（ローディングと結果表示用）\n */\ntype ViewState = 'loading' | 'browse' | 'learn' | 'exam' | 'exam-result';\n\n/**\n * フラッシュカードビュークラス\n */\nexport class FlashcardView implements View {\n\tprivate allEntries: FlashcardEntry[] = [];\n\tprivate filteredEntries: FlashcardEntry[] = [];\n\tprivate currentState: ViewState = 'loading';\n\n\t// フィルター関連\n\tprivate selectedTags: Set<string> = new Set();\n\tprivate selectedFrequencies: Set<number> = new Set([5]);\n\tprivate searchQuery = '';\n\n\t// 一覧表示関連\n\tprivate displayMode: DisplayMode = 'card';\n\tprivate sortColumn: SortColumn = 'abbreviation';\n\tprivate sortDirection: SortDirection = 'asc';\n\n\t// 学習モード関連\n\tprivate learnQuestionType: LearnQuestionType = 'abbr-to-meaning';\n\tprivate learnCards: FlashcardEntry[] = [];\n\tprivate currentLearnIndex = 0;\n\tprivate isFlipped = false;\n\tprivate reviewMode = false;\n\tprivate progress: Progress = {\n\t\tknown: new Set(),\n\t\tunknown: new Set()\n\t};\n\n\t// 試験関連\n\tprivate questionType: QuestionType = 'abbr-to-meaning';\n\tprivate questionCount: number | 'all' = 10;\n\tprivate questions: ExamQuestion[] = [];\n\tprivate currentQuestionIndex = 0;\n\tprivate results: ExamResult[] = [];\n\n\t// 音声関連\n\tprivate audio: AudioGenerator;\n\tprivate currentlyPlaying: string | null = null;\n\n\tconstructor() {\n\t\tthis.audio = new AudioGenerator({\n\t\t\tfrequency: 700,\n\t\t\tvolume: 0.5,\n\t\t\twpm: 20\n\t\t});\n\t\t//! ライブラリから状態を読み込む。\n\t\tthis.progress = FlashcardState.loadProgress();\n\t\tconst filters = FlashcardState.loadFilters();\n\t\tthis.selectedTags = filters.selectedTags;\n\t\tthis.selectedFrequencies = filters.selectedFrequencies;\n\t\tthis.searchQuery = filters.searchQuery;\n\n\t\tconst viewState = FlashcardState.loadViewState();\n\t\tthis.displayMode = viewState.displayMode;\n\t\tthis.sortColumn = viewState.sortColumn;\n\t\tthis.sortDirection = viewState.sortDirection;\n\t\tthis.learnQuestionType = viewState.learnQuestionType;\n\t\tthis.questionType = viewState.examQuestionType as QuestionType;\n\t}\n\n\t/**\n\t * 進捗データを保存する\n\t */\n\tprivate saveProgress(): void {\n\t\tFlashcardState.saveProgress(this.progress);\n\t}\n\n\t/**\n\t * 進捗データをクリアする\n\t */\n\tprivate clearProgress(): void {\n\t\tthis.progress = { known: new Set(), unknown: new Set() };\n\t\tFlashcardState.clearProgress();\n\t}\n\n\t/**\n\t * フィルター状態を保存する\n\t */\n\tprivate saveFilters(): void {\n\t\tFlashcardState.saveFilters({\n\t\t\tselectedTags: this.selectedTags,\n\t\t\tselectedFrequencies: this.selectedFrequencies,\n\t\t\tsearchQuery: this.searchQuery\n\t\t});\n\t}\n\n\tasync render(): Promise<void> {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tif (this.currentState === 'loading') {\n\t\t\t//! ローディング画面を表示。\n\t\t\tapp.innerHTML = `\n\t\t\t\t<div class=\"container\">\n\t\t\t\t\t<header class=\"header\">\n\t\t\t\t\t\t<h1>CW略語・Q符号学習</h1>\n\t\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t</header>\n\t\t\t\t\t<div class=\"loading-container\">\n\t\t\t\t\t\t<p>フラッシュカードデータを読み込み中...</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tconst backBtn = document.querySelector('.back-btn');\n\t\t\tbackBtn?.addEventListener('click', () => {\n\t\t\t\twindow.location.hash = '#menu';\n\t\t\t});\n\n\t\t\t//! データをロード。\n\t\t\ttry {\n\t\t\t\tthis.allEntries = await loadFlashcardData('/flashcard.tsv');\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\t//! データロード完了後、保存されていたviewModeを復元。\n\t\t\t\tconst viewState = FlashcardState.loadViewState();\n\t\t\t\tthis.currentState = viewState.viewMode;\n\t\t\t\tthis.render();\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Failed to load flashcard data:', error);\n\t\t\t\tapp.innerHTML = `\n\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t<header class=\"header\">\n\t\t\t\t\t\t\t<h1>CW略語・Q符号学習</h1>\n\t\t\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<div class=\"error-container\">\n\t\t\t\t\t\t\t<p>データの読み込みに失敗しました。</p>\n\t\t\t\t\t\t\t<p>エラー: ${error}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t`;\n\t\t\t}\n\t\t} else if (this.currentState === 'browse') {\n\t\t\tthis.renderBrowseMode();\n\t\t} else if (this.currentState === 'learn') {\n\t\t\tthis.renderLearnMode();\n\t\t} else if (this.currentState === 'exam') {\n\t\t\tthis.renderExamMode();\n\t\t} else if (this.currentState === 'exam-result') {\n\t\t\tthis.renderExamResultMode();\n\t\t}\n\t}\n\n\t/**\n\t * 共通のフィルターセクションHTMLを生成\n\t */\n\tprivate renderFilterSection(): string {\n\t\tconst allTags = FlashcardTrainer.getAllTags(this.allEntries);\n\n\t\treturn `\n\t\t\t<div class=\"filter-section\">\n\t\t\t\t<h3>フィルター設定</h3>\n\n\t\t\t\t<div class=\"filter-group\">\n\t\t\t\t\t<label>タグで絞り込み</label>\n\t\t\t\t\t<div class=\"tag-filter\" id=\"tag-filter\">\n\t\t\t\t\t\t${allTags.map(tag => `\n\t\t\t\t\t\t\t<label class=\"tag-checkbox\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" value=\"${tag}\" ${this.selectedTags.has(tag) ? 'checked' : ''}>\n\t\t\t\t\t\t\t\t<span>${tag}</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t`).join('')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"filter-group\">\n\t\t\t\t\t<label>使用頻度で絞り込み（1=低頻度、5=高頻度）</label>\n\t\t\t\t\t<div class=\"frequency-filter\" id=\"frequency-filter\">\n\t\t\t\t\t\t${[5, 4, 3, 2, 1].map(freq => `\n\t\t\t\t\t\t\t<label class=\"frequency-checkbox\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" value=\"${freq}\" ${this.selectedFrequencies.has(freq) ? 'checked' : ''}>\n\t\t\t\t\t\t\t\t<span>★${freq}</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t`).join('')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"filter-group\">\n\t\t\t\t\t<label for=\"search-input\">検索（略語・意味・タグ）</label>\n\t\t\t\t\t<input type=\"text\" id=\"search-input\" class=\"search-input\" placeholder=\"例: QTH, location, Q符号\" value=\"${this.searchQuery}\">\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"filter-stats\">\n\t\t\t\t\t<span>該当: <strong id=\"filtered-count\">${this.filteredEntries.length}</strong> 件</span>\n\t\t\t\t\t<span>全体: <strong>${this.allEntries.length}</strong> 件</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\t/**\n\t * 一覧モード（browse）をレンダリング\n\t */\n\tprivate renderBrowseMode(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t<h1>CW略語・Q符号学習</h1>\n\t\t\t\t\t<button class=\"settings-btn\" id=\"settings-btn\" title=\"設定\">⚙</button>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"tabs\">\n\t\t\t\t\t<button class=\"tab-button active\" data-tab=\"browse\">一覧</button>\n\t\t\t\t\t<button class=\"tab-button\" data-tab=\"learn\">学習モード</button>\n\t\t\t\t\t<button class=\"tab-button\" data-tab=\"exam\">試験モード</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"flashcard-container\">\n\t\t\t\t\t${this.renderFilterSection()}\n\n\t\t\t\t\t<div class=\"entries-section\" id=\"entries-section\">\n\t\t\t\t\t\t<!-- ここに一覧が表示される -->\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t\t<h3>使い方</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>タグ、使用頻度、検索で略語を絞り込めます</li>\n\t\t\t\t\t\t\t<li>略語カードをクリックするとモールス信号を再生できます</li>\n\t\t\t\t\t\t\t<li>カード表示とリスト表示を切り替えられます</li>\n\t\t\t\t\t\t\t<li>「学習モード」タブでフラッシュカード学習ができます</li>\n\t\t\t\t\t\t\t<li>「試験モード」タブで理解度テストができます</li>\n\t\t\t\t\t\t\t<li>画面右上の⚙アイコンから音量・周波数・速度を調整できます</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.renderEntries();\n\t\tthis.attachBrowseModeListeners();\n\t}\n\n\t/**\n\t * エントリー一覧を表示\n\t */\n\tprivate renderEntries(): void {\n\t\tconst container = document.getElementById('entries-section');\n\t\tif (!container) return;\n\n\t\tif (this.displayMode === 'card') {\n\t\t\tthis.renderCardView(container);\n\t\t} else {\n\t\t\tthis.renderListView(container);\n\t\t}\n\t}\n\n\t/**\n\t * カード表示\n\t */\n\tprivate renderCardView(container: HTMLElement): void {\n\t\tcontainer.innerHTML = `\n\t\t\t<div class=\"entries-header\">\n\t\t\t\t<h3>略語一覧 (${this.filteredEntries.length}件)</h3>\n\t\t\t\t<button id=\"toggle-display-btn\" class=\"toggle-display-btn\">📋 リスト表示</button>\n\t\t\t</div>\n\t\t\t<div class=\"entries-grid\">\n\t\t\t\t${this.filteredEntries.map(entry => `\n\t\t\t\t\t<div class=\"entry-card ${this.currentlyPlaying === entry.abbreviation ? 'playing' : ''}\" data-abbr=\"${entry.abbreviation}\">\n\t\t\t\t\t\t<div class=\"entry-header\">\n\t\t\t\t\t\t\t<div class=\"entry-abbr\">${this.formatAbbreviation(entry.abbreviation)}</div>\n\t\t\t\t\t\t\t<div class=\"entry-frequency\" title=\"使用頻度: ${entry.frequency}/5\">${'★'.repeat(entry.frequency)}${'☆'.repeat(5 - entry.frequency)}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"entry-english\">${entry.english}</div>\n\t\t\t\t\t\t<div class=\"entry-japanese\">${entry.japanese}</div>\n\t\t\t\t\t\t${entry.description ? `<div class=\"entry-description\">${entry.description}</div>` : ''}\n\t\t\t\t\t\t${entry.example ? `<div class=\"entry-example\">例: ${entry.example}</div>` : ''}\n\t\t\t\t\t\t<div class=\"entry-tags\">${entry.tags}</div>\n\t\t\t\t\t</div>\n\t\t\t\t`).join('')}\n\t\t\t</div>\n\t\t`;\n\n\t\t//! カードクリックでモールス再生。\n\t\tcontainer.querySelectorAll('.entry-card').forEach(card => {\n\t\t\tcard.addEventListener('click', () => {\n\t\t\t\tconst abbr = card.getAttribute('data-abbr');\n\t\t\t\tif (abbr) this.playMorse(abbr);\n\t\t\t});\n\t\t});\n\n\t\t//! 表示モード切り替えボタン。\n\t\tconst toggleBtn = document.getElementById('toggle-display-btn');\n\t\tif (toggleBtn) {\n\t\t\ttoggleBtn.addEventListener('click', () => {\n\t\t\t\tthis.displayMode = 'list';\n\t\t\t\tFlashcardState.saveDisplayMode(this.displayMode);\n\t\t\t\tthis.renderEntries();\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * リスト表示\n\t */\n\tprivate renderListView(container: HTMLElement): void {\n\t\tcontainer.innerHTML = `\n\t\t\t<div class=\"entries-header\">\n\t\t\t\t<h3>略語一覧 (${this.filteredEntries.length}件)</h3>\n\t\t\t\t<button id=\"toggle-display-btn\" class=\"toggle-display-btn\">🃏 カード表示</button>\n\t\t\t</div>\n\t\t\t<div class=\"list-table-container\">\n\t\t\t\t<table class=\"list-table\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th class=\"sortable\" data-column=\"abbreviation\">略語${this.getSortIndicator('abbreviation')}</th>\n\t\t\t\t\t\t\t<th class=\"sortable\" data-column=\"english\">英文${this.getSortIndicator('english')}</th>\n\t\t\t\t\t\t\t<th class=\"sortable\" data-column=\"japanese\">和訳${this.getSortIndicator('japanese')}</th>\n\t\t\t\t\t\t\t<th class=\"sortable\" data-column=\"frequency\">頻度${this.getSortIndicator('frequency')}</th>\n\t\t\t\t\t\t\t<th class=\"sortable\" data-column=\"tags\">タグ${this.getSortIndicator('tags')}</th>\n\t\t\t\t\t\t\t<th>説明</th>\n\t\t\t\t\t\t\t<th>具体例</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t${this.filteredEntries.map(entry => `\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td class=\"list-abbr\">\n\t\t\t\t\t\t\t\t\t<button class=\"abbr-play-btn ${this.currentlyPlaying === entry.abbreviation ? 'playing' : ''}\" data-abbr=\"${entry.abbreviation}\">\n\t\t\t\t\t\t\t\t\t\t${this.formatAbbreviation(entry.abbreviation)}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>${entry.english}</td>\n\t\t\t\t\t\t\t\t<td>${entry.japanese}</td>\n\t\t\t\t\t\t\t\t<td title=\"使用頻度: ${entry.frequency}/5\">${'★'.repeat(entry.frequency)}${'☆'.repeat(5 - entry.frequency)}</td>\n\t\t\t\t\t\t\t\t<td>${entry.tags}</td>\n\t\t\t\t\t\t\t\t<td>${entry.description || ''}</td>\n\t\t\t\t\t\t\t\t<td>${entry.example || ''}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t`).join('')}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t`;\n\n\t\t//! ソートヘッダーのイベントリスナー。\n\t\tconst sortHeaders = container.querySelectorAll('th.sortable');\n\t\tsortHeaders.forEach(header => {\n\t\t\theader.addEventListener('click', () => {\n\t\t\t\tconst column = header.getAttribute('data-column') as SortColumn;\n\t\t\t\tif (column) this.toggleSort(column);\n\t\t\t});\n\t\t});\n\n\t\t//! 略語再生ボタンのイベントリスナー。\n\t\tconst playButtons = container.querySelectorAll('.abbr-play-btn');\n\t\tplayButtons.forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst abbr = btn.getAttribute('data-abbr');\n\t\t\t\tif (abbr) this.playMorse(abbr);\n\t\t\t});\n\t\t});\n\n\t\t//! 表示モード切り替えボタン。\n\t\tconst toggleBtn = document.getElementById('toggle-display-btn');\n\t\tif (toggleBtn) {\n\t\t\ttoggleBtn.addEventListener('click', () => {\n\t\t\t\tthis.displayMode = 'card';\n\t\t\t\tFlashcardState.saveDisplayMode(this.displayMode);\n\t\t\t\tthis.renderEntries();\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * 学習モードをレンダリング\n\t */\n\tprivate renderLearnMode(): void {\n\t\tif (this.learnCards.length === 0) {\n\t\t\t//! セットアップ画面を表示。\n\t\t\tthis.renderLearnSetup();\n\t\t} else {\n\t\t\t//! 学習カードを表示。\n\t\t\tthis.renderLearnCard();\n\t\t}\n\t}\n\n\t/**\n\t * 学習モードセットアップ画面\n\t */\n\tprivate renderLearnSetup(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\t//! カード枚数を計算。\n\t\tlet cardCount = this.filteredEntries.length;\n\t\tif (this.reviewMode) {\n\t\t\tcardCount = this.filteredEntries.filter(e =>\n\t\t\t\tthis.progress.unknown.has(e.abbreviation)\n\t\t\t).length;\n\t\t}\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t<h1>CW略語・Q符号学習</h1>\n\t\t\t\t\t<button class=\"settings-btn\" id=\"settings-btn\" title=\"設定\">⚙</button>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"tabs\">\n\t\t\t\t\t<button class=\"tab-button\" data-tab=\"browse\">一覧</button>\n\t\t\t\t\t<button class=\"tab-button active\" data-tab=\"learn\">学習モード</button>\n\t\t\t\t\t<button class=\"tab-button\" data-tab=\"exam\">試験モード</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"flashcard-container\">\n\t\t\t\t\t${this.renderFilterSection()}\n\n\t\t\t\t\t<div class=\"learn-setup-section\">\n\t\t\t\t\t\t<h3>学習設定</h3>\n\n\t\t\t\t\t\t<div class=\"filter-group\">\n\t\t\t\t\t\t\t<label>モード</label>\n\t\t\t\t\t\t\t<div class=\"mode-buttons\">\n\t\t\t\t\t\t\t\t<button class=\"mode-btn ${this.reviewMode ? 'active' : ''}\" id=\"review-mode-btn\">\n\t\t\t\t\t\t\t\t\t復習モード（わからないカードのみ: ${this.progress.unknown.size}件）\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"filter-group\">\n\t\t\t\t\t\t\t<label>出題形式</label>\n\t\t\t\t\t\t\t<div class=\"question-type-buttons\">\n\t\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.learnQuestionType === 'abbr-to-meaning' ? 'active' : ''}\" data-type=\"abbr-to-meaning\">略語→意味（基本）</button>\n\t\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.learnQuestionType === 'meaning-to-abbr' ? 'active' : ''}\" data-type=\"meaning-to-abbr\">意味→略語（応用）</button>\n\t\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.learnQuestionType === 'morse-to-abbr' ? 'active' : ''}\" data-type=\"morse-to-abbr\">モールス音→略語（実践）</button>\n\t\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.learnQuestionType === 'morse-to-meaning' ? 'active' : ''}\" data-type=\"morse-to-meaning\">モールス音→意味（実践）</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"filter-stats\">\n\t\t\t\t\t\t\t<span>学習可能: <strong>${cardCount}</strong> 枚</span>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"action-area\">\n\t\t\t\t\t\t\t<button class=\"btn btn-large btn-primary\" id=\"start-learn-btn\" ${cardCount === 0 ? 'disabled' : ''}>学習開始</button>\n\t\t\t\t\t\t\t<button class=\"btn btn-large btn-secondary\" id=\"clear-progress-btn\">進捗をリセット</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t\t<h3>使い方</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>フィルターで学習する略語を絞り込みます</li>\n\t\t\t\t\t\t\t<li>出題形式を選択します（略語→意味、意味→略語、モールス音からの解読）</li>\n\t\t\t\t\t\t\t<li>カードをクリックで裏返し、「わかる」「わからない」で進捗を記録</li>\n\t\t\t\t\t\t\t<li>復習モードで「わからない」カードのみを学習できます</li>\n\t\t\t\t\t\t\t<li>学習進捗はブラウザに自動保存されます</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachCommonListeners();\n\t\tthis.attachLearnSetupListeners();\n\t}\n\n\t/**\n\t * 学習セットアップのイベントリスナー\n\t */\n\tprivate attachLearnSetupListeners(): void {\n\t\t//! タグフィルター。\n\t\tconst tagFilter = document.getElementById('tag-filter');\n\t\ttagFilter?.addEventListener('change', (e) => {\n\t\t\tconst target = e.target as HTMLInputElement;\n\t\t\tif (target.type === 'checkbox') {\n\t\t\t\tif (target.checked) {\n\t\t\t\t\tthis.selectedTags.add(target.value);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedTags.delete(target.value);\n\t\t\t\t}\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\tthis.renderLearnSetup();\n\t\t\t}\n\t\t});\n\n\t\t//! 使用頻度フィルター。\n\t\tconst frequencyFilter = document.getElementById('frequency-filter');\n\t\tfrequencyFilter?.addEventListener('change', (e) => {\n\t\t\tconst target = e.target as HTMLInputElement;\n\t\t\tif (target.type === 'checkbox') {\n\t\t\t\tconst freq = parseInt(target.value, 10);\n\t\t\t\tif (target.checked) {\n\t\t\t\t\tthis.selectedFrequencies.add(freq);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedFrequencies.delete(freq);\n\t\t\t\t}\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\tthis.renderLearnSetup();\n\t\t\t}\n\t\t});\n\n\t\t//! 検索。\n\t\tconst searchInput = document.getElementById('learn-search-input') as HTMLInputElement;\n\t\tsearchInput?.addEventListener('input', () => {\n\t\t\tthis.searchQuery = searchInput.value;\n\t\t\tthis.updateFilteredEntries();\n\t\t\tthis.renderLearnSetup();\n\t\t});\n\n\t\t//! 復習モードボタン。\n\t\tconst reviewModeBtn = document.getElementById('review-mode-btn');\n\t\treviewModeBtn?.addEventListener('click', () => {\n\t\t\tthis.reviewMode = !this.reviewMode;\n\t\t\tthis.renderLearnSetup();\n\t\t});\n\n\t\t//! 出題形式ボタン。\n\t\tconst questionTypeBtns = document.querySelectorAll('.question-type-btn');\n\t\tquestionTypeBtns.forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst type = btn.getAttribute('data-type') as LearnQuestionType;\n\t\t\t\tif (type) {\n\t\t\t\t\tthis.learnQuestionType = type;\n\t\t\t\t\tFlashcardState.saveLearnQuestionType(this.learnQuestionType);\n\t\t\t\t\tthis.renderLearnSetup();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! 学習開始ボタン。\n\t\tconst startLearnBtn = document.getElementById('start-learn-btn');\n\t\tstartLearnBtn?.addEventListener('click', () => {\n\t\t\tthis.startLearn();\n\t\t});\n\n\t\t//! 進捗リセットボタン。\n\t\tconst clearProgressBtn = document.getElementById('clear-progress-btn');\n\t\tclearProgressBtn?.addEventListener('click', () => {\n\t\t\tif (confirm('学習進捗をリセットしますか？')) {\n\t\t\t\tthis.clearProgress();\n\t\t\t\tthis.renderLearnSetup();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * 学習を開始\n\t */\n\tprivate startLearn(): void {\n\t\t//! フィルタリング済みのエントリーから学習カードを作成。\n\t\tlet cards = [...this.filteredEntries];\n\n\t\tif (this.reviewMode) {\n\t\t\t//! 復習モード: わからないカードのみ。\n\t\t\tcards = cards.filter(e => this.progress.unknown.has(e.abbreviation));\n\t\t}\n\n\t\tif (cards.length === 0) {\n\t\t\talert('学習可能なカードがありません。');\n\t\t\treturn;\n\t\t}\n\n\t\t//! シャッフル。\n\t\tcards = cards.sort(() => Math.random() - 0.5);\n\n\t\tthis.learnCards = cards;\n\t\tthis.currentLearnIndex = 0;\n\t\tthis.isFlipped = false;\n\t\tthis.renderLearnCard();\n\t}\n\n\t/**\n\t * 学習カードを表示\n\t */\n\tprivate renderLearnCard(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tconst card = this.learnCards[this.currentLearnIndex];\n\t\tconst currentNum = this.currentLearnIndex + 1;\n\t\tconst totalNum = this.learnCards.length;\n\n\t\t//! 問題と正解のコンテンツを生成。\n\t\tlet frontContent = '';\n\t\tlet backContent = '';\n\n\t\tswitch (this.learnQuestionType) {\n\t\t\tcase 'abbr-to-meaning':\n\t\t\t\tfrontContent = `\n\t\t\t\t\t<div class=\"card-label\">略語</div>\n\t\t\t\t\t<div class=\"card-content-abbr\">${this.formatAbbreviation(card.abbreviation)}</div>\n\t\t\t\t`;\n\t\t\t\tbackContent = `\n\t\t\t\t\t<div class=\"card-label\">意味</div>\n\t\t\t\t\t<div class=\"card-content-text\">${card.english}</div>\n\t\t\t\t\t<div class=\"card-content-text\">${card.japanese}</div>\n\t\t\t\t`;\n\t\t\t\tbreak;\n\t\t\tcase 'meaning-to-abbr':\n\t\t\t\tfrontContent = `\n\t\t\t\t\t<div class=\"card-label\">意味</div>\n\t\t\t\t\t<div class=\"card-content-text\">${card.english}</div>\n\t\t\t\t\t<div class=\"card-content-text\">${card.japanese}</div>\n\t\t\t\t`;\n\t\t\t\tbackContent = `\n\t\t\t\t\t<div class=\"card-label\">略語</div>\n\t\t\t\t\t<div class=\"card-content-abbr\">${this.formatAbbreviation(card.abbreviation)}</div>\n\t\t\t\t`;\n\t\t\t\tbreak;\n\t\t\tcase 'morse-to-abbr':\n\t\t\t\tfrontContent = `\n\t\t\t\t\t<div class=\"card-label\">モールス音を聞いて略語を答えてください</div>\n\t\t\t\t\t<button class=\"play-morse-btn\" id=\"play-morse-btn\">🔊 モールス再生</button>\n\t\t\t\t`;\n\t\t\t\tbackContent = `\n\t\t\t\t\t<div class=\"card-label\">略語</div>\n\t\t\t\t\t<div class=\"card-content-abbr\">${this.formatAbbreviation(card.abbreviation)}</div>\n\t\t\t\t`;\n\t\t\t\tbreak;\n\t\t\tcase 'morse-to-meaning':\n\t\t\t\tfrontContent = `\n\t\t\t\t\t<div class=\"card-label\">モールス音を聞いて意味を答えてください</div>\n\t\t\t\t\t<button class=\"play-morse-btn\" id=\"play-morse-btn\">🔊 モールス再生</button>\n\t\t\t\t`;\n\t\t\t\tbackContent = `\n\t\t\t\t\t<div class=\"card-label\">意味</div>\n\t\t\t\t\t<div class=\"card-content-abbr\">${this.formatAbbreviation(card.abbreviation)}</div>\n\t\t\t\t\t<div class=\"card-content-text\">${card.english}</div>\n\t\t\t\t\t<div class=\"card-content-text\">${card.japanese}</div>\n\t\t\t\t`;\n\t\t\t\tbreak;\n\t\t}\n\n\t\t//! 判定ボタンのHTML。\n\t\tconst isKnown = this.progress.known.has(card.abbreviation);\n\t\tconst isUnknown = this.progress.unknown.has(card.abbreviation);\n\t\tconst judgmentButtons = `\n\t\t\t<div class=\"judgment-controls\">\n\t\t\t\t<button id=\"mark-unknown-btn\" class=\"judgment-button unknown ${isUnknown ? 'active' : ''}\">\n\t\t\t\t\t× わからない\n\t\t\t\t</button>\n\t\t\t\t<button id=\"mark-known-btn\" class=\"judgment-button known ${isKnown ? 'active' : ''}\">\n\t\t\t\t\t○ わかる\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t`;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"container learning-view\">\n\t\t\t\t<div class=\"learning-header\">\n\t\t\t\t\t<button id=\"back-to-setup-btn\" class=\"back-btn\">← 設定に戻る</button>\n\t\t\t\t\t<div class=\"progress-indicator\">${currentNum} / ${totalNum}</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"card-container\">\n\t\t\t\t\t<div class=\"flashcard ${this.isFlipped ? 'flipped' : ''}\" id=\"flashcard\">\n\t\t\t\t\t\t<div class=\"card-front\">\n\t\t\t\t\t\t\t${frontContent}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"card-back\">\n\t\t\t\t\t\t\t${backContent}\n\t\t\t\t\t\t\t${card.description ? `<div class=\"card-description\">${card.description}</div>` : ''}\n\t\t\t\t\t\t\t${card.example ? `<div class=\"card-example\">例: ${card.example}</div>` : ''}\n\t\t\t\t\t\t\t<div class=\"card-tags\">${card.tags} / ${'★'.repeat(card.frequency)}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"card-controls\">\n\t\t\t\t\t<button id=\"flip-card-btn\" class=\"control-button\">\n\t\t\t\t\t\t${this.isFlipped ? '問題に戻る' : '正解を確認する'} (Space)\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t${this.isFlipped ? judgmentButtons : ''}\n\n\t\t\t\t<div class=\"navigation-controls\">\n\t\t\t\t\t<button id=\"prev-card-btn\" class=\"nav-button\" ${this.currentLearnIndex === 0 ? 'disabled' : ''}>\n\t\t\t\t\t\t← 前のカード\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"next-card-btn\" class=\"nav-button\" ${this.currentLearnIndex >= this.learnCards.length - 1 ? 'disabled' : ''}>\n\t\t\t\t\t\t次のカード →\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachLearnCardListeners();\n\t}\n\n\t/**\n\t * 学習カードのイベントリスナー\n\t */\n\tprivate attachLearnCardListeners(): void {\n\t\t//! 設定に戻るボタン。\n\t\tconst backToSetupBtn = document.getElementById('back-to-setup-btn');\n\t\tbackToSetupBtn?.addEventListener('click', () => {\n\t\t\tthis.learnCards = [];\n\t\t\tthis.currentLearnIndex = 0;\n\t\t\tthis.isFlipped = false;\n\t\t\tthis.renderLearnSetup();\n\t\t});\n\n\t\t//! フリップボタン。\n\t\tconst flipCardBtn = document.getElementById('flip-card-btn');\n\t\tflipCardBtn?.addEventListener('click', () => {\n\t\t\tthis.isFlipped = !this.isFlipped;\n\t\t\tthis.renderLearnCard();\n\t\t});\n\n\t\t//! スペースキーでフリップ。\n\t\tconst spaceHandler = (e: KeyboardEvent) => {\n\t\t\tif (e.code === 'Space' && e.target === document.body) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.isFlipped = !this.isFlipped;\n\t\t\t\tthis.renderLearnCard();\n\t\t\t}\n\t\t};\n\t\tdocument.addEventListener('keydown', spaceHandler);\n\n\t\t//! モールス再生ボタン。\n\t\tconst playMorseBtn = document.getElementById('play-morse-btn');\n\t\tif (playMorseBtn) {\n\t\t\tplayMorseBtn.addEventListener('click', () => {\n\t\t\t\tconst card = this.learnCards[this.currentLearnIndex];\n\t\t\t\tthis.playMorse(card.abbreviation);\n\t\t\t});\n\t\t}\n\n\t\t//! 判定ボタン（わからない）。\n\t\tconst markUnknownBtn = document.getElementById('mark-unknown-btn');\n\t\tmarkUnknownBtn?.addEventListener('click', () => {\n\t\t\tconst card = this.learnCards[this.currentLearnIndex];\n\t\t\tthis.progress.unknown.add(card.abbreviation);\n\t\t\tthis.progress.known.delete(card.abbreviation);\n\t\t\tthis.saveProgress();\n\t\t\tthis.moveToNextCard();\n\t\t});\n\n\t\t//! 判定ボタン（わかる）。\n\t\tconst markKnownBtn = document.getElementById('mark-known-btn');\n\t\tmarkKnownBtn?.addEventListener('click', () => {\n\t\t\tconst card = this.learnCards[this.currentLearnIndex];\n\t\t\tthis.progress.known.add(card.abbreviation);\n\t\t\tthis.progress.unknown.delete(card.abbreviation);\n\t\t\tthis.saveProgress();\n\t\t\tthis.moveToNextCard();\n\t\t});\n\n\t\t//! 前のカードボタン。\n\t\tconst prevCardBtn = document.getElementById('prev-card-btn');\n\t\tprevCardBtn?.addEventListener('click', () => {\n\t\t\tif (this.currentLearnIndex > 0) {\n\t\t\t\tthis.currentLearnIndex--;\n\t\t\t\tthis.isFlipped = false;\n\t\t\t\tthis.renderLearnCard();\n\t\t\t}\n\t\t});\n\n\t\t//! 次のカードボタン。\n\t\tconst nextCardBtn = document.getElementById('next-card-btn');\n\t\tnextCardBtn?.addEventListener('click', () => {\n\t\t\tif (this.currentLearnIndex < this.learnCards.length - 1) {\n\t\t\t\tthis.currentLearnIndex++;\n\t\t\t\tthis.isFlipped = false;\n\t\t\t\tthis.renderLearnCard();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * 次のカードに移動する（判定ボタンクリック時の自動遷移用）\n\t */\n\tprivate moveToNextCard(): void {\n\t\tif (this.currentLearnIndex < this.learnCards.length - 1) {\n\t\t\t//! 次のカードがあれば移動。\n\t\t\tthis.currentLearnIndex++;\n\t\t\tthis.isFlipped = false;\n\t\t\tthis.renderLearnCard();\n\t\t} else {\n\t\t\t//! 最後のカードの場合は学習完了。\n\t\t\talert('学習完了しました！');\n\t\t\tthis.learnCards = [];\n\t\t\tthis.currentLearnIndex = 0;\n\t\t\tthis.isFlipped = false;\n\t\t\tthis.renderLearnSetup();\n\t\t}\n\t}\n\n\t/**\n\t * 試験モードをレンダリング\n\t */\n\tprivate renderExamMode(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tif (this.questions.length === 0) {\n\t\t\t// 試験設定画面\n\t\t\tthis.renderExamSetup();\n\t\t} else {\n\t\t\t// 試験実施画面\n\t\t\tthis.renderExamQuestion();\n\t\t}\n\t}\n\n\t/**\n\t * 試験設定画面\n\t */\n\tprivate renderExamSetup(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t<h1>CW略語・Q符号学習</h1>\n\t\t\t\t\t<button class=\"settings-btn\" id=\"settings-btn\" title=\"設定\">⚙</button>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"tabs\">\n\t\t\t\t\t<button class=\"tab-button\" data-tab=\"browse\">一覧</button>\n\t\t\t\t\t<button class=\"tab-button\" data-tab=\"learn\">学習モード</button>\n\t\t\t\t\t<button class=\"tab-button active\" data-tab=\"exam\">試験モード</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"flashcard-container\">\n\t\t\t\t\t${this.renderFilterSection()}\n\n\t\t\t\t\t<div class=\"exam-setup-section\">\n\t\t\t\t\t\t<h3>出題形式</h3>\n\t\t\t\t\t\t<div class=\"question-type-buttons\">\n\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.questionType === 'abbr-to-meaning' ? 'active' : ''}\" data-type=\"abbr-to-meaning\">略語→意味（基礎）</button>\n\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.questionType === 'meaning-to-abbr' ? 'active' : ''}\" data-type=\"meaning-to-abbr\">意味→略語（応用）</button>\n\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.questionType === 'morse-to-abbr' ? 'active' : ''}\" data-type=\"morse-to-abbr\">モールス音→略語（実践）</button>\n\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.questionType === 'morse-to-meaning' ? 'active' : ''}\" data-type=\"morse-to-meaning\">モールス音→意味（実践）</button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<h3>問題数</h3>\n\t\t\t\t\t\t<div class=\"question-count-buttons\">\n\t\t\t\t\t\t\t<button class=\"question-count-btn ${this.questionCount === 5 ? 'active' : ''}\" data-count=\"5\">5問</button>\n\t\t\t\t\t\t\t<button class=\"question-count-btn ${this.questionCount === 10 ? 'active' : ''}\" data-count=\"10\">10問</button>\n\t\t\t\t\t\t\t<button class=\"question-count-btn ${this.questionCount === 20 ? 'active' : ''}\" data-count=\"20\">20問</button>\n\t\t\t\t\t\t\t<button class=\"question-count-btn ${this.questionCount === 50 ? 'active' : ''}\" data-count=\"50\">50問</button>\n\t\t\t\t\t\t\t<button class=\"question-count-btn ${this.questionCount === 'all' ? 'active' : ''}\" data-count=\"all\">全問</button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"action-area\">\n\t\t\t\t\t\t\t<button class=\"btn btn-large btn-primary\" id=\"start-exam-btn\">試験開始</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t\t<h3>使い方</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>フィルターで出題範囲を絞り込みます</li>\n\t\t\t\t\t\t\t<li>出題形式を選択します（略語→意味、意味→略語、モールス音から）</li>\n\t\t\t\t\t\t\t<li>問題数を選択します（5問〜全問）</li>\n\t\t\t\t\t\t\t<li>4つの選択肢から正解を選びます</li>\n\t\t\t\t\t\t\t<li>80%以上で合格です</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachExamSetupListeners();\n\t}\n\n\t/**\n\t * 試験問題画面\n\t */\n\tprivate renderExamQuestion(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tconst question = this.questions[this.currentQuestionIndex];\n\t\tconst progress = this.currentQuestionIndex + 1;\n\t\tconst total = this.questions.length;\n\n\t\tlet questionText = '';\n\t\tswitch (question.type) {\n\t\t\tcase 'abbr-to-meaning':\n\t\t\t\tquestionText = `次の略語の意味は？<br><strong class=\"question-text\">${question.entry.abbreviation}</strong>`;\n\t\t\t\tbreak;\n\t\t\tcase 'meaning-to-abbr':\n\t\t\t\tquestionText = `次の意味を表す略語は？<br><strong class=\"question-text\">${question.entry.english} / ${question.entry.japanese}</strong>`;\n\t\t\t\tbreak;\n\t\t\tcase 'morse-to-abbr':\n\t\t\t\tquestionText = `モールス音を聞いて、対応する略語は？<br><button id=\"replay-morse-btn\" class=\"btn btn-secondary\">🔊 もう一度再生</button>`;\n\t\t\t\tbreak;\n\t\t\tcase 'morse-to-meaning':\n\t\t\t\tquestionText = `モールス音を聞いて、対応する意味は？<br><button id=\"replay-morse-btn\" class=\"btn btn-secondary\">🔊 もう一度再生</button>`;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<h1>CW略語・Q符号学習 - 試験中</h1>\n\t\t\t\t\t<button class=\"back-btn\">中断</button>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"exam-container\">\n\t\t\t\t\t<div class=\"exam-progress\">\n\t\t\t\t\t\t<span>問題 <strong>${progress}</strong> / ${total}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"question-area\">\n\t\t\t\t\t\t<p class=\"question\">${questionText}</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"choices-area\">\n\t\t\t\t\t\t${question.choices.map((choice, index) => `\n\t\t\t\t\t\t\t<button class=\"choice-btn\" data-choice=\"${choice}\">\n\t\t\t\t\t\t\t\t${index + 1}. ${choice}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t`).join('')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachExamQuestionListeners();\n\n\t\t//! モールス音が必要な場合は自動再生。\n\t\tif (question.type === 'morse-to-abbr' || question.type === 'morse-to-meaning') {\n\t\t\tsetTimeout(() => this.playMorse(question.entry.abbreviation), 500);\n\t\t}\n\t}\n\n\t/**\n\t * 試験結果画面\n\t */\n\tprivate renderExamResultMode(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tconst score = FlashcardTrainer.calculateScore(this.results);\n\t\tconst isPassed = FlashcardTrainer.isPassed(score.percentage);\n\t\tconst wrongAnswers = FlashcardTrainer.getWrongAnswers(this.results);\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<h1>CW略語・Q符号学習 - 結果</h1>\n\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"result-container\">\n\t\t\t\t\t<div class=\"score-area ${isPassed ? 'passed' : 'failed'}\">\n\t\t\t\t\t\t<h2>${isPassed ? '合格！' : '不合格'}</h2>\n\t\t\t\t\t\t<div class=\"score-display\">\n\t\t\t\t\t\t\t<span class=\"score-percentage\">${score.percentage}%</span>\n\t\t\t\t\t\t\t<span class=\"score-detail\">${score.correct} / ${score.total} 問正解</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t${wrongAnswers.length > 0 ? `\n\t\t\t\t\t\t<div class=\"wrong-answers-section\">\n\t\t\t\t\t\t\t<h3>間違えた問題（${wrongAnswers.length}件）</h3>\n\t\t\t\t\t\t\t<div class=\"wrong-answers-list\">\n\t\t\t\t\t\t\t\t${this.results.filter(r => !r.isCorrect).map(result => `\n\t\t\t\t\t\t\t\t\t<div class=\"wrong-answer-item\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"wrong-answer-question\">\n\t\t\t\t\t\t\t\t\t\t\t<strong>${result.question.entry.abbreviation}</strong>\n\t\t\t\t\t\t\t\t\t\t\t<span>${result.question.entry.english} / ${result.question.entry.japanese}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"wrong-answer-detail\">\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"wrong-label\">あなたの回答:</span>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"wrong-user-answer\">${result.userAnswer}</span>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"correct-label\">正解:</span>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"correct-answer\">${result.question.correctAnswer}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t${result.question.entry.description ? `\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"wrong-answer-description\">\n\t\t\t\t\t\t\t\t\t\t\t\t${result.question.entry.description}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t` : ''}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t`).join('')}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t` : `\n\t\t\t\t\t\t<div class=\"perfect-score\">\n\t\t\t\t\t\t\t<p>すべて正解しました！</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`}\n\n\t\t\t\t\t<div class=\"action-area\">\n\t\t\t\t\t\t<button class=\"btn btn-primary btn-large\" id=\"retry-btn\">もう一度</button>\n\t\t\t\t\t\t<button class=\"btn btn-secondary btn-large\" id=\"back-to-setup-btn\">設定に戻る</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachResultListeners();\n\t}\n\n\t/**\n\t * browseモードのイベントリスナーを設定\n\t */\n\tprivate attachBrowseModeListeners(): void {\n\t\tthis.attachCommonListeners();\n\n\t\t//! タグフィルター。\n\t\tconst tagFilter = document.getElementById('tag-filter');\n\t\ttagFilter?.addEventListener('change', (e) => {\n\t\t\tconst target = e.target as HTMLInputElement;\n\t\t\tif (target.type === 'checkbox') {\n\t\t\t\tif (target.checked) {\n\t\t\t\t\tthis.selectedTags.add(target.value);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedTags.delete(target.value);\n\t\t\t\t}\n\t\t\t\tthis.saveFilters();\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\tthis.updateFilteredCount();\n\t\t\t\tthis.renderEntries();\n\t\t\t}\n\t\t});\n\n\t\t//! 使用頻度フィルター。\n\t\tconst frequencyFilter = document.getElementById('frequency-filter');\n\t\tfrequencyFilter?.addEventListener('change', (e) => {\n\t\t\tconst target = e.target as HTMLInputElement;\n\t\t\tif (target.type === 'checkbox') {\n\t\t\t\tconst freq = parseInt(target.value, 10);\n\t\t\t\tif (target.checked) {\n\t\t\t\t\tthis.selectedFrequencies.add(freq);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedFrequencies.delete(freq);\n\t\t\t\t}\n\t\t\t\tthis.saveFilters();\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\tthis.updateFilteredCount();\n\t\t\t\tthis.renderEntries();\n\t\t\t}\n\t\t});\n\n\t\t//! 検索。\n\t\tconst searchInput = document.getElementById('search-input') as HTMLInputElement;\n\t\tsearchInput?.addEventListener('input', () => {\n\t\t\tthis.searchQuery = searchInput.value;\n\t\t\tthis.saveFilters();\n\t\t\tthis.updateFilteredEntries();\n\t\t\tthis.updateFilteredCount();\n\t\t\tthis.renderEntries();\n\t\t});\n\t}\n\n\t/**\n\t * 試験設定のイベントリスナーを設定\n\t */\n\tprivate attachExamSetupListeners(): void {\n\t\tthis.attachCommonListeners();\n\n\t\t//! タグフィルター。\n\t\tconst tagFilter = document.getElementById('tag-filter');\n\t\ttagFilter?.addEventListener('change', (e) => {\n\t\t\tconst target = e.target as HTMLInputElement;\n\t\t\tif (target.type === 'checkbox') {\n\t\t\t\tif (target.checked) {\n\t\t\t\t\tthis.selectedTags.add(target.value);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedTags.delete(target.value);\n\t\t\t\t}\n\t\t\t\tthis.saveFilters();\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\tthis.updateFilteredCount();\n\t\t\t}\n\t\t});\n\n\t\t//! 使用頻度フィルター。\n\t\tconst frequencyFilter = document.getElementById('frequency-filter');\n\t\tfrequencyFilter?.addEventListener('change', (e) => {\n\t\t\tconst target = e.target as HTMLInputElement;\n\t\t\tif (target.type === 'checkbox') {\n\t\t\t\tconst freq = parseInt(target.value, 10);\n\t\t\t\tif (target.checked) {\n\t\t\t\t\tthis.selectedFrequencies.add(freq);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedFrequencies.delete(freq);\n\t\t\t\t}\n\t\t\t\tthis.saveFilters();\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\tthis.updateFilteredCount();\n\t\t\t}\n\t\t});\n\n\t\t//! 検索。\n\t\tconst searchInput = document.getElementById('search-input') as HTMLInputElement;\n\t\tsearchInput?.addEventListener('input', () => {\n\t\t\tthis.searchQuery = searchInput.value;\n\t\t\tthis.saveFilters();\n\t\t\tthis.updateFilteredEntries();\n\t\t\tthis.updateFilteredCount();\n\t\t});\n\n\t\t//! 出題形式ボタン。\n\t\tconst questionTypeBtns = document.querySelectorAll('.question-type-btn');\n\t\tquestionTypeBtns.forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst type = btn.getAttribute('data-type') as QuestionType;\n\t\t\t\tif (type) {\n\t\t\t\t\tthis.questionType = type;\n\t\t\t\t\tFlashcardState.saveExamQuestionType(this.questionType as LearnQuestionType);\n\t\t\t\t\tthis.renderExamSetup();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! 問題数ボタン。\n\t\tconst questionCountBtns = document.querySelectorAll('.question-count-btn');\n\t\tquestionCountBtns.forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst count = btn.getAttribute('data-count');\n\t\t\t\tif (count) {\n\t\t\t\t\tthis.questionCount = count === 'all' ? 'all' : parseInt(count, 10);\n\t\t\t\t\tthis.renderExamSetup();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! 試験開始ボタン。\n\t\tconst startExamBtn = document.getElementById('start-exam-btn');\n\t\tstartExamBtn?.addEventListener('click', () => {\n\t\t\tthis.startExam();\n\t\t});\n\t}\n\n\t/**\n\t * 試験問題のイベントリスナーを設定\n\t */\n\tprivate attachExamQuestionListeners(): void {\n\t\t//! 中断ボタン。\n\t\tconst backBtn = document.querySelector('.back-btn');\n\t\tbackBtn?.addEventListener('click', () => {\n\t\t\tif (confirm('試験を中断してメニューに戻りますか？')) {\n\t\t\t\twindow.location.hash = '#menu';\n\t\t\t}\n\t\t});\n\n\t\t//! モールス再生ボタン。\n\t\tconst replayBtn = document.getElementById('replay-morse-btn');\n\t\tif (replayBtn) {\n\t\t\tconst question = this.questions[this.currentQuestionIndex];\n\t\t\treplayBtn.addEventListener('click', () => {\n\t\t\t\tthis.playMorse(question.entry.abbreviation);\n\t\t\t});\n\t\t}\n\n\t\t//! 選択肢ボタン。\n\t\tconst choiceBtns = document.querySelectorAll('.choice-btn');\n\t\tchoiceBtns.forEach(btn => {\n\t\t\tbtn.addEventListener('click', (e) => {\n\t\t\t\tconst target = e.currentTarget as HTMLButtonElement;\n\t\t\t\tconst userAnswer = target.dataset.choice || '';\n\t\t\t\tthis.handleAnswer(userAnswer);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * 結果画面のイベントリスナーを設定\n\t */\n\tprivate attachResultListeners(): void {\n\t\t//! 戻るボタン。\n\t\tconst backBtn = document.querySelector('.back-btn');\n\t\tbackBtn?.addEventListener('click', () => {\n\t\t\twindow.location.hash = '#menu';\n\t\t});\n\n\t\t//! もう一度ボタン。\n\t\tconst retryBtn = document.getElementById('retry-btn');\n\t\tretryBtn?.addEventListener('click', () => {\n\t\t\tthis.questions = [];\n\t\t\tthis.results = [];\n\t\t\tthis.currentQuestionIndex = 0;\n\t\t\tthis.currentState = 'exam';\n\t\t\tthis.render();\n\t\t});\n\n\t\t//! 設定に戻るボタン。\n\t\tconst backToSetupBtn = document.getElementById('back-to-setup-btn');\n\t\tbackToSetupBtn?.addEventListener('click', () => {\n\t\t\tthis.questions = [];\n\t\t\tthis.results = [];\n\t\t\tthis.currentQuestionIndex = 0;\n\t\t\tthis.currentState = 'exam';\n\t\t\tthis.render();\n\t\t});\n\t}\n\n\t/**\n\t * 共通のイベントリスナーを設定（タブ切り替えなど）\n\t */\n\tprivate attachCommonListeners(): void {\n\t\t//! 戻るボタン。\n\t\tconst backBtn = document.querySelector('.back-btn');\n\t\tbackBtn?.addEventListener('click', () => {\n\t\t\twindow.location.hash = '#menu';\n\t\t});\n\n\t\t//! 設定ボタン。\n\t\tconst settingsBtn = document.getElementById('settings-btn');\n\t\tsettingsBtn?.addEventListener('click', () => {\n\t\t\tthis.openSettingsModal();\n\t\t});\n\n\t\t//! タブ切り替え。\n\t\tconst tabButtons = document.querySelectorAll('.tab-button');\n\t\ttabButtons.forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst tab = btn.getAttribute('data-tab');\n\t\t\t\tif (tab === 'browse') {\n\t\t\t\t\tthis.currentState = 'browse';\n\t\t\t\t\tFlashcardState.saveViewMode('browse');\n\t\t\t\t\tthis.render();\n\t\t\t\t} else if (tab === 'learn') {\n\t\t\t\t\tthis.currentState = 'learn';\n\t\t\t\t\tFlashcardState.saveViewMode('learn');\n\t\t\t\t\tthis.render();\n\t\t\t\t} else if (tab === 'exam') {\n\t\t\t\t\tthis.questions = [];\n\t\t\t\t\tthis.results = [];\n\t\t\t\t\tthis.currentQuestionIndex = 0;\n\t\t\t\t\tthis.currentState = 'exam';\n\t\t\t\t\tFlashcardState.saveViewMode('exam');\n\t\t\t\t\tthis.render();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * フィルター適用後のエントリー数を更新\n\t */\n\tprivate updateFilteredCount(): void {\n\t\tconst filteredCountElem = document.getElementById('filtered-count');\n\t\tif (filteredCountElem) {\n\t\t\tfilteredCountElem.textContent = this.filteredEntries.length.toString();\n\t\t}\n\n\t\t//! 問題数の最大値も更新（試験モードの場合）。\n\t\tconst questionCountInput = document.getElementById('question-count') as HTMLInputElement;\n\t\tif (questionCountInput) {\n\t\t\tquestionCountInput.max = this.filteredEntries.length.toString();\n\t\t\tif (parseInt(questionCountInput.value, 10) > this.filteredEntries.length) {\n\t\t\t\tquestionCountInput.value = this.filteredEntries.length.toString();\n\t\t\t\tthis.questionCount = this.filteredEntries.length;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * フィルタリングされたエントリーを更新\n\t */\n\tprivate updateFilteredEntries(): void {\n\t\tlet entries = this.allEntries;\n\n\t\t//! タグでフィルタリング。\n\t\tentries = FlashcardTrainer.filterByTags(entries, this.selectedTags);\n\n\t\t//! 使用頻度でフィルタリング。\n\t\tentries = FlashcardTrainer.filterByFrequencies(entries, this.selectedFrequencies);\n\n\t\t//! 検索クエリでフィルタリング。\n\t\tentries = FlashcardTrainer.filterByQuery(entries, this.searchQuery);\n\n\t\t//! ソート適用。\n\t\tthis.filteredEntries = this.sortEntries(entries);\n\t}\n\n\t/**\n\t * エントリーをソート\n\t */\n\tprivate sortEntries(entries: FlashcardEntry[]): FlashcardEntry[] {\n\t\tconst ascending = this.sortDirection === 'asc';\n\n\t\tswitch (this.sortColumn) {\n\t\t\tcase 'abbreviation':\n\t\t\t\treturn FlashcardTrainer.sortByAbbreviation(entries, ascending);\n\t\t\tcase 'english':\n\t\t\t\treturn FlashcardTrainer.sortByEnglish(entries, ascending);\n\t\t\tcase 'japanese':\n\t\t\t\treturn FlashcardTrainer.sortByJapanese(entries, ascending);\n\t\t\tcase 'frequency':\n\t\t\t\treturn FlashcardTrainer.sortByFrequency(entries, ascending);\n\t\t\tcase 'tags':\n\t\t\t\treturn FlashcardTrainer.sortByTags(entries, ascending);\n\t\t\tdefault:\n\t\t\t\treturn entries;\n\t\t}\n\t}\n\n\t/**\n\t * ソートを切り替え\n\t */\n\tprivate toggleSort(column: SortColumn): void {\n\t\tif (this.sortColumn === column) {\n\t\t\t//! 同じ列なら方向を反転。\n\t\t\tthis.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n\t\t} else {\n\t\t\t//! 異なる列なら昇順で開始。\n\t\t\tthis.sortColumn = column;\n\t\t\tthis.sortDirection = 'asc';\n\t\t}\n\t\t//! ソート状態を保存。\n\t\tFlashcardState.saveSortState(this.sortColumn, this.sortDirection);\n\t\tthis.updateFilteredEntries();\n\t\tthis.renderEntries();\n\t}\n\n\t/**\n\t * ソートインジケーターを取得\n\t */\n\tprivate getSortIndicator(column: SortColumn): string {\n\t\tif (this.sortColumn !== column) return '';\n\t\treturn this.sortDirection === 'asc' ? ' ▲' : ' ▼';\n\t}\n\n\t/**\n\t * 略語をフォーマット（プロサインをオーバーラインで表示）\n\t */\n\tprivate formatAbbreviation(abbr: string): string {\n\t\tconst prosignMatch = abbr.match(/^\\[([A-Z]+)\\]$/);\n\t\tif (prosignMatch) {\n\t\t\treturn `<span class=\"prosign\">${prosignMatch[1]}</span>`;\n\t\t}\n\t\treturn abbr;\n\t}\n\n\t/**\n\t * モールス符号を再生\n\t */\n\tprivate async playMorse(text: string): Promise<void> {\n\t\ttry {\n\t\t\t//! 既に再生中の場合は停止。\n\t\t\tif (this.currentlyPlaying === text) {\n\t\t\t\tthis.audio.stopContinuousTone();\n\t\t\t\tthis.currentlyPlaying = null;\n\t\t\t\tthis.renderEntries();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//! 別のものが再生中なら停止。\n\t\t\tif (this.currentlyPlaying) {\n\t\t\t\tthis.audio.stopContinuousTone();\n\t\t\t}\n\n\t\t\tthis.currentlyPlaying = text;\n\t\t\tthis.renderEntries();\n\n\t\t\t//! モールス符号に変換。\n\t\t\tconst morseSequence = MorseCodec.textToMorse(text);\n\t\t\tif (morseSequence) {\n\t\t\t\t//! シンプルな再生実装（scheduleToneを使用）。\n\t\t\t\tfor (const char of morseSequence) {\n\t\t\t\t\tif (char === '.') {\n\t\t\t\t\t\tthis.audio.scheduleTone(0, 60);  // 短点\n\t\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 120));\n\t\t\t\t\t} else if (char === '-') {\n\t\t\t\t\t\tthis.audio.scheduleTone(0, 180);  // 長点\n\t\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 240));\n\t\t\t\t\t} else if (char === ' ') {\n\t\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 60));  // 要素間スペース\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.currentlyPlaying = null;\n\t\t\tthis.renderEntries();\n\t\t} catch (error) {\n\t\t\tconsole.error('モールス再生エラー:', error);\n\t\t\tthis.currentlyPlaying = null;\n\t\t\tthis.renderEntries();\n\t\t}\n\t}\n\n\t/**\n\t * 試験を開始\n\t */\n\tprivate startExam(): void {\n\t\tif (this.filteredEntries.length === 0) {\n\t\t\talert('該当するエントリーがありません。フィルターを調整してください。');\n\t\t\treturn;\n\t\t}\n\n\t\tconst count = this.questionCount === 'all' ? this.filteredEntries.length : this.questionCount;\n\t\tconst actualCount = Math.min(count, this.filteredEntries.length);\n\t\tif (actualCount === 0) {\n\t\t\talert('問題数を1以上に設定してください。');\n\t\t\treturn;\n\t\t}\n\n\t\t//! 問題を生成。\n\t\tthis.questions = FlashcardTrainer.generateExamQuestions(\n\t\t\tthis.filteredEntries,\n\t\t\tthis.questionType,\n\t\t\tactualCount\n\t\t);\n\n\t\tthis.currentQuestionIndex = 0;\n\t\tthis.results = [];\n\t\tthis.render();\n\t}\n\n\t/**\n\t * 回答を処理\n\t */\n\tprivate handleAnswer(userAnswer: string): void {\n\t\tconst question = this.questions[this.currentQuestionIndex];\n\t\tconst isCorrect = FlashcardTrainer.checkAnswer(question, userAnswer);\n\n\t\t//! 結果を記録。\n\t\tthis.results.push({\n\t\t\tquestion,\n\t\t\tuserAnswer,\n\t\t\tisCorrect\n\t\t});\n\n\t\t//! 次の問題に進むか結果表示。\n\t\tthis.currentQuestionIndex++;\n\t\tif (this.currentQuestionIndex < this.questions.length) {\n\t\t\tthis.render();\n\t\t} else {\n\t\t\tthis.currentState = 'exam-result';\n\t\t\tthis.render();\n\t\t}\n\t}\n\n\t/**\n\t * 設定モーダルを開く\n\t */\n\tprivate openSettingsModal(): void {\n\t\tconst volume = Math.round(this.audio.getVolume() * 100);\n\t\tconst frequency = this.audio.getFrequency();\n\t\tconst wpm = this.audio.getWPM();\n\n\t\tconst modalHTML = `\n\t\t\t<div class=\"settings-modal active\" id=\"settings-modal\">\n\t\t\t\t<div class=\"settings-content\">\n\t\t\t\t\t<h2>設定</h2>\n\t\t\t\t\t<div class=\"settings-grid\">\n\t\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t\t<label for=\"volume-range\">音量</label>\n\t\t\t\t\t\t\t<input type=\"range\" id=\"volume-range\" min=\"0\" max=\"100\" value=\"${volume}\">\n\t\t\t\t\t\t\t<input type=\"number\" id=\"volume-input\" min=\"0\" max=\"100\" value=\"${volume}\">\n\t\t\t\t\t\t\t<span>%</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t\t<label for=\"frequency-input\">周波数 (Hz)</label>\n\t\t\t\t\t\t\t<input type=\"number\" id=\"frequency-input\" min=\"400\" max=\"1200\" value=\"${frequency}\" step=\"50\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t\t<label for=\"wpm-input\">WPM (速度: 5-40)</label>\n\t\t\t\t\t\t\t<input type=\"number\" id=\"wpm-input\" min=\"5\" max=\"40\" value=\"${wpm}\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t\t<span>テスト再生</span>\n\t\t\t\t\t\t\t<button id=\"test-morse-btn\" class=\"test-button\">再生</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"settings-buttons\">\n\t\t\t\t\t\t<button id=\"cancel-btn\" class=\"secondary-button\">キャンセル</button>\n\t\t\t\t\t\t<button id=\"ok-btn\" class=\"primary-button\">OK</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tdocument.body.insertAdjacentHTML('beforeend', modalHTML);\n\n\t\t//! イベントリスナー。\n\t\tconst modal = document.getElementById('settings-modal');\n\t\tif (!modal) return;\n\n\t\t//! 背景クリックで閉じる。\n\t\tmodal.addEventListener('click', (e) => {\n\t\t\tif (e.target === modal) {\n\t\t\t\tthis.closeSettingsModal(false);\n\t\t\t}\n\t\t});\n\n\t\t//! 音量スライダー。\n\t\tconst volumeRange = document.getElementById('volume-range') as HTMLInputElement;\n\t\tconst volumeInput = document.getElementById('volume-input') as HTMLInputElement;\n\t\tif (volumeRange && volumeInput) {\n\t\t\tvolumeRange.addEventListener('input', () => {\n\t\t\t\tconst val = parseInt(volumeRange.value) / 100;\n\t\t\t\tthis.audio.setVolume(val);\n\t\t\t\tvolumeInput.value = volumeRange.value;\n\t\t\t});\n\t\t\tvolumeInput.addEventListener('input', () => {\n\t\t\t\tconst val = parseInt(volumeInput.value) / 100;\n\t\t\t\tthis.audio.setVolume(val);\n\t\t\t\tvolumeRange.value = volumeInput.value;\n\t\t\t});\n\t\t}\n\n\t\t//! 周波数。\n\t\tconst frequencyInput = document.getElementById('frequency-input') as HTMLInputElement;\n\t\tif (frequencyInput) {\n\t\t\tfrequencyInput.addEventListener('input', () => {\n\t\t\t\tconst val = parseInt(frequencyInput.value);\n\t\t\t\tthis.audio.setFrequency(val);\n\t\t\t});\n\t\t}\n\n\t\t//! WPM。\n\t\tconst wpmInput = document.getElementById('wpm-input') as HTMLInputElement;\n\t\tif (wpmInput) {\n\t\t\twpmInput.addEventListener('input', () => {\n\t\t\t\tconst val = parseInt(wpmInput.value);\n\t\t\t\tthis.audio.setWPM(val);\n\t\t\t});\n\t\t}\n\n\t\t//! テスト再生。\n\t\tconst testBtn = document.getElementById('test-morse-btn');\n\t\tif (testBtn) {\n\t\t\ttestBtn.addEventListener('click', async () => {\n\t\t\t\tawait this.playMorse('CQ');\n\t\t\t});\n\t\t}\n\n\t\t//! キャンセルボタン。\n\t\tconst cancelBtn = document.getElementById('cancel-btn');\n\t\tif (cancelBtn) {\n\t\t\tcancelBtn.addEventListener('click', (e) => {\n\t\t\t\te.stopPropagation();\n\t\t\t\tthis.closeSettingsModal(false);\n\t\t\t});\n\t\t}\n\n\t\t//! OKボタン。\n\t\tconst okBtn = document.getElementById('ok-btn');\n\t\tif (okBtn) {\n\t\t\tokBtn.addEventListener('click', (e) => {\n\t\t\t\te.stopPropagation();\n\t\t\t\tthis.closeSettingsModal(true);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * 設定モーダルを閉じる\n\t */\n\tprivate closeSettingsModal(save: boolean): void {\n\t\tif (!save) {\n\t\t\t//! キャンセル時は設定を元に戻す（現在の実装では何もしない）。\n\t\t\t//! 必要に応じてlocalStorageから読み込む処理を追加。\n\t\t}\n\n\t\tconst modal = document.getElementById('settings-modal');\n\t\tif (modal) {\n\t\t\tmodal.remove();\n\t\t}\n\t}\n\n\t/**\n\t * ビューを破棄\n\t */\n\tdestroy(): void {\n\t\t//! 音声を停止。\n\t\tif (this.currentlyPlaying) {\n\t\t\tthis.audio.stopContinuousTone();\n\t\t}\n\t}\n}\n","/**\n * コッホ法トレーニングビュー\n */\n\nimport type { View } from '../../router';\nimport {\n\tKochTrainer,\n\tAudioGenerator,\n\tMorseCodec,\n\ttype PracticeSettings\n} from 'morse-engine';\n\ntype ViewMode = 'learning' | 'custom';\n\ninterface LessonState {\n\tcurrentLesson: number;\n\tisPlaying: boolean;\n\tuserInput: string;\n\tcorrectAnswer: string;\n\tgroups: string[];\n\tcurrentGroupIndex: number;\n}\n\ninterface CustomState {\n\tselectedChars: Set<string>;\n\tisCustomRunning: boolean;\n\tcustomUserInput: string;\n\tcustomCorrectAnswer: string;\n\tcustomGroups: string[];\n\tcustomCurrentGroupIndex: number;\n\tcustomIsPlaying: boolean;\n}\n\ninterface KochSettings {\n\tcharacterSpeed: number;\n\teffectiveSpeed: number;\n\tfrequency: number;\n\tvolume: number;\n\tpracticeDuration: number;\n\tgroupSize: number;\n\tshowInput: boolean;\n}\n\nconst DEFAULT_SETTINGS: KochSettings = {\n\tcharacterSpeed: 20,\n\teffectiveSpeed: 15,\n\tfrequency: 700,\n\tvolume: 0.7,\n\tpracticeDuration: 60,\n\tgroupSize: 5,\n\tshowInput: true\n};\n\n//! コッホシーケンス（41文字）。\nconst KOCH_SEQUENCE = [\n\t'K', 'M', 'U', 'R', 'E', 'S', 'N', 'A', 'P', 'T',\n\t'L', 'W', 'I', '.', 'J', 'Z', '=', 'F', 'O', 'Y',\n\t'V', ',', 'G', '5', '/', 'Q', '9', '2', 'H', '3',\n\t'8', 'B', '?', '4', '7', 'C', '1', 'D', '6', '0',\n\t'X'\n];\n\n/**\n * コッホ法トレーニングビュークラス\n */\nexport class KochView implements View {\n\tprivate audio: AudioGenerator;\n\tprivate viewMode: ViewMode = 'learning';\n\tprivate settings: KochSettings = { ...DEFAULT_SETTINGS };\n\n\tprivate state: LessonState = {\n\t\tcurrentLesson: 1,\n\t\tisPlaying: false,\n\t\tuserInput: '',\n\t\tcorrectAnswer: '',\n\t\tgroups: [],\n\t\tcurrentGroupIndex: 0,\n\t};\n\n\tprivate customState: CustomState = {\n\t\tselectedChars: new Set(),\n\t\tisCustomRunning: false,\n\t\tcustomUserInput: '',\n\t\tcustomCorrectAnswer: '',\n\t\tcustomGroups: [],\n\t\tcustomCurrentGroupIndex: 0,\n\t\tcustomIsPlaying: false,\n\t};\n\n\tconstructor() {\n\t\t//! 設定を読み込む。\n\t\tthis.loadSettings();\n\t\tthis.loadProgress();\n\t\tthis.loadViewMode();\n\t\tthis.loadSelectedChars();\n\n\t\t//! AudioGeneratorを初期化。\n\t\tthis.audio = new AudioGenerator({\n\t\t\tfrequency: this.settings.frequency,\n\t\t\tvolume: this.settings.volume,\n\t\t\twpm: this.settings.characterSpeed,\n\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t});\n\t}\n\n\t//! ========== 設定管理 ==========\n\n\tprivate loadSettings(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.koch.settings');\n\t\t\tif (saved) {\n\t\t\t\tthis.settings = { ...DEFAULT_SETTINGS, ...JSON.parse(saved) };\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load settings:', error);\n\t\t}\n\t}\n\n\tprivate saveSettings(): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem('v10.koch.settings', JSON.stringify(this.settings));\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save settings:', error);\n\t\t}\n\t}\n\n\tprivate loadProgress(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.koch.currentLesson');\n\t\t\tif (saved) {\n\t\t\t\tthis.state.currentLesson = parseInt(saved, 10);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load progress:', error);\n\t\t}\n\t}\n\n\tprivate saveProgress(): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem('v10.koch.currentLesson', this.state.currentLesson.toString());\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save progress:', error);\n\t\t}\n\t}\n\n\tprivate loadViewMode(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.koch.viewMode') as ViewMode | null;\n\t\t\tif (saved && ['learning', 'custom'].includes(saved)) {\n\t\t\t\tthis.viewMode = saved;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load view mode:', error);\n\t\t}\n\t}\n\n\tprivate saveViewMode(): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem('v10.koch.viewMode', this.viewMode);\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save view mode:', error);\n\t\t}\n\t}\n\n\tprivate loadSelectedChars(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.koch.selectedChars');\n\t\t\tif (saved) {\n\t\t\t\tconst chars = JSON.parse(saved) as string[];\n\t\t\t\tthis.customState.selectedChars = new Set(chars);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load selected chars:', error);\n\t\t}\n\t}\n\n\tprivate saveSelectedChars(): void {\n\t\ttry {\n\t\t\tconst chars = Array.from(this.customState.selectedChars);\n\t\t\tlocalStorage.setItem('v10.koch.selectedChars', JSON.stringify(chars));\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save selected chars:', error);\n\t\t}\n\t}\n\n\t//! ========== レッスン管理 ==========\n\n\tprivate async startLesson(): Promise<void> {\n\t\tconst chars = KochTrainer.getCharsForLesson(this.state.currentLesson);\n\t\tconst practiceSettings: PracticeSettings = {\n\t\t\tgroupSize: this.settings.groupSize,\n\t\t\tduration: this.settings.practiceDuration,\n\t\t\twpm: this.settings.characterSpeed\n\t\t};\n\t\tthis.state.groups = KochTrainer.generateRandomGroups(chars, practiceSettings);\n\t\tthis.state.currentGroupIndex = 0;\n\t\tthis.state.userInput = '';\n\t\tthis.state.correctAnswer = this.state.groups.join('');\n\t\tthis.state.isPlaying = false;\n\n\t\t//! AudioGeneratorの設定を更新。\n\t\tthis.audio.updateSettings({\n\t\t\tfrequency: this.settings.frequency,\n\t\t\tvolume: this.settings.volume,\n\t\t\twpm: this.settings.characterSpeed,\n\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t});\n\n\t\tthis.renderPractice();\n\t}\n\n\tprivate async playMorse(): Promise<void> {\n\t\tif (this.state.isPlaying) return;\n\n\t\tthis.state.isPlaying = true;\n\t\tthis.state.currentGroupIndex = 0;\n\t\tthis.updateProgress();\n\t\tthis.updatePlaybackButtons();\n\n\t\t//! モールス信号を再生。\n\t\tfor (let i = 0; i < this.state.groups.length && this.state.isPlaying; i++) {\n\t\t\tconst group = this.state.groups[i];\n\t\t\tconst morse = MorseCodec.textToMorse(group);\n\t\t\tawait this.audio.playMorseString(morse + ' /');\n\n\t\t\tthis.state.currentGroupIndex = i + 1;\n\t\t\tthis.updateProgress();\n\t\t}\n\n\t\tthis.state.isPlaying = false;\n\t\tthis.updatePlaybackButtons();\n\t\tif (this.state.currentGroupIndex >= this.state.groups.length) {\n\t\t\tthis.showResult();\n\t\t}\n\t}\n\n\tprivate pauseMorse(): void {\n\t\tthis.state.isPlaying = false;\n\t\tthis.audio.stopPlaying();\n\t\tthis.updatePlaybackButtons();\n\t}\n\n\tprivate stopLesson(): void {\n\t\tthis.state.isPlaying = false;\n\t\tthis.audio.stopPlaying();\n\t\tthis.render();\n\t}\n\n\tprivate showResult(): void {\n\t\tconst accuracy = this.calculateAccuracy();\n\t\tconst passed = accuracy >= 90;\n\n\t\tconst resultContainer = document.getElementById('resultContainer');\n\t\tif (!resultContainer) return;\n\n\t\tresultContainer.innerHTML = `\n\t\t\t<div class=\"result ${passed ? 'passed' : 'failed'}\">\n\t\t\t\t<h2>${passed ? '合格！' : '不合格'}</h2>\n\t\t\t\t<div class=\"accuracy\">正答率: ${accuracy.toFixed(1)}%</div>\n\t\t\t\t<div class=\"comparison\">\n\t\t\t\t\t<div>送信: ${this.state.correctAnswer}</div>\n\t\t\t\t\t<div>入力: ${this.state.userInput || '（未入力）'}</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"actions\">\n\t\t\t\t\t${passed ? `<button class=\"btn primary\" id=\"nextLessonBtn\">次のレッスンへ</button>` : ''}\n\t\t\t\t\t<button class=\"btn\" id=\"retryBtn\">もう一度</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tif (passed && this.state.currentLesson < 40) {\n\t\t\tthis.state.currentLesson++;\n\t\t\tthis.saveProgress();\n\n\t\t\tdocument.getElementById('nextLessonBtn')?.addEventListener('click', () => {\n\t\t\t\tthis.render();\n\t\t\t});\n\t\t}\n\n\t\tdocument.getElementById('retryBtn')?.addEventListener('click', () => {\n\t\t\tthis.render();\n\t\t});\n\t}\n\n\tprivate calculateAccuracy(): number {\n\t\tif (!this.state.userInput) return 0;\n\n\t\tconst correct = this.state.correctAnswer.replace(/\\s/g, '');\n\t\tconst input = this.state.userInput.replace(/\\s/g, '');\n\t\tconst maxLen = Math.max(correct.length, input.length);\n\n\t\tlet matches = 0;\n\t\tfor (let i = 0; i < maxLen; i++) {\n\t\t\tif (correct[i] === input[i]) matches++;\n\t\t}\n\n\t\treturn (matches / maxLen) * 100;\n\t}\n\n\tprivate updateProgress(): void {\n\t\tconst progressEl = document.getElementById('lessonProgress');\n\t\tconst progressBar = document.getElementById('progressBar');\n\n\t\tif (progressEl && progressBar) {\n\t\t\tconst percent = (this.state.currentGroupIndex / this.state.groups.length) * 100;\n\t\t\tprogressEl.textContent = `進行: ${this.state.currentGroupIndex}/${this.state.groups.length} (${percent.toFixed(0)}%)`;\n\t\t\tprogressBar.style.width = `${percent}%`;\n\t\t}\n\n\t\tthis.updatePlaybackButtons();\n\t}\n\n\tprivate updatePlaybackButtons(): void {\n\t\tconst playBtn = document.getElementById('playBtn') as HTMLButtonElement;\n\t\tconst pauseBtn = document.getElementById('pauseBtn') as HTMLButtonElement;\n\n\t\tif (playBtn && pauseBtn) {\n\t\t\tif (this.state.isPlaying) {\n\t\t\t\tplayBtn.disabled = true;\n\t\t\t\tpauseBtn.disabled = false;\n\t\t\t} else {\n\t\t\t\tplayBtn.disabled = false;\n\t\t\t\tpauseBtn.disabled = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t//! ========== カスタムモード管理 ==========\n\n\tprivate async startCustom(): Promise<void> {\n\t\tconst chars = Array.from(this.customState.selectedChars);\n\t\tconst practiceSettings: PracticeSettings = {\n\t\t\tgroupSize: this.settings.groupSize,\n\t\t\tduration: this.settings.practiceDuration,\n\t\t\twpm: this.settings.characterSpeed\n\t\t};\n\t\tthis.customState.customGroups = KochTrainer.generateRandomGroups(chars, practiceSettings);\n\t\tthis.customState.customCurrentGroupIndex = 0;\n\t\tthis.customState.customUserInput = '';\n\t\tthis.customState.customCorrectAnswer = this.customState.customGroups.join('');\n\t\tthis.customState.customIsPlaying = false;\n\t\tthis.customState.isCustomRunning = true;\n\n\t\t//! AudioGeneratorの設定を更新。\n\t\tthis.audio.updateSettings({\n\t\t\tfrequency: this.settings.frequency,\n\t\t\tvolume: this.settings.volume,\n\t\t\twpm: this.settings.characterSpeed,\n\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t});\n\n\t\tthis.render();\n\t\tthis.renderCustomPractice();\n\t}\n\n\tprivate async playCustomMorse(): Promise<void> {\n\t\tif (this.customState.customIsPlaying) return;\n\n\t\tthis.customState.customIsPlaying = true;\n\t\tthis.customState.customCurrentGroupIndex = 0;\n\t\tthis.updateCustomProgress();\n\t\tthis.updateCustomPlaybackButtons();\n\n\t\t//! モールス信号を再生。\n\t\tfor (let i = 0; i < this.customState.customGroups.length && this.customState.customIsPlaying; i++) {\n\t\t\tconst group = this.customState.customGroups[i];\n\t\t\tconst morse = MorseCodec.textToMorse(group);\n\t\t\tawait this.audio.playMorseString(morse + ' /');\n\n\t\t\tthis.customState.customCurrentGroupIndex = i + 1;\n\t\t\tthis.updateCustomProgress();\n\t\t}\n\n\t\tthis.customState.customIsPlaying = false;\n\t\tthis.updateCustomPlaybackButtons();\n\t}\n\n\tprivate pauseCustomMorse(): void {\n\t\tthis.customState.customIsPlaying = false;\n\t\tthis.audio.stopPlaying();\n\t\tthis.updateCustomPlaybackButtons();\n\t}\n\n\tprivate stopCustom(): void {\n\t\tthis.customState.customIsPlaying = false;\n\t\tthis.audio.stopPlaying();\n\t\tthis.customState.isCustomRunning = false;\n\t\tthis.render();\n\t}\n\n\tprivate updateCustomProgress(): void {\n\t\tconst progressEl = document.getElementById('customProgress');\n\t\tconst progressBar = document.getElementById('customProgressBar');\n\n\t\tif (progressEl && progressBar) {\n\t\t\tconst percent = (this.customState.customCurrentGroupIndex / this.customState.customGroups.length) * 100;\n\t\t\tprogressEl.textContent = `進行: ${this.customState.customCurrentGroupIndex}/${this.customState.customGroups.length} (${percent.toFixed(0)}%)`;\n\t\t\tprogressBar.style.width = `${percent}%`;\n\t\t}\n\n\t\tthis.updateCustomPlaybackButtons();\n\t}\n\n\tprivate updateCustomPlaybackButtons(): void {\n\t\tconst playBtn = document.getElementById('customPlayBtn') as HTMLButtonElement;\n\t\tconst pauseBtn = document.getElementById('customPauseBtn') as HTMLButtonElement;\n\n\t\tif (playBtn && pauseBtn) {\n\t\t\tif (this.customState.customIsPlaying) {\n\t\t\t\tplayBtn.disabled = true;\n\t\t\t\tpauseBtn.disabled = false;\n\t\t\t} else {\n\t\t\t\tplayBtn.disabled = false;\n\t\t\t\tpauseBtn.disabled = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate showCustomResult(): void {\n\t\tconst resultContainer = document.getElementById('customResultContainer');\n\t\tif (!resultContainer) return;\n\n\t\tconst userAnswer = this.customState.customUserInput.replace(/\\s+/g, '');\n\t\tconst correctAnswer = this.customState.customCorrectAnswer.replace(/\\s+/g, '');\n\n\t\tlet correct = 0;\n\t\tconst maxLen = Math.max(userAnswer.length, correctAnswer.length);\n\t\tfor (let i = 0; i < maxLen; i++) {\n\t\t\tif (userAnswer[i] === correctAnswer[i]) correct++;\n\t\t}\n\t\tconst accuracy = maxLen > 0 ? Math.round((correct / maxLen) * 100) : 0;\n\n\t\tresultContainer.innerHTML = `\n\t\t\t<div class=\"result\">\n\t\t\t\t<h2>練習結果</h2>\n\t\t\t\t<div class=\"accuracy\">正答率: ${accuracy}%</div>\n\t\t\t\t<div class=\"comparison\">\n\t\t\t\t\t<div>送信: ${correctAnswer}</div>\n\t\t\t\t\t<div>あなたの入力: ${userAnswer}</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"actions\">\n\t\t\t\t\t<button id=\"retryCustomBtn\" class=\"btn\">もう一度</button>\n\t\t\t\t\t<button id=\"backToCustomMenuBtn\" class=\"btn primary\">戻る</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tdocument.getElementById('retryCustomBtn')?.addEventListener('click', () => {\n\t\t\tthis.customState.isCustomRunning = false;\n\t\t\tthis.render();\n\t\t\tthis.startCustom();\n\t\t});\n\n\t\tdocument.getElementById('backToCustomMenuBtn')?.addEventListener('click', () => {\n\t\t\tthis.customState.isCustomRunning = false;\n\t\t\tthis.render();\n\t\t});\n\t}\n\n\t//! ========== 設定モーダル ==========\n\n\tprivate showSettings(): void {\n\t\t//! 現在の設定を保存（キャンセル時の復元用）。\n\t\tconst savedSettings = { ...this.settings };\n\n\t\tconst modal = document.createElement('div');\n\t\tmodal.className = 'settings-modal active';\n\t\tmodal.innerHTML = `\n\t\t\t<div class=\"settings-content\">\n\t\t\t\t<h2>設定</h2>\n\t\t\t\t<div class=\"settings-grid\">\n\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t<label for=\"characterSpeed\">文字速度 (WPM: 5-40)</label>\n\t\t\t\t\t\t<input type=\"number\" id=\"characterSpeed\" min=\"5\" max=\"40\" value=\"${this.settings.characterSpeed}\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t<label for=\"effectiveSpeed\">実効速度 (WPM: 5-40)</label>\n\t\t\t\t\t\t<input type=\"number\" id=\"effectiveSpeed\" min=\"5\" max=\"40\" value=\"${this.settings.effectiveSpeed}\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t<label for=\"frequency-input\">周波数 (Hz)</label>\n\t\t\t\t\t\t<input type=\"number\" id=\"frequency-input\" min=\"400\" max=\"1200\" value=\"${this.settings.frequency}\" step=\"50\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t<label for=\"volume-range\">音量</label>\n\t\t\t\t\t\t<div class=\"setting-row\">\n\t\t\t\t\t\t\t<input type=\"range\" id=\"volume-range\" min=\"0\" max=\"100\" value=\"${Math.round(this.settings.volume * 100)}\">\n\t\t\t\t\t\t\t<input type=\"number\" id=\"volume-input\" min=\"0\" max=\"100\" value=\"${Math.round(this.settings.volume * 100)}\">\n\t\t\t\t\t\t\t<span>%</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t<label for=\"practiceDuration\">練習時間 (秒: 30-300)</label>\n\t\t\t\t\t\t<input type=\"number\" id=\"practiceDuration\" min=\"30\" max=\"300\" step=\"30\" value=\"${this.settings.practiceDuration}\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t<label for=\"groupSize\">グループサイズ (文字: 3-10)</label>\n\t\t\t\t\t\t<input type=\"number\" id=\"groupSize\" min=\"3\" max=\"10\" value=\"${this.settings.groupSize}\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"showInput\" ${this.settings.showInput ? 'checked' : ''}>\n\t\t\t\t\t\t\t入力を表示\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"settings-buttons\">\n\t\t\t\t\t<button id=\"cancel-btn\" class=\"btn btn-secondary\">キャンセル</button>\n\t\t\t\t\t<button id=\"ok-btn\" class=\"btn btn-primary\">OK</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tdocument.body.appendChild(modal);\n\n\t\t//! 音量のレンジと入力欄を連携。\n\t\tconst volumeRange = document.getElementById('volume-range') as HTMLInputElement;\n\t\tconst volumeInput = document.getElementById('volume-input') as HTMLInputElement;\n\n\t\tif (volumeRange && volumeInput) {\n\t\t\tvolumeRange.oninput = () => {\n\t\t\t\tvolumeInput.value = volumeRange.value;\n\t\t\t};\n\t\t\tvolumeInput.oninput = () => {\n\t\t\t\tvolumeRange.value = volumeInput.value;\n\t\t\t};\n\t\t}\n\n\t\t//! 設定を復元する関数。\n\t\tconst restoreSettings = () => {\n\t\t\tthis.settings = { ...savedSettings };\n\t\t\tthis.audio.updateSettings({\n\t\t\t\tfrequency: savedSettings.frequency,\n\t\t\t\tvolume: savedSettings.volume,\n\t\t\t\twpm: savedSettings.characterSpeed,\n\t\t\t\teffectiveWpm: savedSettings.effectiveSpeed\n\t\t\t});\n\t\t};\n\n\t\t//! OK（保存）。\n\t\tdocument.getElementById('ok-btn')?.addEventListener('click', () => {\n\t\t\tconst charSpeed = document.getElementById('characterSpeed') as HTMLInputElement;\n\t\t\tconst effSpeed = document.getElementById('effectiveSpeed') as HTMLInputElement;\n\t\t\tconst frequency = document.getElementById('frequency-input') as HTMLInputElement;\n\t\t\tconst duration = document.getElementById('practiceDuration') as HTMLInputElement;\n\t\t\tconst groupSize = document.getElementById('groupSize') as HTMLInputElement;\n\t\t\tconst showInput = document.getElementById('showInput') as HTMLInputElement;\n\n\t\t\tconst charSpeedValue = parseInt(charSpeed.value, 10);\n\t\t\tlet effSpeedValue = parseInt(effSpeed.value, 10);\n\n\t\t\t//! 実効速度は文字速度を上限とする。\n\t\t\tif (effSpeedValue > charSpeedValue) {\n\t\t\t\teffSpeedValue = charSpeedValue;\n\t\t\t\teffSpeed.value = charSpeedValue.toString();\n\t\t\t}\n\n\t\t\tthis.settings.characterSpeed = charSpeedValue;\n\t\t\tthis.settings.effectiveSpeed = effSpeedValue;\n\t\t\tthis.settings.frequency = parseInt(frequency.value, 10);\n\t\t\tthis.settings.volume = parseInt(volumeInput.value, 10) / 100;\n\t\t\tthis.settings.practiceDuration = parseInt(duration.value, 10);\n\t\t\tthis.settings.groupSize = parseInt(groupSize.value, 10);\n\t\t\tthis.settings.showInput = showInput.checked;\n\n\t\t\tthis.saveSettings();\n\n\t\t\t//! AudioGeneratorを更新。\n\t\t\tthis.audio.updateSettings({\n\t\t\t\tfrequency: this.settings.frequency,\n\t\t\t\tvolume: this.settings.volume,\n\t\t\t\twpm: this.settings.characterSpeed,\n\t\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t\t});\n\n\t\t\tmodal.remove();\n\n\t\t\t//! 練習中の場合、表示を更新。\n\t\t\tif (this.state.groups.length > 0) {\n\t\t\t\tthis.renderPractice();\n\t\t\t}\n\t\t});\n\n\t\t//! キャンセル。\n\t\tdocument.getElementById('cancel-btn')?.addEventListener('click', () => {\n\t\t\trestoreSettings();\n\t\t\tmodal.remove();\n\t\t});\n\n\t\t//! モーダル外クリックで閉じる（キャンセル扱い）。\n\t\tmodal.addEventListener('click', (e) => {\n\t\t\tif (e.target === modal) {\n\t\t\t\trestoreSettings();\n\t\t\t\tmodal.remove();\n\t\t\t}\n\t\t});\n\t}\n\n\t//! ========== レンダリング ==========\n\n\trender(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"settings-modal\" id=\"settings-modal\"></div>\n\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<button class=\"back-btn\" id=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t<h1>コッホ法トレーニング</h1>\n\t\t\t\t\t<button class=\"settings-btn\" id=\"settings-btn\" title=\"設定\">⚙</button>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"tabs\">\n\t\t\t\t\t<button class=\"tab-button ${this.viewMode === 'learning' ? 'active' : ''}\" data-tab=\"learning\">基本学習</button>\n\t\t\t\t\t<button class=\"tab-button ${this.viewMode === 'custom' ? 'active' : ''}\" data-tab=\"custom\">任意文字列練習</button>\n\t\t\t\t</div>\n\n\t\t\t\t${this.renderModeContent()}\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachEventListeners();\n\t}\n\n\tprivate renderModeContent(): string {\n\t\tswitch (this.viewMode) {\n\t\t\tcase 'learning':\n\t\t\t\treturn this.renderLearningMode();\n\t\t\tcase 'custom':\n\t\t\t\treturn this.renderCustomMode();\n\t\t\tdefault:\n\t\t\t\treturn this.renderLearningMode();\n\t\t}\n\t}\n\n\tprivate renderLearningMode(): string {\n\t\tconst chars = KochTrainer.getCharsForLesson(this.state.currentLesson);\n\t\tconst lessonList = KOCH_SEQUENCE.slice(0, 40).map((_, index) => {\n\t\t\tconst lessonNum = index + 1;\n\t\t\tconst lessonChars = KochTrainer.getCharsForLesson(lessonNum);\n\t\t\tconst isCurrent = lessonNum === this.state.currentLesson;\n\t\t\tconst isPassed = lessonNum < this.state.currentLesson;\n\t\t\treturn `\n\t\t\t\t<div class=\"lesson-item ${isCurrent ? 'current' : ''} ${isPassed ? 'passed' : ''}\" data-lesson=\"${lessonNum}\">\n\t\t\t\t\t<div class=\"lesson-num\">L${lessonNum}</div>\n\t\t\t\t\t<div class=\"lesson-chars\">${lessonChars.join('')}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}).join('');\n\n\t\treturn `\n\t\t\t<div class=\"flashcard-container\">\n\t\t\t\t<div class=\"lesson-info\">\n\t\t\t\t\t<h2>レッスン ${this.state.currentLesson} / 40</h2>\n\t\t\t\t\t<div class=\"chars\">学習文字: ${chars.join('')}</div>\n\t\t\t\t\t<button id=\"startBtn\" class=\"btn btn-primary\">練習開始</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"practiceContainer\"></div>\n\t\t\t\t<div id=\"resultContainer\"></div>\n\n\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t<h3>使い方</h3>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>「練習開始」をクリックしてモールス信号を聞く</li>\n\t\t\t\t\t\t<li>聞こえた文字を入力</li>\n\t\t\t\t\t\t<li>90%以上の正答率で次のレッスンへ</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"lesson-list-section\">\n\t\t\t\t\t<h3>レッスン一覧</h3>\n\t\t\t\t\t<div class=\"lesson-list\">\n\t\t\t\t\t\t${lessonList}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tprivate renderCustomMode(): string {\n\t\tif (!this.customState.isCustomRunning) {\n\t\t\t//! 文字選択画面。\n\t\t\tconst charButtons = KOCH_SEQUENCE.map(char => `\n\t\t\t\t<button class=\"char-select-btn ${this.customState.selectedChars.has(char) ? 'selected' : ''}\" data-char=\"${char}\">\n\t\t\t\t\t${char}\n\t\t\t\t</button>\n\t\t\t`).join('');\n\n\t\t\treturn `\n\t\t\t\t<div class=\"flashcard-container\">\n\t\t\t\t\t<div class=\"lesson-info\">\n\t\t\t\t\t\t<h2>任意文字列練習モード</h2>\n\t\t\t\t\t\t<p>練習したい文字を選択してください（最低2文字）</p>\n\t\t\t\t\t\t<div class=\"char-selection\">\n\t\t\t\t\t\t\t${charButtons}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button id=\"startCustomBtn\" class=\"btn btn-primary\" ${this.customState.selectedChars.size < 2 ? 'disabled' : ''}>練習開始</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t\t<h3>使い方</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>練習したい文字をクリックして選択</li>\n\t\t\t\t\t\t\t<li>2文字以上選択すると練習開始可能</li>\n\t\t\t\t\t\t\t<li>選択した文字のみでランダムな練習問題が生成されます</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t} else {\n\t\t\t//! 練習実行画面。\n\t\t\treturn `\n\t\t\t\t<div class=\"flashcard-container\">\n\t\t\t\t\t<div id=\"customPracticeContainer\"></div>\n\t\t\t\t\t<div id=\"customResultContainer\"></div>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\t}\n\n\tprivate renderPractice(): void {\n\t\tconst practiceContainer = document.getElementById('practiceContainer');\n\t\tif (!practiceContainer) return;\n\n\t\tconst chars = KochTrainer.getCharsForLesson(this.state.currentLesson);\n\n\t\tpracticeContainer.innerHTML = `\n\t\t\t<div class=\"practice-area\">\n\t\t\t\t<div class=\"progress-section\">\n\t\t\t\t\t<div class=\"progress-bar-container\">\n\t\t\t\t\t\t<div id=\"progressBar\" class=\"progress-bar\" style=\"width: 0%\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"lessonProgress\" class=\"progress-text\">準備完了 - 再生ボタンを押してください</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"playback-controls\">\n\t\t\t\t\t<button id=\"playBtn\" class=\"control-btn\" title=\"再生\">\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M8 5v14l11-7z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"pauseBtn\" class=\"control-btn\" title=\"一時停止\" disabled>\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M6 4h4v16H6V4zm8 0h4v16h-4V4z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"stopBtn\" class=\"control-btn\" title=\"停止\">\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<rect x=\"6\" y=\"6\" width=\"12\" height=\"12\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<textarea id=\"userInput\" class=\"input-area\" placeholder=\"聞こえた文字を入力...\" ${this.settings.showInput ? '' : 'style=\"opacity: 0.3; pointer-events: none;\"'}></textarea>\n\t\t\t\t${this.renderKeyboard(chars)}\n\t\t\t</div>\n\t\t`;\n\n\t\tconst inputEl = document.getElementById('userInput') as HTMLTextAreaElement;\n\t\tif (inputEl) {\n\t\t\tinputEl.addEventListener('input', (e) => {\n\t\t\t\tthis.state.userInput = (e.target as HTMLTextAreaElement).value.toUpperCase();\n\t\t\t});\n\t\t}\n\n\t\tdocument.getElementById('playBtn')?.addEventListener('click', () => {\n\t\t\tthis.playMorse();\n\t\t});\n\n\t\tdocument.getElementById('pauseBtn')?.addEventListener('click', () => {\n\t\t\tthis.pauseMorse();\n\t\t});\n\n\t\tdocument.getElementById('stopBtn')?.addEventListener('click', () => {\n\t\t\tthis.stopLesson();\n\t\t});\n\n\t\t//! キーボードボタンのイベント設定。\n\t\tthis.setupKeyboardEvents(chars);\n\t\tthis.updatePlaybackButtons();\n\t}\n\n\tprivate renderCustomPractice(): void {\n\t\tconst container = document.getElementById('customPracticeContainer');\n\t\tif (!container) return;\n\n\t\tcontainer.innerHTML = `\n\t\t\t<div class=\"practice-area\">\n\t\t\t\t<div class=\"progress-section\">\n\t\t\t\t\t<div class=\"progress-bar-container\">\n\t\t\t\t\t\t<div id=\"customProgressBar\" class=\"progress-bar\" style=\"width: 0%\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"customProgress\" class=\"progress-text\">準備完了 - 再生ボタンを押してください</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"playback-controls\">\n\t\t\t\t\t<button id=\"customPlayBtn\" class=\"control-btn\" title=\"再生\">\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M8 5v14l11-7z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"customPauseBtn\" class=\"control-btn\" title=\"一時停止\" disabled>\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M6 4h4v16H6V4zm8 0h4v16h-4V4z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"customStopBtn\" class=\"control-btn\" title=\"停止\">\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<rect x=\"6\" y=\"6\" width=\"12\" height=\"12\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t${this.settings.showInput ? `\n\t\t\t\t\t<textarea id=\"customInputArea\" class=\"input-area\" placeholder=\"聞こえた文字を入力してください...\"></textarea>\n\t\t\t\t` : ''}\n\n\t\t\t\t<button id=\"customEndBtn\" class=\"btn btn-primary\">結果を見る</button>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.setupCustomControls();\n\t}\n\n\tprivate renderKeyboard(availableChars: string[]): string {\n\t\tconst groups: string[][] = [];\n\n\t\t//! KOCH_SEQUENCEをgroupSizeごとに分割。\n\t\tfor (let i = 0; i < KOCH_SEQUENCE.length; i += this.settings.groupSize) {\n\t\t\tgroups.push(KOCH_SEQUENCE.slice(i, i + this.settings.groupSize));\n\t\t}\n\n\t\treturn `\n\t\t\t<div class=\"keyboard\">\n\t\t\t\t<div class=\"keyboard-header\">\n\t\t\t\t\t<small>グループベースキーボード（学習済み文字のみ有効）</small>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"keyboard-controls\">\n\t\t\t\t\t<button id=\"spaceBtn\" class=\"key-btn special\">スペース</button>\n\t\t\t\t\t<button id=\"backspaceBtn\" class=\"key-btn special\">1字削除</button>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"keyboard-groups-wrapper\">\n\t\t\t\t\t<div class=\"keyboard-groups\">\n\t\t\t\t\t\t${groups.map((group, groupIndex) => `\n\t\t\t\t\t\t\t<div class=\"keyboard-group\">\n\t\t\t\t\t\t\t\t<div class=\"group-label\">G${groupIndex + 1}</div>\n\t\t\t\t\t\t\t\t<div class=\"group-keys\">\n\t\t\t\t\t\t\t\t\t${group.map(char => {\n\t\t\t\t\t\t\t\t\t\tconst isLearned = availableChars.includes(char);\n\t\t\t\t\t\t\t\t\t\treturn `\n\t\t\t\t\t\t\t\t\t\t\t<button class=\"key-btn ${isLearned ? '' : 'disabled'}\"\n\t\t\t\t\t\t\t\t\t\t\t        data-char=\"${char}\"\n\t\t\t\t\t\t\t\t\t\t\t        ${isLearned ? '' : 'disabled'}>\n\t\t\t\t\t\t\t\t\t\t\t\t${char}\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t`;\n\t\t\t\t\t\t\t\t\t}).join('')}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t`).join('')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tprivate setupKeyboardEvents(availableChars: string[]): void {\n\t\tconst inputEl = document.getElementById('userInput') as HTMLTextAreaElement;\n\t\tif (!inputEl) return;\n\n\t\t//! 文字キー。\n\t\tdocument.querySelectorAll('.key-btn:not(.special)').forEach(btn => {\n\t\t\tbtn.addEventListener('click', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tconst char = (e.target as HTMLButtonElement).getAttribute('data-char');\n\t\t\t\tif (char && availableChars.includes(char)) {\n\t\t\t\t\tinputEl.value += char;\n\t\t\t\t\tthis.state.userInput = inputEl.value.toUpperCase();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! スペースキー。\n\t\tdocument.getElementById('spaceBtn')?.addEventListener('click', (e) => {\n\t\t\te.preventDefault();\n\t\t\tinputEl.value += ' ';\n\t\t\tthis.state.userInput = inputEl.value.toUpperCase();\n\t\t});\n\n\t\t//! バックスペースキー。\n\t\tdocument.getElementById('backspaceBtn')?.addEventListener('click', (e) => {\n\t\t\te.preventDefault();\n\t\t\tinputEl.value = inputEl.value.slice(0, -1);\n\t\t\tthis.state.userInput = inputEl.value.toUpperCase();\n\t\t});\n\t}\n\n\tprivate setupCustomControls(): void {\n\t\t//! 入力欄のイベントリスナー。\n\t\tconst inputEl = document.getElementById('customInputArea') as HTMLTextAreaElement;\n\t\tif (inputEl) {\n\t\t\tinputEl.addEventListener('input', (e) => {\n\t\t\t\tthis.customState.customUserInput = (e.target as HTMLTextAreaElement).value.toUpperCase();\n\t\t\t});\n\t\t}\n\n\t\tdocument.getElementById('customPlayBtn')?.addEventListener('click', () => {\n\t\t\tthis.playCustomMorse();\n\t\t});\n\n\t\tdocument.getElementById('customPauseBtn')?.addEventListener('click', () => {\n\t\t\tthis.pauseCustomMorse();\n\t\t});\n\n\t\tdocument.getElementById('customStopBtn')?.addEventListener('click', () => {\n\t\t\tthis.stopCustom();\n\t\t});\n\n\t\tdocument.getElementById('customEndBtn')?.addEventListener('click', () => {\n\t\t\tthis.showCustomResult();\n\t\t});\n\n\t\tthis.updateCustomPlaybackButtons();\n\t}\n\n\tprivate attachEventListeners(): void {\n\t\t//! 戻るボタン。\n\t\tdocument.getElementById('back-btn')?.addEventListener('click', () => {\n\t\t\twindow.location.hash = '#menu';\n\t\t});\n\n\t\t//! 設定ボタン。\n\t\tdocument.getElementById('settings-btn')?.addEventListener('click', () => {\n\t\t\tthis.showSettings();\n\t\t});\n\n\t\t//! タブボタン。\n\t\tdocument.querySelectorAll('.tab-button').forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst tab = btn.getAttribute('data-tab') as ViewMode;\n\t\t\t\tif (tab) {\n\t\t\t\t\tthis.viewMode = tab;\n\t\t\t\t\tthis.saveViewMode();\n\t\t\t\t\tthis.render();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! モード別のイベントリスナーを設定。\n\t\tthis.setupModeEventListeners();\n\t}\n\n\tprivate setupModeEventListeners(): void {\n\t\tif (this.viewMode === 'learning') {\n\t\t\tdocument.getElementById('startBtn')?.addEventListener('click', () => {\n\t\t\t\tthis.startLesson();\n\t\t\t});\n\n\t\t\t//! レッスンアイテムのクリックイベント。\n\t\t\tdocument.querySelectorAll('.lesson-item').forEach(item => {\n\t\t\t\titem.addEventListener('click', () => {\n\t\t\t\t\tconst lessonNum = parseInt(item.getAttribute('data-lesson') || '1', 10);\n\t\t\t\t\tthis.state.currentLesson = lessonNum;\n\t\t\t\t\tthis.saveProgress();\n\t\t\t\t\tthis.render();\n\t\t\t\t\twindow.scrollTo({ top: 0, behavior: 'smooth' });\n\t\t\t\t});\n\t\t\t});\n\t\t} else if (this.viewMode === 'custom') {\n\t\t\tif (!this.customState.isCustomRunning) {\n\t\t\t\tdocument.getElementById('startCustomBtn')?.addEventListener('click', () => {\n\t\t\t\t\tthis.startCustom();\n\t\t\t\t});\n\n\t\t\t\t//! 文字選択ボタン。\n\t\t\t\tdocument.querySelectorAll('.char-select-btn').forEach(btn => {\n\t\t\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\t\t\tconst char = btn.getAttribute('data-char');\n\t\t\t\t\t\tif (char) {\n\t\t\t\t\t\t\tif (this.customState.selectedChars.has(char)) {\n\t\t\t\t\t\t\t\tthis.customState.selectedChars.delete(char);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.customState.selectedChars.add(char);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.saveSelectedChars();\n\t\t\t\t\t\t\tthis.render();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy(): void {\n\t\t//! 音声を停止。\n\t\tthis.audio.stopPlaying();\n\t}\n}\n","/**\n * ダウンロードヘルパー関数\n * Blobをファイルとしてダウンロードさせるユーティリティ\n */\n\n/**\n * Blobをファイルとしてダウンロードする\n *\n * @param blob - ダウンロードするBlob\n * @param filename - ファイル名\n */\nexport function downloadBlob(blob: Blob, filename: string): void {\n\tconst url = URL.createObjectURL(blob);\n\tconst a = document.createElement('a');\n\ta.href = url;\n\ta.download = filename;\n\tdocument.body.appendChild(a);\n\ta.click();\n\tdocument.body.removeChild(a);\n\tURL.revokeObjectURL(url);\n}\n\n/**\n * ファイル名をサニタイズする（安全なファイル名に変換）\n *\n * @param filename - 元のファイル名\n * @returns サニタイズされたファイル名\n */\nexport function sanitizeFilename(filename: string): string {\n\treturn filename.replace(/[^a-zA-Z0-9_-]/g, '_');\n}\n","/**\n * 聞き取り練習ビュー\n */\n\nimport type { View } from '../../router';\nimport {\n\tListeningTrainer,\n\tAudioGenerator,\n\tMorseCodec,\n\ttype ListeningTemplate,\n\ttype TemplateCategory\n} from 'morse-engine';\nimport { downloadBlob, sanitizeFilename } from '../../utils/download-helper';\n\ninterface ListeningSettings {\n\tcharacterSpeed: number;\n\teffectiveSpeed: number;\n\tfrequency: number;\n\tvolume: number;\n}\n\nconst DEFAULT_SETTINGS: ListeningSettings = {\n\tcharacterSpeed: 20,\n\teffectiveSpeed: 15,\n\tfrequency: 700,\n\tvolume: 0.7\n};\n\ninterface State {\n\tcurrentCategory: TemplateCategory | 'custom';\n\tselectedTemplate: ListeningTemplate | null;\n\tisPlaying: boolean;\n\tuserInput: string;\n\tshowResult: boolean;\n\tshowAnswer: boolean;\n\tshowDialogFormat: boolean;\n}\n\n/**\n * 聞き取り練習ビュークラス\n */\nexport class ListeningView implements View {\n\tprivate audio: AudioGenerator;\n\tprivate settings: ListeningSettings = { ...DEFAULT_SETTINGS };\n\n\tprivate state: State = {\n\t\tcurrentCategory: 'qso',\n\t\tselectedTemplate: null,\n\t\tisPlaying: false,\n\t\tuserInput: '',\n\t\tshowResult: false,\n\t\tshowAnswer: false,\n\t\tshowDialogFormat: false\n\t};\n\n\tprivate customTemplates: ListeningTemplate[] = [];\n\n\tconstructor() {\n\t\t//! 設定を読み込む。\n\t\tthis.loadSettings();\n\t\tthis.loadCategory();\n\t\tthis.loadCustomTemplates();\n\n\t\t//! AudioGeneratorを初期化。\n\t\tthis.audio = new AudioGenerator({\n\t\t\tfrequency: this.settings.frequency,\n\t\t\tvolume: this.settings.volume,\n\t\t\twpm: this.settings.characterSpeed,\n\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t});\n\t}\n\n\t//! ========== 設定管理 ==========\n\n\tprivate loadSettings(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.listening.settings');\n\t\t\tif (saved) {\n\t\t\t\tthis.settings = { ...DEFAULT_SETTINGS, ...JSON.parse(saved) };\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load settings:', error);\n\t\t}\n\t}\n\n\tprivate saveSettings(): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem('v10.listening.settings', JSON.stringify(this.settings));\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save settings:', error);\n\t\t}\n\t}\n\n\tprivate loadCategory(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.listening.category') as TemplateCategory | 'custom' | null;\n\t\t\tif (saved && ['qso', 'text100', 'text200', 'text300', 'custom'].includes(saved)) {\n\t\t\t\tthis.state.currentCategory = saved;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load category:', error);\n\t\t}\n\t}\n\n\tprivate saveCategory(): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem('v10.listening.category', this.state.currentCategory);\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save category:', error);\n\t\t}\n\t}\n\n\tprivate loadCustomTemplates(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.listening.customTemplates');\n\t\t\tif (saved) {\n\t\t\t\tthis.customTemplates = JSON.parse(saved);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load custom templates:', error);\n\t\t}\n\t}\n\n\tprivate saveCustomTemplates(): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem('v10.listening.customTemplates', JSON.stringify(this.customTemplates));\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save custom templates:', error);\n\t\t}\n\t}\n\n\t//! ========== テンプレート管理 ==========\n\n\tprivate getTemplates(): ListeningTemplate[] {\n\t\tif (this.state.currentCategory === 'custom') {\n\t\t\t//! ランダムQSO生成ボタンを追加。\n\t\t\tconst randomButton: ListeningTemplate = {\n\t\t\t\tid: 'qso-random-generate',\n\t\t\t\tcategory: 'qso',\n\t\t\t\ttitle: 'ランダムQSO生成',\n\t\t\t\tcontent: ''\n\t\t\t};\n\t\t\treturn [randomButton, ...this.customTemplates];\n\t\t} else {\n\t\t\tconst builtin = ListeningTrainer.getBuiltinTemplates(this.state.currentCategory);\n\t\t\t//! QSOカテゴリーにはランダムQSO生成ボタンを追加。\n\t\t\tif (this.state.currentCategory === 'qso') {\n\t\t\t\tconst randomButton: ListeningTemplate = {\n\t\t\t\t\tid: 'qso-random-generate',\n\t\t\t\t\tcategory: 'qso',\n\t\t\t\t\ttitle: 'ランダムQSO生成',\n\t\t\t\t\tcontent: ''\n\t\t\t\t};\n\t\t\t\treturn [randomButton, ...builtin];\n\t\t\t}\n\t\t\treturn builtin;\n\t\t}\n\t}\n\n\t//! ========== 再生制御 ==========\n\n\tprivate async playMorse(): Promise<void> {\n\t\tif (!this.state.selectedTemplate || this.state.isPlaying) return;\n\n\t\tthis.state.isPlaying = true;\n\t\tthis.updatePlaybackButtons();\n\n\t\t//! モールス信号を再生。\n\t\tconst morse = MorseCodec.textToMorse(this.state.selectedTemplate.content);\n\t\tawait this.audio.playMorseString(morse);\n\n\t\tthis.state.isPlaying = false;\n\t\tthis.updatePlaybackButtons();\n\t}\n\n\tprivate pauseMorse(): void {\n\t\tthis.audio.stopPlaying();\n\t\tthis.state.isPlaying = false;\n\t\tthis.updatePlaybackButtons();\n\t}\n\n\tprivate stopMorse(): void {\n\t\tthis.audio.stopPlaying();\n\t\tthis.state.isPlaying = false;\n\t\tthis.state.userInput = '';\n\t\tthis.state.showResult = false;\n\t\tthis.state.showAnswer = false;\n\t\tthis.renderPracticeArea();\n\t}\n\n\n\tprivate updatePlaybackButtons(): void {\n\t\tconst playBtn = document.getElementById('playBtn') as HTMLButtonElement;\n\t\tconst pauseBtn = document.getElementById('pauseBtn') as HTMLButtonElement;\n\n\t\tif (playBtn) playBtn.disabled = this.state.isPlaying;\n\t\tif (pauseBtn) pauseBtn.disabled = !this.state.isPlaying;\n\t}\n\n\t//! ========== 採点と結果表示 ==========\n\n\tprivate checkAnswer(): void {\n\t\tif (!this.state.selectedTemplate) return;\n\n\t\tthis.state.showResult = true;\n\t\tthis.state.showAnswer = true;\n\t\tthis.renderPracticeArea();\n\t}\n\n\tprivate toggleAnswer(): void {\n\t\tthis.state.showAnswer = !this.state.showAnswer;\n\t\tthis.renderPracticeArea();\n\t}\n\n\tprivate toggleDialogFormat(): void {\n\t\tthis.state.showDialogFormat = !this.state.showDialogFormat;\n\t\tthis.renderAnswer();\n\t}\n\n\t//! ========== カスタムテンプレート管理 ==========\n\n\tprivate showCustomTemplateDialog(template?: ListeningTemplate): void {\n\t\tconst isEdit = !!template;\n\t\tconst title = isEdit ? template.title : '';\n\t\tconst content = isEdit ? template.content : '';\n\n\t\tconst modal = document.createElement('div');\n\t\tmodal.className = 'modal-overlay';\n\t\tmodal.innerHTML = `\n\t\t\t<div class=\"modal\">\n\t\t\t\t<h2>${isEdit ? 'テンプレート編集' : 'テンプレート新規作成'}</h2>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label for=\"templateTitle\">タイトル:</label>\n\t\t\t\t\t<input type=\"text\" id=\"templateTitle\" value=\"${title}\" placeholder=\"タイトルを入力\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label for=\"templateContent\">内容:</label>\n\t\t\t\t\t<textarea id=\"templateContent\" placeholder=\"モールス信号に変換するテキストを入力\">${content}</textarea>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"modal-actions\">\n\t\t\t\t\t<button id=\"saveTemplateBtn\" class=\"btn btn-primary\">保存</button>\n\t\t\t\t\t<button id=\"cancelTemplateBtn\" class=\"btn\">キャンセル</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t\tdocument.body.appendChild(modal);\n\n\t\t//! 保存ボタン。\n\t\tdocument.getElementById('saveTemplateBtn')?.addEventListener('click', () => {\n\t\t\tconst titleInput = document.getElementById('templateTitle') as HTMLInputElement;\n\t\t\tconst contentInput = document.getElementById('templateContent') as HTMLTextAreaElement;\n\n\t\t\tif (!titleInput.value.trim() || !contentInput.value.trim()) {\n\t\t\t\talert('タイトルと内容を入力してください');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isEdit && template) {\n\t\t\t\t//! 既存テンプレートを更新。\n\t\t\t\ttemplate.title = titleInput.value.trim();\n\t\t\t\ttemplate.content = contentInput.value.trim().toUpperCase();\n\t\t\t} else {\n\t\t\t\t//! 新規テンプレートを追加。\n\t\t\t\tconst newTemplate: ListeningTemplate = {\n\t\t\t\t\tid: `custom-${Date.now()}`,\n\t\t\t\t\tcategory: 'qso',\n\t\t\t\t\ttitle: titleInput.value.trim(),\n\t\t\t\t\tcontent: contentInput.value.trim().toUpperCase()\n\t\t\t\t};\n\t\t\t\tthis.customTemplates.push(newTemplate);\n\t\t\t}\n\n\t\t\tthis.saveCustomTemplates();\n\t\t\tmodal.remove();\n\t\t\tthis.render();\n\t\t});\n\n\t\t//! キャンセルボタン。\n\t\tdocument.getElementById('cancelTemplateBtn')?.addEventListener('click', () => {\n\t\t\tmodal.remove();\n\t\t});\n\n\t\t//! モーダル外クリックで閉じる。\n\t\tmodal.addEventListener('click', (e) => {\n\t\t\tif (e.target === modal) {\n\t\t\t\tmodal.remove();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate deleteCustomTemplate(id: string): void {\n\t\tif (confirm('この定型文を削除しますか?')) {\n\t\t\tthis.customTemplates = this.customTemplates.filter(t => t.id !== id);\n\t\t\tthis.saveCustomTemplates();\n\t\t\tthis.render();\n\t\t}\n\t}\n\n\t//! ========== 設定モーダル ==========\n\n\tprivate showSettings(): void {\n\t\tconst modalHTML = `\n\t\t\t<div class=\"modal\" id=\"settings-modal\">\n\t\t\t\t<div class=\"modal-content\">\n\t\t\t\t\t<div class=\"modal-header\">\n\t\t\t\t\t\t<h2>設定</h2>\n\t\t\t\t\t\t<button id=\"closeSettings\" class=\"close-btn\">×</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"modal-body\">\n\t\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t\t<label>文字速度 (WPM)</label>\n\t\t\t\t\t\t\t<input type=\"number\" id=\"characterSpeed\" min=\"5\" max=\"40\" step=\"1\" value=\"${this.settings.characterSpeed}\">\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t\t<label>実効速度 (WPM)</label>\n\t\t\t\t\t\t\t<input type=\"number\" id=\"effectiveSpeed\" min=\"5\" max=\"40\" step=\"1\" value=\"${this.settings.effectiveSpeed}\">\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t\t<label>周波数 (Hz)</label>\n\t\t\t\t\t\t\t<input type=\"number\" id=\"frequency\" min=\"400\" max=\"1000\" step=\"10\" value=\"${this.settings.frequency}\">\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t\t<label>音量</label>\n\t\t\t\t\t\t\t<input type=\"range\" id=\"volumeRange\" min=\"0\" max=\"100\" step=\"5\" value=\"${this.settings.volume * 100}\">\n\t\t\t\t\t\t\t<input type=\"number\" id=\"volumeInput\" min=\"0\" max=\"100\" step=\"5\" value=\"${Math.round(this.settings.volume * 100)}\">\n\t\t\t\t\t\t\t<span>%</span>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t\t<span>テスト再生</span>\n\t\t\t\t\t\t\t<button id=\"test-morse-btn\" class=\"test-button\">再生</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"modal-footer\">\n\t\t\t\t\t\t<button id=\"cancel-btn\" class=\"btn\">キャンセル</button>\n\t\t\t\t\t\t<button id=\"save-btn\" class=\"btn primary\">OK</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t\tdocument.body.insertAdjacentHTML('beforeend', modalHTML);\n\n\t\t//! 現在の設定を保存（キャンセル時の復元用）。\n\t\tconst savedSettings = { ...this.settings };\n\n\t\tconst characterSpeed = document.getElementById('characterSpeed') as HTMLInputElement;\n\t\tconst effectiveSpeed = document.getElementById('effectiveSpeed') as HTMLInputElement;\n\t\tconst frequency = document.getElementById('frequency') as HTMLInputElement;\n\t\tconst volumeRange = document.getElementById('volumeRange') as HTMLInputElement;\n\t\tconst volumeInput = document.getElementById('volumeInput') as HTMLInputElement;\n\n\t\t//! 音量スライダーと数値入力の同期。\n\t\tvolumeRange?.addEventListener('input', () => {\n\t\t\tvolumeInput.value = volumeRange.value;\n\t\t});\n\n\t\tvolumeInput?.addEventListener('input', () => {\n\t\t\tvolumeRange.value = volumeInput.value;\n\t\t});\n\n\t\t//! テスト再生ボタン。\n\t\tdocument.getElementById('test-morse-btn')?.addEventListener('click', async () => {\n\t\t\t//! 現在の設定値で一時的にAudioGeneratorを更新。\n\t\t\tthis.audio.updateSettings({\n\t\t\t\tfrequency: parseInt(frequency.value),\n\t\t\t\tvolume: parseInt(volumeInput.value) / 100,\n\t\t\t\twpm: parseInt(characterSpeed.value),\n\t\t\t\teffectiveWpm: parseInt(effectiveSpeed.value)\n\t\t\t});\n\n\t\t\t//! CQを再生。\n\t\t\tconst morse = MorseCodec.textToMorse('CQ');\n\t\t\tawait this.audio.playMorseString(morse);\n\t\t});\n\n\t\t//! 設定を復元する関数。\n\t\tconst restoreSettings = () => {\n\t\t\tthis.settings = { ...savedSettings };\n\t\t\t//! AudioSystemを元に戻す。\n\t\t\tthis.audio.updateSettings({\n\t\t\t\tfrequency: savedSettings.frequency,\n\t\t\t\tvolume: savedSettings.volume,\n\t\t\t\twpm: savedSettings.characterSpeed,\n\t\t\t\teffectiveWpm: savedSettings.effectiveSpeed\n\t\t\t});\n\t\t};\n\n\t\t//! OK（保存）ボタン。\n\t\tdocument.getElementById('save-btn')?.addEventListener('click', () => {\n\t\t\tconst charSpeedValue = parseInt(characterSpeed.value);\n\t\t\tlet effSpeedValue = parseInt(effectiveSpeed.value);\n\n\t\t\t//! 実効速度は文字速度を上限とする。\n\t\t\tif (effSpeedValue > charSpeedValue) {\n\t\t\t\teffSpeedValue = charSpeedValue;\n\t\t\t}\n\n\t\t\tthis.settings.characterSpeed = charSpeedValue;\n\t\t\tthis.settings.effectiveSpeed = effSpeedValue;\n\t\t\tthis.settings.frequency = parseInt(frequency.value);\n\t\t\tthis.settings.volume = parseInt(volumeInput.value) / 100;\n\n\t\t\tthis.saveSettings();\n\n\t\t\t//! AudioGeneratorを更新。\n\t\t\tthis.audio.updateSettings({\n\t\t\t\tfrequency: this.settings.frequency,\n\t\t\t\tvolume: this.settings.volume,\n\t\t\t\twpm: this.settings.characterSpeed,\n\t\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t\t});\n\n\t\t\tdocument.getElementById('settings-modal')?.remove();\n\t\t});\n\n\t\t//! キャンセルボタン。\n\t\tdocument.getElementById('cancel-btn')?.addEventListener('click', () => {\n\t\t\trestoreSettings();\n\t\t\tdocument.getElementById('settings-modal')?.remove();\n\t\t});\n\n\t\t//! 閉じるボタン (×)。\n\t\tdocument.getElementById('closeSettings')?.addEventListener('click', () => {\n\t\t\trestoreSettings();\n\t\t\tdocument.getElementById('settings-modal')?.remove();\n\t\t});\n\n\t\t//! モーダル外クリックで閉じる（キャンセル扱い）。\n\t\tconst modal = document.getElementById('settings-modal');\n\t\tmodal?.addEventListener('click', (e) => {\n\t\t\tif (e.target === modal) {\n\t\t\t\trestoreSettings();\n\t\t\t\tmodal.remove();\n\t\t\t}\n\t\t});\n\t}\n\n\t//! ========== レンダリング ==========\n\n\trender(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"settings-icon\" id=\"settingsIcon\">\n\t\t\t\t<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<button id=\"backBtn\" class=\"back-btn\">← 戻る</button>\n\t\t\t\t\t<h1>モールス信号聞き取り練習</h1>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"tabs\">\n\t\t\t\t\t${this.renderCategoryTabs()}\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"content-area\">\n\t\t\t\t\t${this.state.selectedTemplate ? this.renderPracticeContent() : this.renderTemplateList()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachEventListeners();\n\t}\n\n\tprivate renderCategoryTabs(): string {\n\t\tconst categories: { id: TemplateCategory | 'custom'; label: string }[] = [\n\t\t\t{ id: 'qso', label: 'ラバースタンプQSO' },\n\t\t\t{ id: 'text100', label: '英文100字' },\n\t\t\t{ id: 'text200', label: '英文200字' },\n\t\t\t{ id: 'text300', label: '英文300字' },\n\t\t\t{ id: 'custom', label: 'ユーザー定義' }\n\t\t];\n\n\t\treturn categories\n\t\t\t.map(\n\t\t\t\tcat => `\n\t\t\t<button class=\"tab-button ${this.state.currentCategory === cat.id ? 'active' : ''}\" data-category=\"${cat.id}\">\n\t\t\t\t${cat.label}\n\t\t\t</button>\n\t\t`\n\t\t\t)\n\t\t\t.join('');\n\t}\n\n\tprivate renderTemplateList(): string {\n\t\tconst templates = this.getTemplates();\n\n\t\tif (templates.length === 0 || (templates.length === 1 && templates[0].id === 'qso-random-generate')) {\n\t\t\treturn `\n\t\t\t\t<div class=\"empty-state\">\n\t\t\t\t\t<p>定型文がありません</p>\n\t\t\t\t\t${this.state.currentCategory === 'custom' ? '<button id=\"addCustomBtn\" class=\"btn btn-primary\">新規作成</button>' : ''}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\treturn `\n\t\t\t<div class=\"template-list\">\n\t\t\t\t${this.state.currentCategory === 'custom' ? '<button id=\"addCustomBtn\" class=\"btn btn-primary\">新規作成</button>' : ''}\n\t\t\t\t${templates\n\t\t\t\t\t.map(template => {\n\t\t\t\t\t\tconst preview = template.id === 'qso-random-generate'\n\t\t\t\t\t\t\t? 'コールサイン、地名、名前、RSレポート、リグなどがランダムに生成された完全なQSOが作成されます。毎回異なる内容で練習できます。'\n\t\t\t\t\t\t\t: `${template.content.substring(0, 100)}${template.content.length > 100 ? '...' : ''}`;\n\t\t\t\t\t\treturn `\n\t\t\t\t\t<div class=\"template-card\" data-template-id=\"${template.id}\">\n\t\t\t\t\t\t<h3>${template.title}</h3>\n\t\t\t\t\t\t<p class=\"template-preview\">${preview}</p>\n\t\t\t\t\t\t<div class=\"template-actions\">\n\t\t\t\t\t\t\t<button class=\"btn select-btn\" data-template-id=\"${template.id}\">選択</button>\n\t\t\t\t\t\t\t${\n\t\t\t\t\t\t\t\tthis.state.currentCategory === 'custom' && template.id !== 'qso-random-generate'\n\t\t\t\t\t\t\t\t\t? `\n\t\t\t\t\t\t\t\t<button class=\"btn edit-btn\" data-template-id=\"${template.id}\">編集</button>\n\t\t\t\t\t\t\t\t<button class=\"btn delete-btn\" data-template-id=\"${template.id}\">削除</button>\n\t\t\t\t\t\t\t`\n\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t`;\n\t\t\t\t\t})\n\t\t\t\t\t.join('')}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tprivate renderPracticeContent(): string {\n\t\tif (!this.state.selectedTemplate) return '';\n\n\t\treturn `\n\t\t\t<div class=\"practice-area\">\n\t\t\t\t<div class=\"practice-header\">\n\t\t\t\t\t<h2>${this.state.selectedTemplate.title}</h2>\n\t\t\t\t\t<button id=\"backToListBtn\" class=\"btn\">一覧に戻る</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"playback-controls\">\n\t\t\t\t\t<button id=\"playBtn\" class=\"control-btn\" title=\"再生\" ${this.state.isPlaying ? 'disabled' : ''}>\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M8 5v14l11-7z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"pauseBtn\" class=\"control-btn\" title=\"一時停止\" ${!this.state.isPlaying ? 'disabled' : ''}>\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M6 4h4v16H6V4zm8 0h4v16h-4V4z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"stopBtn\" class=\"control-btn\" title=\"停止\">\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<rect x=\"6\" y=\"6\" width=\"12\" height=\"12\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"downloadBtn\" class=\"control-btn\" title=\"WAVファイルとしてダウンロード\">\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"practiceInputArea\"></div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tprivate renderPracticeArea(): void {\n\t\tconst practiceInputArea = document.getElementById('practiceInputArea');\n\t\tif (!practiceInputArea) return;\n\n\t\tpracticeInputArea.innerHTML = `\n\t\t\t<div class=\"input-section\">\n\t\t\t\t<label for=\"userInput\">聞き取った内容を入力してください:</label>\n\t\t\t\t<textarea id=\"userInput\" class=\"input-area\" placeholder=\"聞き取った文字を入力...\">${this.state.userInput}</textarea>\n\t\t\t</div>\n\n\t\t\t<div class=\"action-buttons\">\n\t\t\t\t<button id=\"checkBtn\" class=\"btn btn-primary\">採点</button>\n\t\t\t\t<button id=\"showAnswerBtn\" class=\"btn\">${this.state.showAnswer ? '正解を非表示' : '正解を表示'}</button>\n\t\t\t</div>\n\n\t\t\t${this.state.showAnswer ? '<div id=\"answerArea\"></div>' : ''}\n\t\t\t${this.state.showResult ? '<div id=\"resultArea\"></div>' : ''}\n\t\t`;\n\n\t\t//! ユーザー入力の監視。\n\t\tconst userInput = document.getElementById('userInput') as HTMLTextAreaElement;\n\t\tuserInput?.addEventListener('input', () => {\n\t\t\tthis.state.userInput = userInput.value;\n\t\t});\n\n\t\t//! 採点ボタン。\n\t\tdocument.getElementById('checkBtn')?.addEventListener('click', () => {\n\t\t\tthis.checkAnswer();\n\t\t});\n\n\t\t//! 正解表示ボタン。\n\t\tdocument.getElementById('showAnswerBtn')?.addEventListener('click', () => {\n\t\t\tthis.toggleAnswer();\n\t\t});\n\n\t\t//! 正解と結果を描画。\n\t\tif (this.state.showAnswer) {\n\t\t\tthis.renderAnswer();\n\t\t}\n\t\tif (this.state.showResult) {\n\t\t\tthis.renderResult();\n\t\t}\n\t}\n\n\tprivate renderAnswer(): void {\n\t\tconst answerArea = document.getElementById('answerArea');\n\t\tif (!answerArea || !this.state.selectedTemplate) return;\n\n\t\tconst isQSO = this.state.selectedTemplate.category === 'qso';\n\t\tconst content = this.state.selectedTemplate.content;\n\n\t\t//! 対話形式ボタン（QSOの場合のみ表示）。\n\t\tconst dialogButton = isQSO\n\t\t\t? `<button id=\"toggleDialogBtn\" class=\"btn\" style=\"margin-left: 10px;\">${this.state.showDialogFormat ? '通常表示' : '対話形式で表示'}</button>`\n\t\t\t: '';\n\n\t\t//! 対話形式表示の生成。\n\t\tlet answerContent = '';\n\t\tif (isQSO && this.state.showDialogFormat) {\n\t\t\t//! BTで区切って話者別に表示。\n\t\t\tconst segments = content.split(/\\s+BT\\s+/);\n\t\t\tanswerContent = `\n\t\t\t\t<table class=\"dialog-table\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t${segments.map((segment, index) => {\n\t\t\t\t\t\t\tconst speaker = index % 2 === 0 ? 'A' : 'B';\n\t\t\t\t\t\t\treturn `\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td class=\"speaker-cell\">${speaker}</td>\n\t\t\t\t\t\t\t\t\t<td class=\"content-cell\">${segment.trim()}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t`;\n\t\t\t\t\t\t}).join('')}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t`;\n\t\t} else {\n\t\t\tanswerContent = `<div class=\"answer-text\">${content}</div>`;\n\t\t}\n\n\t\tanswerArea.innerHTML = `\n\t\t\t<div class=\"answer-area\">\n\t\t\t\t<h3 style=\"display: inline-block;\">正解</h3>\n\t\t\t\t${dialogButton}\n\t\t\t\t${answerContent}\n\t\t\t</div>\n\t\t`;\n\n\t\t//! 対話形式ボタン。\n\t\tdocument.getElementById('toggleDialogBtn')?.addEventListener('click', () => {\n\t\t\tthis.toggleDialogFormat();\n\t\t});\n\t}\n\n\tprivate renderResult(): void {\n\t\tconst resultArea = document.getElementById('resultArea');\n\t\tif (!resultArea || !this.state.selectedTemplate) return;\n\n\t\tconst accuracy = ListeningTrainer.calculateAccuracy(\n\t\t\tthis.state.selectedTemplate.content,\n\t\t\tthis.state.userInput\n\t\t);\n\n\t\tresultArea.innerHTML = `\n\t\t\t<div class=\"result-area\">\n\t\t\t\t<h3>結果</h3>\n\t\t\t\t<div class=\"accuracy\">正答率: ${accuracy}%</div>\n\t\t\t\t<div class=\"comparison\">\n\t\t\t\t\t<div class=\"comparison-row\">\n\t\t\t\t\t\t<strong>正解:</strong>\n\t\t\t\t\t\t<div class=\"comparison-text\">${this.state.selectedTemplate.content}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"comparison-row\">\n\t\t\t\t\t\t<strong>入力:</strong>\n\t\t\t\t\t\t<div class=\"comparison-text\">${this.state.userInput || '（未入力）'}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\t//! ========== イベントリスナー ==========\n\n\tprivate attachEventListeners(): void {\n\t\t//! 戻るボタン。\n\t\tdocument.getElementById('backBtn')?.addEventListener('click', () => {\n\t\t\twindow.location.hash = '#menu';\n\t\t});\n\n\t\t//! 設定アイコン。\n\t\tdocument.getElementById('settingsIcon')?.addEventListener('click', () => {\n\t\t\tthis.showSettings();\n\t\t});\n\n\t\t//! カテゴリータブ。\n\t\tdocument.querySelectorAll('.tab-button').forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst category = btn.getAttribute('data-category') as TemplateCategory | 'custom';\n\t\t\t\tif (category) {\n\t\t\t\t\tthis.state.currentCategory = category;\n\t\t\t\t\tthis.state.selectedTemplate = null;\n\t\t\t\t\tthis.state.showResult = false;\n\t\t\t\t\tthis.state.showAnswer = false;\n\t\t\t\t\tthis.state.showDialogFormat = false;\n\t\t\t\t\tthis.state.userInput = '';\n\t\t\t\t\tthis.saveCategory();\n\t\t\t\t\tthis.render();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! 定型文選択ボタン。\n\t\tdocument.querySelectorAll('.select-btn').forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst id = btn.getAttribute('data-template-id');\n\t\t\t\tif (id) {\n\t\t\t\t\t//! ランダムQSO生成ボタンの場合。\n\t\t\t\t\tif (id === 'qso-random-generate') {\n\t\t\t\t\t\tthis.state.selectedTemplate = ListeningTrainer.generateRandomQSO();\n\t\t\t\t\t\tthis.state.showResult = false;\n\t\t\t\t\t\tthis.state.showAnswer = false;\n\t\t\t\t\t\tthis.state.showDialogFormat = false;\n\t\t\t\t\t\tthis.state.userInput = '';\n\t\t\t\t\t\tthis.render();\n\t\t\t\t\t\tthis.renderPracticeArea();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//! 通常のテンプレート選択。\n\t\t\t\t\t\tconst allTemplates = [...ListeningTrainer.getBuiltinTemplates(), ...this.customTemplates];\n\t\t\t\t\t\tconst template = allTemplates.find(t => t.id === id);\n\t\t\t\t\t\tif (template) {\n\t\t\t\t\t\t\tthis.state.selectedTemplate = template;\n\t\t\t\t\t\t\tthis.state.showResult = false;\n\t\t\t\t\t\t\tthis.state.showAnswer = false;\n\t\t\t\t\t\t\tthis.state.showDialogFormat = false;\n\t\t\t\t\t\t\tthis.state.userInput = '';\n\t\t\t\t\t\t\tthis.render();\n\t\t\t\t\t\t\tthis.renderPracticeArea();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! 一覧に戻るボタン。\n\t\tdocument.getElementById('backToListBtn')?.addEventListener('click', () => {\n\t\t\tthis.state.selectedTemplate = null;\n\t\t\tthis.state.showResult = false;\n\t\t\tthis.state.showAnswer = false;\n\t\t\tthis.state.showDialogFormat = false;\n\t\t\tthis.state.userInput = '';\n\t\t\tthis.audio.stopPlaying();\n\t\t\tthis.render();\n\t\t});\n\n\t\t//! ユーザー定義定型文の新規作成ボタン。\n\t\tdocument.getElementById('addCustomBtn')?.addEventListener('click', () => {\n\t\t\tthis.showCustomTemplateDialog();\n\t\t});\n\n\t\t//! ユーザー定義定型文の編集ボタン。\n\t\tdocument.querySelectorAll('.edit-btn').forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst id = btn.getAttribute('data-template-id');\n\t\t\t\tif (id) {\n\t\t\t\t\tconst template = this.customTemplates.find(t => t.id === id);\n\t\t\t\t\tif (template) {\n\t\t\t\t\t\tthis.showCustomTemplateDialog(template);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! ユーザー定義定型文の削除ボタン。\n\t\tdocument.querySelectorAll('.delete-btn').forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst id = btn.getAttribute('data-template-id');\n\t\t\t\tif (id) {\n\t\t\t\t\tthis.deleteCustomTemplate(id);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! 再生コントロール（練習画面のみ）。\n\t\tif (this.state.selectedTemplate) {\n\t\t\tdocument.getElementById('playBtn')?.addEventListener('click', () => {\n\t\t\t\tthis.playMorse();\n\t\t\t});\n\n\t\t\tdocument.getElementById('pauseBtn')?.addEventListener('click', () => {\n\t\t\t\tthis.pauseMorse();\n\t\t\t});\n\n\t\t\tdocument.getElementById('stopBtn')?.addEventListener('click', () => {\n\t\t\t\tthis.stopMorse();\n\t\t\t});\n\n\t\t\tdocument.getElementById('downloadBtn')?.addEventListener('click', () => {\n\t\t\t\tthis.downloadWav();\n\t\t\t});\n\n\t\t\tthis.renderPracticeArea();\n\t\t}\n\t}\n\n\t/**\n\t * モールス信号をWAVファイルとしてダウンロードする\n\t */\n\tprivate async downloadWav(): Promise<void> {\n\t\tif (!this.state.selectedTemplate) return;\n\n\t\ttry {\n\t\t\t//! テキストをモールス符号に変換。\n\t\t\tconst morse = MorseCodec.textToMorse(this.state.selectedTemplate.content);\n\n\t\t\t//! WAVファイルを生成。\n\t\t\tconst wavBlob = await this.audio.generateWav(morse);\n\n\t\t\t//! ダウンロード。\n\t\t\tconst filename = `${sanitizeFilename(this.state.selectedTemplate.title)}.wav`;\n\t\t\tdownloadBlob(wavBlob, filename);\n\t\t} catch (error) {\n\t\t\tconsole.error('WAVダウンロードエラー:', error);\n\t\t\talert('WAVファイルの生成に失敗しました。');\n\t\t}\n\t}\n\n\tdestroy(): void {\n\t\t//! AudioGeneratorを停止。\n\t\tthis.audio.stopPlaying();\n\t}\n}\n","/**\n * ルーター\n * ハッシュベースのSPAルーティング\n */\n\nimport { MenuView } from '../ui/views/MenuView';\nimport { VerticalKeyView } from '../ui/views/VerticalKeyView';\nimport { HorizontalKeyView } from '../ui/views/HorizontalKeyView';\nimport { FlashcardView } from '../ui/views/FlashcardView';\nimport { KochView } from '../ui/views/KochView';\nimport { ListeningView } from '../ui/views/ListeningView';\n\n/**\n * ビューインターフェース\n */\nexport interface View {\n\t/**\n\t * ビューをレンダリングする\n\t */\n\trender(): void | Promise<void>;\n\n\t/**\n\t * ビューを破棄する\n\t */\n\tdestroy(): void;\n}\n\n/**\n * ルート定義\n */\ntype Route = {\n\tpath: string;\n\tview: new () => View;\n};\n\n/**\n * ルータークラス\n */\nexport class Router {\n\tprivate currentView: View | null = null;\n\tprivate routes: Route[] = [];\n\n\tconstructor() {\n\t\t//! ルート定義。\n\t\tthis.routes = [\n\t\t\t{ path: '', view: MenuView },\n\t\t\t{ path: 'menu', view: MenuView },\n\t\t\t{ path: 'vertical', view: VerticalKeyView },\n\t\t\t{ path: 'horizontal', view: HorizontalKeyView },\n\t\t\t{ path: 'flashcard', view: FlashcardView },\n\t\t\t{ path: 'koch', view: KochView },\n\t\t\t{ path: 'listening', view: ListeningView },\n\t\t];\n\t}\n\n\t/**\n\t * ルーターを初期化する\n\t */\n\tinit(): void {\n\t\t//! ハッシュ変更時のリスナーを登録。\n\t\twindow.addEventListener('hashchange', () => this.handleRoute());\n\n\t\t//! 初回ルーティング。\n\t\tthis.handleRoute();\n\t}\n\n\t/**\n\t * 現在のハッシュに基づいてルーティングする\n\t */\n\tprivate handleRoute(): void {\n\t\t//! 現在のビューを破棄。\n\t\tif (this.currentView) {\n\t\t\tthis.currentView.destroy();\n\t\t\tthis.currentView = null;\n\t\t}\n\n\t\t//! ハッシュからパスを取得（#を除去）。\n\t\tconst hash = window.location.hash.slice(1);\n\t\tconst route = this.routes.find(r => r.path === hash);\n\n\t\tif (route) {\n\t\t\t//! ビューを作成してレンダリング。\n\t\t\tthis.currentView = new route.view();\n\t\t\tthis.currentView.render();\n\t\t} else {\n\t\t\t//! 該当するルートがない場合はメニューに遷移。\n\t\t\twindow.location.hash = '#menu';\n\t\t}\n\t}\n\n\t/**\n\t * 指定したパスに遷移する\n\t */\n\tnavigate(path: string): void {\n\t\twindow.location.hash = `#${path}`;\n\t}\n}\n","/**\n * アプリケーションエントリポイント\n */\n\nimport { Router } from './router';\nimport './assets/styles.css';\n\n//! アプリケーション起動時の処理。\nfunction init(): void {\n\tconsole.log('モールス練習アプリ v10 起動');\n\n\t//! ルーターを初期化。\n\tconst router = new Router();\n\trouter.init();\n}\n\n//! DOMContentLoaded後に初期化。\nif (document.readyState === 'loading') {\n\tdocument.addEventListener('DOMContentLoaded', init);\n} else {\n\tinit();\n}\n"],"names":["MenuView","__publicField","app","item","route","O","B","f","t","d","e","r","i","u","E","a","o","P","F","G","K","T","l","A","R","h","I","S","c","b","s","n","W","D","M","L","U","H","y","g","m","N","C","x","Y","p","w","VerticalKeyView","savedWPM","savedKeyCode","MorseBuffer","TimerManager","AudioGenerator","timings","TimingCalculator","VerticalKeyTrainer","keyCode","backBtn","settingsBtn","clearBtn","keyButton","cancelBtn","okBtn","modal","morseBuffer","decodedText","charCount","buffer","sequence","fullDisplay","text","isPressed","keyStatus","valueSpan","volumeRange","volumeInput","frequencyInput","wpmInput","volume","syncVolume","syncVolumeReverse","keyBindingInput","save","frequency","newWpm","currentWpmDisplay","HorizontalKeyView","savedIambicMode","savedPaddleLayout","savedLeftKeyCode","savedRightKeyCode","HorizontalKeyTrainer","_element","duration","leftPaddle","rightPaddle","iambicModeSelect","paddleLayoutSelect","leftKeyBindingInput","rightKeyBindingInput","currentIambicModeDisplay","loadFlashcardData","url","response","parseTSV","lines","line","index","columns","_a","_b","entry","FlashcardView","FlashcardState","filters","viewState","error","FlashcardTrainer","tag","freq","container","card","abbr","toggleBtn","header","column","btn","cardCount","tagFilter","target","frequencyFilter","searchInput","reviewModeBtn","type","startLearnBtn","clearProgressBtn","cards","currentNum","totalNum","frontContent","backContent","isKnown","judgmentButtons","backToSetupBtn","flipCardBtn","spaceHandler","playMorseBtn","markUnknownBtn","markKnownBtn","prevCardBtn","nextCardBtn","question","progress","total","questionText","choice","score","isPassed","wrongAnswers","result","count","startExamBtn","replayBtn","userAnswer","retryBtn","tab","filteredCountElem","questionCountInput","entries","ascending","prosignMatch","morseSequence","MorseCodec","char","resolve","actualCount","isCorrect","wpm","modalHTML","val","testBtn","DEFAULT_SETTINGS","KOCH_SEQUENCE","KochView","saved","chars","KochTrainer","practiceSettings","group","morse","accuracy","passed","resultContainer","correct","input","maxLen","matches","progressEl","progressBar","percent","playBtn","pauseBtn","correctAnswer","savedSettings","restoreSettings","charSpeed","effSpeed","groupSize","showInput","charSpeedValue","effSpeedValue","lessonList","_","lessonNum","lessonChars","isCurrent","practiceContainer","inputEl","_c","availableChars","groups","groupIndex","isLearned","_d","downloadBlob","blob","filename","sanitizeFilename","ListeningView","builtin","ListeningTrainer","template","isEdit","title","content","titleInput","contentInput","newTemplate","id","characterSpeed","effectiveSpeed","cat","templates","preview","practiceInputArea","userInput","answerArea","isQSO","dialogButton","answerContent","segment","resultArea","category","_e","_f","_g","_h","wavBlob","Router","hash","path","init"],"mappings":"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B,CAChB,OAAO0B,EAAE,kBAAkB,KAAK,aAAa,CAC/C,CAMA,iBAAiB1B,EAAI,GAAI,CACvB,MAAME,EAAI,KAAK,gBAAe,EAC9B,OAAOwB,EAAE,qBAAqBxB,EAAGF,CAAC,CACpC,CAKA,eAAgB,CACd,OAAO,KAAK,cAAgB,IAAM,KAAK,gBAAiB,KAAK,aAC/D,CAKA,gBAAiB,CACf,OAAO,KAAK,cAAgB,GAAK,KAAK,gBAAiB,KAAK,aAC9D,CAKA,cAAe,CACb,OAAO,KAAK,gBAAkB,EAChC,CAKA,eAAgB,CACd,OAAO,KAAK,gBAAkB,CAChC,CAKA,OAAO,iBAAkB,CACvB,MAAO,GACT,CAKA,OAAO,eAAgB,CACrB,OAAOyB,EAAE,MACX,CAKA,OAAO,aAAc,CACnB,MAAO,CAAC,GAAGA,CAAC,CACd,CACF,CACA;AACA,MAAME,EAAI,CACR,QACA,QACA,QACA,SACA,WACA,OACA,UACA,UACA,SACA,YACA,WACA,UACA,QACA,aACA,QACA,UACA,YACA,WACA,UACA,aACA,WACA,YACA,YACA,OACA,aACA,WACA,SACA,OACA,WACA,OACA,QACA,WACA,OACA,WACA,SACA,QACA,YACA,UACA,WACA,OACA,YACA,YACA,QACA,OACA,MACA,YACA,SACA,UACA,YACA,YACA,YACA,OACA,WACA,QACA,WACA,WACA,UACA,YACA,SACA,cACA,YACA,YACA,WACA,QACA,YACA,YACA,WACA,YACA,QACA,UACA,UACA,YACA,YACA,YACA,WACA,aACA,WACA,WACA,WACA,UACA,UACA,WACA,UACA,aACA,OACA,QACA,QACA,OACA,YACA,SACA,UACA,YACA,WACA,WACA,QACA,SACA,OACA,UACA,WACA,OACF,EACA;AACA,MAAMC,EAAI,CACR,OACA,OACA,MACA,OACA,MACA,OACA,MACA,OACA,QACA,OACA,OACA,MACA,MACA,MACA,OACA,QACA,SACA,OACA,MACA,KACA,OACA,OACA,OACA,QACA,OACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,QACA,QACA,SACA,SACA,SACA,UACA,SACA,UACA,UACA,SACA,QACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,WACA,UACA,WACA,SACA,SACA,SACA,SACA,QACA,QACA,UACA,MACA,OACA,UACA,WACA,SACA,QACA,QACA,UACA,SACA,SACA,UACA,QACA,OACA,QACA,UACA,QACA,OACA,SACA,SACA,SACA,SACA,SACA,MACA,MACA,OACA,MACA,MACA,QACA,MACA,MACA,OACA,MACF,EACA;AACA,MAAMC,EAAI,CACR,UACA,SACA,UACA,UACA,WAEA,UACA,UACA,UACA,SACA,SAEA,WACA,UACA,YACA,UACA,SAEF,EACA;AACA,MAAMC,EAAI,CACR,MACA,MACA,MACA,MACA,MACA,MACA,KACF,EACA;AACA,MAAMC,EAAI,CACR,CACE,GAAI,QACJ,SAAU,MACV,MAAO,sBACP,QAAS,iCACb,EACE,CACE,GAAI,QACJ,SAAU,MACV,MAAO,YACP,QAAS,2BACb,EACE,CACE,GAAI,QACJ,SAAU,MACV,MAAO,iBACP,QAAS,mJACb,EACE,CACE,GAAI,QACJ,SAAU,MACV,MAAO,iBACP,QAAS,kKACb,EACE,CACE,GAAI,QACJ,SAAU,MACV,MAAO,mBACP,QAAS,sJACb,EACE,CACE,GAAI,QACJ,SAAU,MACV,MAAO,kBACP,QAAS,+KACb,EACE,CACE,GAAI,QACJ,SAAU,MACV,MAAO,cACP,QAAS,0EACb,CACA,EACA;AACA,MAAMC,EAAI,CACR,CACE,GAAI,YACJ,SAAU,UACV,MAAO,aACP,QAAS,wHACb,EACE,CACE,GAAI,YACJ,SAAU,UACV,MAAO,WACP,QAAS,8HACb,EACE,CACE,GAAI,YACJ,SAAU,UACV,MAAO,WACP,QAAS,oIACb,CACA,EACA;AACA,MAAMC,EAAI,CACR,CACE,GAAI,YACJ,SAAU,UACV,MAAO,mBACP,QAAS,mYACb,EACE,CACE,GAAI,YACJ,SAAU,UACV,MAAO,eACP,QAAS,uYACb,CACA,EACA;AACA,MAAMC,EAAI,CACR,CAC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"}