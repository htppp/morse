class C{constructor(t={frequency:750,volume:.7,wpm:20}){this.audioContext=null,this.currentOscillator=null,this.currentGain=null,this.isPlaying=!1,this.settings=t,this.loadSettings(),this.init()}ensureAudioContext(){this.audioContext||(this.audioContext=new(window.AudioContext||window.webkitAudioContext)),this.audioContext.state==="suspended"&&this.audioContext.resume()}init(){}updateSettings(t){this.settings={...this.settings,...t}}scheduleTone(t,e){if(this.ensureAudioContext(),!!this.audioContext)try{const s=this.audioContext.createOscillator(),i=this.audioContext.createGain();s.connect(i),i.connect(this.audioContext.destination),s.frequency.value=this.settings.frequency,s.type="sine";const o=this.audioContext.currentTime,n=Math.max(o,t);i.gain.setValueAtTime(0,n),i.gain.linearRampToValueAtTime(this.settings.volume,n+.001),i.gain.setValueAtTime(this.settings.volume,n+(e-1)/1e3),i.gain.linearRampToValueAtTime(0,n+e/1e3),s.start(n),s.stop(n+e/1e3)}catch(s){console.error("音声エラー:",s)}}startContinuousTone(){if(this.ensureAudioContext(),!!this.audioContext)try{this.stopContinuousTone();const t=this.audioContext.createOscillator(),e=this.audioContext.createGain();t.connect(e),e.connect(this.audioContext.destination),t.frequency.value=this.settings.frequency,t.type="sine";const s=this.audioContext.currentTime;e.gain.setValueAtTime(0,s),e.gain.linearRampToValueAtTime(this.settings.volume,s+.001),t.start(s),this.currentOscillator=t,this.currentGain=e}catch(t){console.error("連続音開始エラー:",t)}}stopContinuousTone(){if(this.audioContext)try{if(this.currentOscillator&&this.currentGain){const t=this.audioContext.currentTime;this.currentGain.gain.cancelScheduledValues(t),this.currentGain.gain.setValueAtTime(this.currentGain.gain.value,t),this.currentGain.gain.linearRampToValueAtTime(0,t+.001),this.currentOscillator.stop(t+.002),this.currentOscillator=null,this.currentGain=null}}catch(t){console.error("連続音停止エラー:",t)}}async playMorseString(t){if(this.isPlaying||!t||(this.ensureAudioContext(),!this.audioContext))return!1;this.isPlaying=!0;const e=this.settings.wpm||20,s=Math.min(this.settings.effectiveWpm||e,e),i=1200/e,o=i,n=3*i,a=i,l=3*i,d=7*(1200/s);let r=this.audioContext.currentTime+.02;for(let h=0;h<t.length&&this.isPlaying;h++){const g=t[h];g==="."?(this.scheduleTone(r,o),r+=(o+a)/1e3):g==="-"?(this.scheduleTone(r,n),r+=(n+a)/1e3):g===" "?r+=(l-a)/1e3:g==="/"&&(r+=(d-a)/1e3)}const p=(r-this.audioContext.currentTime)*1e3;await new Promise(h=>setTimeout(h,p));const f=this.isPlaying;return this.isPlaying=!1,f}stopPlaying(){this.isPlaying=!1}getAudioContext(){return this.audioContext}getVolume(){return this.settings.volume}setVolume(t){this.settings.volume=Math.max(0,Math.min(1,t))}getFrequency(){return this.settings.frequency}setFrequency(t){this.settings.frequency=Math.max(400,Math.min(1200,t))}getWPM(){return this.settings.wpm||20}setWPM(t){this.settings.wpm=Math.max(5,Math.min(40,t))}saveSettings(){try{localStorage.setItem("v4.audio.settings",JSON.stringify(this.settings))}catch(t){console.error("設定保存エラー:",t)}}loadSettings(){try{const t=localStorage.getItem("v4.audio.settings");t&&(this.settings={...this.settings,...JSON.parse(t)})}catch(t){console.error("設定読み込みエラー:",t)}}}const c={A:".-",B:"-...",C:"-.-.",D:"-..",E:".",F:"..-.",G:"--.",H:"....",I:"..",J:".---",K:"-.-",L:".-..",M:"--",N:"-.",O:"---",P:".--.",Q:"--.-",R:".-.",S:"...",T:"-",U:"..-",V:"...-",W:".--",X:"-..-",Y:"-.--",Z:"--..",0:"-----",1:".----",2:"..---",3:"...--",4:"....-",5:".....",6:"-....",7:"--...",8:"---..",9:"----."," ":"/",".":".-.-.-",",":"--..--",":":"---...","?":"..--..",_:"..--.-","+":".-.-.","-":"-....-","×":"-..-","^":"......","/":"-..-.","@":".--.-.","(":"-.--.",")":"-.--.-",'"':".-..-.","'":".----.","=":"-...-"},x=Object.fromEntries(Object.entries(c).map(([m,t])=>[t,m]));class T{static textToMorse(t){const e=t.toUpperCase(),s=/\[([A-Z]+)\]/g,i=[];let o=0,n;for(;(n=s.exec(e))!==null;){if(n.index>o){const u=e.substring(o,n.index),d=Array.from(u).map(r=>c[r]||r);i.push(d.join(" "))}const l=Array.from(n[1]).map(u=>c[u]||u);i.push(l.join("")),o=s.lastIndex}if(o<e.length){const a=e.substring(o),l=Array.from(a).map(u=>c[u]||u);i.push(l.join(" "))}return i.filter(a=>a).join(" ")}static morseSequencesToText(t){let e="";for(const s of t)s==="/"?e+=" ":s&&s!==""&&(e+=x[s]||"?");return e}static getMorseMap(){return c}static charToMorse(t){return c[t.toUpperCase()]}}export{C as A,T as M};
