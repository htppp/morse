{"version":3,"file":"morse-engine-DCvbVWZt.js","sources":["../../../lib/dist/index.js"],"sourcesContent":["const g = {\n  A: \".-\",\n  B: \"-...\",\n  C: \"-.-.\",\n  D: \"-..\",\n  E: \".\",\n  F: \"..-.\",\n  G: \"--.\",\n  H: \"....\",\n  I: \"..\",\n  J: \".---\",\n  K: \"-.-\",\n  L: \".-..\",\n  M: \"--\",\n  N: \"-.\",\n  O: \"---\",\n  P: \".--.\",\n  Q: \"--.-\",\n  R: \".-.\",\n  S: \"...\",\n  T: \"-\",\n  U: \"..-\",\n  V: \"...-\",\n  W: \".--\",\n  X: \"-..-\",\n  Y: \"-.--\",\n  Z: \"--..\",\n  0: \"-----\",\n  1: \".----\",\n  2: \"..---\",\n  3: \"...--\",\n  4: \"....-\",\n  5: \".....\",\n  6: \"-....\",\n  7: \"--...\",\n  8: \"---..\",\n  9: \"----.\",\n  \" \": \"/\",\n  \".\": \".-.-.-\",\n  \",\": \"--..--\",\n  \":\": \"---...\",\n  \"?\": \"..--..\",\n  _: \"..--.-\",\n  \"+\": \".-.-.\",\n  \"-\": \"-....-\",\n  \"×\": \"-..-\",\n  \"^\": \"......\",\n  \"/\": \"-..-.\",\n  \"@\": \".--.-.\",\n  \"(\": \"-.--.\",\n  \")\": \"-.--.-\",\n  '\"': \".-..-.\",\n  \"'\": \".----.\",\n  \"=\": \"-...-\"\n}, B = Object.fromEntries(\n  Object.entries(g).map(([T, e]) => [e, T])\n);\nclass m {\n  /**\n   * テキストをモールス符号に変換\n   * @param text 変換するテキスト\n   * @returns モールス符号文字列（スペース区切り）\n   */\n  static textToMorse(e) {\n    const t = e.toUpperCase(), s = /\\[([A-Z]+)\\]/g, n = [];\n    let r = 0, i;\n    for (; (i = s.exec(t)) !== null; ) {\n      if (i.index > r) {\n        const h = t.substring(r, i.index), A = Array.from(h).map((l) => g[l] || l);\n        n.push(A.join(\" \"));\n      }\n      const o = Array.from(i[1]).map((h) => g[h] || h);\n      n.push(o.join(\"\")), r = s.lastIndex;\n    }\n    if (r < t.length) {\n      const a = t.substring(r), o = Array.from(a).map((h) => g[h] || h);\n      n.push(o.join(\" \"));\n    }\n    return n.filter((a) => a).join(\" \");\n  }\n  /**\n   * モールス符号シーケンスを文字に変換\n   * @param sequences モールス符号の配列（['.-', '-...', '...']など）\n   * @returns デコードされたテキスト\n   */\n  static morseToText(e) {\n    let t = \"\";\n    for (const s of e)\n      s === \"/\" ? t += \" \" : s && s !== \"\" && (t += B[s] || \"?\");\n    return t;\n  }\n  /**\n   * モールス符号マップを取得\n   * @returns 文字→モールス符号のマップ\n   */\n  static getMorseMap() {\n    return { ...g };\n  }\n  /**\n   * 1文字からモールス符号を取得\n   * @param char 変換する文字\n   * @returns モールス符号、未対応文字の場合はundefined\n   */\n  static charToMorse(e) {\n    return g[e.toUpperCase()];\n  }\n}\nclass x {\n  /**\n   * WPMからモールス信号のタイミングを計算する\n   *\n   * @param wpm - Words Per Minute（1分間あたりの単語数）\n   * @param options - タイミング計算のオプション\n   * @returns モールス信号のタイミング情報\n   *\n   * @example\n   * ```ts\n   * const timings = TimingCalculator.calculate(20);\n   * console.log(timings.dot); // 60ms\n   * console.log(timings.dash); // 180ms\n   * ```\n   */\n  static calculate(e, t = {}) {\n    if (e <= 0)\n      throw new Error(`Invalid WPM value: ${e}. WPM must be greater than 0.`);\n    const s = 1200 / e, n = t.shortenGaps ? 0.9 : 1;\n    return {\n      dot: s,\n      dash: s * 3,\n      elementGap: s,\n      charGap: s * 3 * n,\n      wordGap: s * 7 * n\n    };\n  }\n  /**\n   * タイミング情報から文字確定までの待機時間を計算する\n   *\n   * @param timings - モールス信号のタイミング情報\n   * @returns 文字確定までの待機時間（ミリ秒）\n   */\n  static getCharGapDelay(e) {\n    const t = e.charGap / (e.dot * 3);\n    return e.dot * 4 * t;\n  }\n  /**\n   * タイミング情報から語間スペース確定までの待機時間を計算する\n   *\n   * @param timings - モールス信号のタイミング情報\n   * @returns 語間スペース確定までの待機時間（ミリ秒）\n   */\n  static getWordGapDelay(e) {\n    return e.wordGap;\n  }\n  /**\n   * 押下時間からdot/dashを判定する\n   *\n   * @param pressDuration - キー押下時間（ミリ秒）\n   * @param dotDuration - dot時間（ミリ秒）\n   * @returns '.'（dot）または '-'（dash）\n   */\n  static classifyElement(e, t) {\n    const s = t * 1.5;\n    return e < s ? \".\" : \"-\";\n  }\n}\nclass R {\n  /**\n   * タイミングレコードを作成する\n   *\n   * @param element - 入力された要素（'.' または '-'）\n   * @param actualDuration - 実際の押下時間（ミリ秒）\n   * @param timings - モールス信号のタイミング情報\n   * @param timestamp - 入力時刻（エポックミリ秒、省略時は現在時刻）\n   * @returns タイミングレコード\n   *\n   * @example\n   * ```ts\n   * const timings = TimingCalculator.calculate(20);\n   * const record = TimingEvaluator.createRecord('.', 58, timings);\n   * console.log(record.expectedDuration); // 60ms (20 WPMの場合)\n   * ```\n   */\n  static createRecord(e, t, s, n = Date.now()) {\n    const r = e === \".\" ? s.dot : s.dash;\n    return {\n      element: e,\n      actualDuration: t,\n      expectedDuration: r,\n      timestamp: n\n    };\n  }\n  /**\n   * タイミングレコードを評価する\n   *\n   * @param record - タイミングレコード\n   * @returns タイミング評価結果\n   *\n   * @example\n   * ```ts\n   * const timings = TimingCalculator.calculate(20);\n   * const record = TimingEvaluator.createRecord('.', 58, timings);\n   * const evaluation = TimingEvaluator.evaluate(record);\n   * console.log(evaluation.accuracy); // 96.67%\n   * console.log(evaluation.absoluteError); // 2ms\n   * ```\n   */\n  static evaluate(e) {\n    const t = Math.abs(e.actualDuration - e.expectedDuration), s = t / e.expectedDuration * 100, n = Math.max(0, 100 - s);\n    return {\n      record: e,\n      absoluteError: t,\n      relativeError: s,\n      accuracy: n\n    };\n  }\n  /**\n   * 複数の評価結果から統計情報を計算する\n   *\n   * @param evaluations - タイミング評価結果の配列\n   * @returns 統計情報\n   *\n   * @example\n   * ```ts\n   * const timings = TimingCalculator.calculate(20);\n   * const records = [\n   *   TimingEvaluator.createRecord('.', 58, timings),\n   *   TimingEvaluator.createRecord('.', 62, timings),\n   *   TimingEvaluator.createRecord('-', 178, timings),\n   * ];\n   * const evaluations = records.map(r => TimingEvaluator.evaluate(r));\n   * const stats = TimingEvaluator.calculateStatistics(evaluations);\n   * console.log(stats.averageAccuracy); // 平均精度\n   * ```\n   */\n  static calculateStatistics(e) {\n    if (e.length === 0)\n      return {\n        count: 0,\n        averageAccuracy: 0,\n        averageAbsoluteError: 0,\n        averageRelativeError: 0,\n        maxAccuracy: 0,\n        minAccuracy: 0,\n        standardDeviation: 0\n      };\n    const t = e.map((c) => c.accuracy), s = e.map((c) => c.absoluteError), n = e.map((c) => c.relativeError), r = t.reduce((c, E) => c + E, 0) / t.length, i = s.reduce((c, E) => c + E, 0) / s.length, a = n.reduce((c, E) => c + E, 0) / n.length, o = Math.max(...t), h = Math.min(...t), A = t.reduce((c, E) => c + Math.pow(E - r, 2), 0) / t.length, l = Math.sqrt(A);\n    return {\n      count: e.length,\n      averageAccuracy: r,\n      averageAbsoluteError: i,\n      averageRelativeError: a,\n      maxAccuracy: o,\n      minAccuracy: h,\n      standardDeviation: l\n    };\n  }\n  /**\n   * 評価結果を要素タイプ（dot/dash）別に分類する\n   *\n   * @param evaluations - タイミング評価結果の配列\n   * @returns 要素タイプ別の評価結果\n   *\n   * @example\n   * ```ts\n   * const evaluations = [...]; // TimingEvaluation[]\n   * const classified = TimingEvaluator.classifyByElement(evaluations);\n   * console.log(classified.dot.length); // dot入力の数\n   * console.log(classified.dash.length); // dash入力の数\n   * ```\n   */\n  static classifyByElement(e) {\n    const t = e.filter((n) => n.record.element === \".\"), s = e.filter((n) => n.record.element === \"-\");\n    return { dot: t, dash: s };\n  }\n  /**\n   * 最近のN件の評価結果を取得する\n   *\n   * @param evaluations - タイミング評価結果の配列\n   * @param count - 取得する件数\n   * @returns 最近のN件の評価結果\n   *\n   * @example\n   * ```ts\n   * const evaluations = [...]; // TimingEvaluation[]\n   * const recent = TimingEvaluator.getRecent(evaluations, 10);\n   * console.log(recent.length); // 最大10件\n   * ```\n   */\n  static getRecent(e, t) {\n    return t <= 0 ? [] : [...e].sort(\n      (n, r) => r.record.timestamp - n.record.timestamp\n    ).slice(0, t);\n  }\n  /**\n   * 期間内の評価結果を取得する\n   *\n   * @param evaluations - タイミング評価結果の配列\n   * @param startTime - 開始時刻（エポックミリ秒）\n   * @param endTime - 終了時刻（エポックミリ秒、省略時は現在時刻）\n   * @returns 期間内の評価結果\n   *\n   * @example\n   * ```ts\n   * const evaluations = [...]; // TimingEvaluation[]\n   * const oneHourAgo = Date.now() - 60 * 60 * 1000;\n   * const recent = TimingEvaluator.getByTimeRange(evaluations, oneHourAgo);\n   * console.log(recent.length); // 直近1時間の件数\n   * ```\n   */\n  static getByTimeRange(e, t, s = Date.now()) {\n    return e.filter(\n      (n) => n.record.timestamp >= t && n.record.timestamp <= s\n    );\n  }\n}\nclass w {\n  constructor() {\n    this.buffer = \"\", this.sequence = \"\";\n  }\n  /**\n   * 現在入力中のシーケンスを取得する\n   *\n   * @returns 入力中のモールス符号シーケンス\n   */\n  getSequence() {\n    return this.sequence;\n  }\n  /**\n   * 確定済みのバッファを取得する\n   *\n   * @returns 確定済みのモールス符号バッファ\n   */\n  getBuffer() {\n    return this.buffer;\n  }\n  /**\n   * 入力中のシーケンスに符号要素を追加する\n   *\n   * @param element - 追加する符号要素（'.' または '-'）\n   */\n  addElement(e) {\n    this.sequence += e;\n  }\n  /**\n   * 入力中のシーケンスを確定してバッファに追加する\n   *\n   * @param addSpace - 確定後にスペースを追加するか（デフォルト: true）\n   */\n  commitSequence(e = !0) {\n    this.sequence && (this.buffer += this.sequence, e && (this.buffer += \" \"), this.sequence = \"\");\n  }\n  /**\n   * 語間スペース（'/'）を追加する\n   * すでに語間スペースで終わっている場合は追加しない\n   */\n  addWordSeparator() {\n    this.commitSequence(!0), this.buffer.endsWith(\"/ \") || (this.buffer += \"/ \");\n  }\n  /**\n   * バッファとシーケンスをクリアする\n   */\n  clear() {\n    this.buffer = \"\", this.sequence = \"\";\n  }\n  /**\n   * バッファの末尾が指定の文字列で終わっているかチェックする\n   *\n   * @param suffix - チェックする末尾文字列\n   * @returns 末尾が一致する場合true\n   */\n  endsWith(e) {\n    return this.buffer.endsWith(e);\n  }\n  /**\n   * バッファの長さを取得する\n   *\n   * @returns バッファの長さ\n   */\n  getBufferLength() {\n    return this.buffer.length;\n  }\n  /**\n   * シーケンスの長さを取得する\n   *\n   * @returns シーケンスの長さ\n   */\n  getSequenceLength() {\n    return this.sequence.length;\n  }\n  /**\n   * バッファが空かどうかをチェックする\n   *\n   * @returns バッファとシーケンスの両方が空の場合true\n   */\n  isEmpty() {\n    return this.buffer.length === 0 && this.sequence.length === 0;\n  }\n}\nclass k {\n  constructor() {\n    this.timers = /* @__PURE__ */ new Map();\n  }\n  /**\n   * タイマーを設定する\n   *\n   * @param name - タイマーの識別名\n   * @param callback - タイマー実行時のコールバック\n   * @param delay - 遅延時間（ミリ秒）\n   *\n   * @example\n   * ```ts\n   * const manager = new TimerManager();\n   * manager.set('charGap', () => console.log('Character committed'), 200);\n   * ```\n   */\n  set(e, t, s) {\n    this.clear(e);\n    const n = window.setTimeout(t, s);\n    this.timers.set(e, n);\n  }\n  /**\n   * 指定したタイマーをクリアする\n   *\n   * @param name - タイマーの識別名\n   *\n   * @example\n   * ```ts\n   * manager.clear('charGap');\n   * ```\n   */\n  clear(e) {\n    const t = this.timers.get(e);\n    t !== void 0 && (clearTimeout(t), this.timers.delete(e));\n  }\n  /**\n   * 全てのタイマーをクリアする\n   *\n   * @example\n   * ```ts\n   * manager.clearAll();\n   * ```\n   */\n  clearAll() {\n    for (const e of this.timers.values())\n      clearTimeout(e);\n    this.timers.clear();\n  }\n  /**\n   * 指定したタイマーが存在するかチェックする\n   *\n   * @param name - タイマーの識別名\n   * @returns タイマーが存在する場合true\n   */\n  has(e) {\n    return this.timers.has(e);\n  }\n  /**\n   * 管理中のタイマー数を取得する\n   *\n   * @returns タイマー数\n   */\n  count() {\n    return this.timers.size;\n  }\n}\nclass $ {\n  /**\n   * AudioGeneratorを初期化する\n   *\n   * @param settings - 音声設定\n   */\n  constructor(e = { frequency: 750, volume: 0.7, wpm: 20 }) {\n    this.audioContext = null, this.currentOscillator = null, this.currentGain = null, this.isPlaying = !1, this.settings = e;\n  }\n  /**\n   * AudioContextの初期化\n   */\n  ensureAudioContext() {\n    this.audioContext || (this.audioContext = new (window.AudioContext || window.webkitAudioContext)()), this.audioContext.state === \"suspended\" && this.audioContext.resume();\n  }\n  /**\n   * 設定を更新する\n   *\n   * @param settings - 更新する設定（部分更新可能）\n   */\n  updateSettings(e) {\n    this.settings = { ...this.settings, ...e };\n  }\n  /**\n   * 現在の設定を取得する\n   *\n   * @returns 現在の音声設定\n   */\n  getSettings() {\n    return { ...this.settings };\n  }\n  /**\n   * 指定された時間に音を再生する\n   *\n   * @param startTime - 開始時刻（AudioContext時刻）\n   * @param durationMs - 音の長さ（ミリ秒）\n   */\n  scheduleTone(e, t) {\n    if (this.ensureAudioContext(), !!this.audioContext)\n      try {\n        const s = this.audioContext.createOscillator(), n = this.audioContext.createGain();\n        s.connect(n), n.connect(this.audioContext.destination), s.frequency.value = this.settings.frequency, s.type = \"sine\";\n        const r = this.audioContext.currentTime, i = Math.max(r, e);\n        n.gain.setValueAtTime(0, i), n.gain.linearRampToValueAtTime(this.settings.volume, i + 1e-3), n.gain.setValueAtTime(this.settings.volume, i + (t - 1) / 1e3), n.gain.linearRampToValueAtTime(0, i + t / 1e3), s.start(i), s.stop(i + t / 1e3);\n      } catch (s) {\n        console.error(\"音声エラー:\", s);\n      }\n  }\n  /**\n   * 連続音の開始\n   */\n  startContinuousTone() {\n    if (this.ensureAudioContext(), !!this.audioContext)\n      try {\n        this.stopContinuousTone();\n        const e = this.audioContext.createOscillator(), t = this.audioContext.createGain();\n        e.connect(t), t.connect(this.audioContext.destination), e.frequency.value = this.settings.frequency, e.type = \"sine\";\n        const s = this.audioContext.currentTime;\n        t.gain.setValueAtTime(0, s), t.gain.linearRampToValueAtTime(this.settings.volume, s + 1e-3), e.start(s), this.currentOscillator = e, this.currentGain = t;\n      } catch (e) {\n        console.error(\"連続音開始エラー:\", e);\n      }\n  }\n  /**\n   * 連続音の停止\n   */\n  stopContinuousTone() {\n    if (this.audioContext)\n      try {\n        if (this.currentOscillator && this.currentGain) {\n          const e = this.audioContext.currentTime;\n          this.currentGain.gain.cancelScheduledValues(e), this.currentGain.gain.setValueAtTime(this.currentGain.gain.value, e), this.currentGain.gain.linearRampToValueAtTime(0, e + 1e-3), this.currentOscillator.stop(e + 2e-3), this.currentOscillator = null, this.currentGain = null;\n        }\n      } catch (e) {\n        console.error(\"連続音停止エラー:\", e);\n      }\n  }\n  /**\n   * モールス符号文字列を再生する\n   *\n   * @param morse - モールス符号文字列（'.-', ' ', '/' を含む）\n   * @returns 再生が完了したらtrueを返すPromise（中断された場合はfalse）\n   *\n   * @example\n   * ```ts\n   * const audio = new AudioGenerator({ frequency: 750, volume: 0.7, wpm: 20 });\n   * await audio.playMorseString('.- -... -.-. / -.. . ..-.');\n   * ```\n   */\n  async playMorseString(e) {\n    if (this.isPlaying || !e || (this.ensureAudioContext(), !this.audioContext)) return !1;\n    this.isPlaying = !0;\n    const t = this.settings.wpm || 20, s = Math.min(this.settings.effectiveWpm || t, t), n = 1200 / t, r = n, i = 3 * n, a = n, o = 3 * n, A = 7 * (1200 / s);\n    let l = this.audioContext.currentTime + 0.02;\n    for (let S = 0; S < e.length && this.isPlaying; S++) {\n      const u = e[S];\n      u === \".\" ? (this.scheduleTone(l, r), l += (r + a) / 1e3) : u === \"-\" ? (this.scheduleTone(l, i), l += (i + a) / 1e3) : u === \" \" ? l += (o - a) / 1e3 : u === \"/\" && (l += (A - a) / 1e3);\n    }\n    const c = (l - this.audioContext.currentTime) * 1e3;\n    await new Promise((S) => setTimeout(S, c));\n    const E = this.isPlaying;\n    return this.isPlaying = !1, E;\n  }\n  /**\n   * 再生を停止する\n   */\n  stopPlaying() {\n    this.isPlaying = !1;\n  }\n  /**\n   * 再生中かどうかを確認する\n   *\n   * @returns 再生中の場合true\n   */\n  isCurrentlyPlaying() {\n    return this.isPlaying;\n  }\n  /**\n   * AudioContextを取得する\n   *\n   * @returns AudioContextインスタンス（未初期化の場合null）\n   */\n  getAudioContext() {\n    return this.audioContext;\n  }\n  /**\n   * 音量を取得する\n   *\n   * @returns 現在の音量（0-1）\n   */\n  getVolume() {\n    return this.settings.volume;\n  }\n  /**\n   * 音量を設定する\n   *\n   * @param volume - 音量（0-1）\n   */\n  setVolume(e) {\n    this.settings.volume = Math.max(0, Math.min(1, e));\n  }\n  /**\n   * 周波数を取得する\n   *\n   * @returns 現在の周波数（Hz）\n   */\n  getFrequency() {\n    return this.settings.frequency;\n  }\n  /**\n   * 周波数を設定する\n   *\n   * @param frequency - 周波数（Hz、400-1200の範囲）\n   */\n  setFrequency(e) {\n    this.settings.frequency = Math.max(400, Math.min(1200, e));\n  }\n  /**\n   * WPMを取得する\n   *\n   * @returns 現在のWPM\n   */\n  getWPM() {\n    return this.settings.wpm || 20;\n  }\n  /**\n   * WPMを設定する\n   *\n   * @param wpm - WPM（5-40の範囲）\n   */\n  setWPM(e) {\n    this.settings.wpm = Math.max(5, Math.min(40, e));\n  }\n  /**\n   * モールス符号文字列からWAVファイルを生成する\n   *\n   * @param morse - モールス符号文字列（'.-', ' ', '/' を含む）\n   * @returns WAVファイルのBlob\n   *\n   * @example\n   * ```ts\n   * const audio = new AudioGenerator({ frequency: 750, volume: 0.7, wpm: 20 });\n   * const wavBlob = await audio.generateWav('.- -... -.-. / -.. . ..-.');\n   * ```\n   */\n  async generateWav(e) {\n    if (!e)\n      throw new Error(\"モールス符号が空です\");\n    const t = this.settings.wpm || 20, s = Math.min(this.settings.effectiveWpm || t, t), n = 1200 / t, r = n, i = 3 * n, a = n, o = 3 * n, A = 7 * (1200 / s);\n    let l = 0;\n    for (let d = 0; d < e.length; d++) {\n      const f = e[d];\n      f === \".\" ? l += r + a : f === \"-\" ? l += i + a : f === \" \" ? l += o - a : f === \"/\" && (l += A - a);\n    }\n    const c = 44100, E = (l + 100) / 1e3, S = new OfflineAudioContext(1, Math.ceil(E * c), c);\n    let u = 0.02;\n    for (let d = 0; d < e.length; d++) {\n      const f = e[d];\n      f === \".\" ? (this.scheduleOfflineTone(S, u, r), u += (r + a) / 1e3) : f === \"-\" ? (this.scheduleOfflineTone(S, u, i), u += (i + a) / 1e3) : f === \" \" ? u += (o - a) / 1e3 : f === \"/\" && (u += (A - a) / 1e3);\n    }\n    const I = await S.startRendering();\n    return this.audioBufferToWav(I);\n  }\n  /**\n   * OfflineAudioContextで音を生成する\n   *\n   * @param context - OfflineAudioContext\n   * @param startTime - 開始時刻（秒）\n   * @param durationMs - 音の長さ（ミリ秒）\n   */\n  scheduleOfflineTone(e, t, s) {\n    const n = e.createOscillator(), r = e.createGain();\n    n.connect(r), r.connect(e.destination), n.frequency.value = this.settings.frequency, n.type = \"sine\";\n    const i = t;\n    r.gain.setValueAtTime(0, i), r.gain.linearRampToValueAtTime(this.settings.volume, i + 1e-3), r.gain.setValueAtTime(this.settings.volume, i + (s - 1) / 1e3), r.gain.linearRampToValueAtTime(0, i + s / 1e3), n.start(i), n.stop(i + s / 1e3);\n  }\n  /**\n   * AudioBufferをWAVファイルに変換する\n   *\n   * @param buffer - AudioBuffer\n   * @returns WAVファイルのBlob\n   */\n  audioBufferToWav(e) {\n    const t = e.numberOfChannels, s = e.sampleRate, n = 1, r = 16, i = r / 8, a = t * i, o = new Float32Array(e.length * t);\n    for (let u = 0; u < e.numberOfChannels; u++) {\n      const I = e.getChannelData(u);\n      for (let d = 0; d < I.length; d++)\n        o[d * t + u] = I[d];\n    }\n    const h = o.length * i, A = 44 + h, l = new ArrayBuffer(A), c = new DataView(l), E = (u, I) => {\n      for (let d = 0; d < I.length; d++)\n        c.setUint8(u + d, I.charCodeAt(d));\n    };\n    E(0, \"RIFF\"), c.setUint32(4, A - 8, !0), E(8, \"WAVE\"), E(12, \"fmt \"), c.setUint32(16, 16, !0), c.setUint16(20, n, !0), c.setUint16(22, t, !0), c.setUint32(24, s, !0), c.setUint32(28, s * a, !0), c.setUint16(32, a, !0), c.setUint16(34, r, !0), E(36, \"data\"), c.setUint32(40, h, !0);\n    let S = 44;\n    for (let u = 0; u < o.length; u++) {\n      const I = Math.max(-1, Math.min(1, o[u])), d = I < 0 ? I * 32768 : I * 32767;\n      c.setInt16(S, d, !0), S += 2;\n    }\n    return new Blob([l], { type: \"audio/wav\" });\n  }\n}\nclass P {\n  /**\n   * 縦振り電鍵トレーナーを初期化する\n   * @param buffer - モールスバッファインスタンス\n   * @param timer - タイマーマネージャーインスタンス\n   * @param timings - タイミング設定\n   * @param callbacks - イベントコールバック\n   */\n  constructor(e, t, s, n = {}) {\n    this.buffer = e, this.timer = t, this.timings = s, this.callbacks = n, this.keyDown = !1, this.keyDownTime = 0, this.evaluations = [];\n  }\n  /**\n   * キーが押された時の処理\n   * 連続音の開始と状態の記録を行う\n   */\n  keyPress() {\n    this.keyDown || (this.keyDown = !0, this.keyDownTime = Date.now(), this.timer.clearAll(), this.callbacks.onKeyPress?.());\n  }\n  /**\n   * キーが離された時の処理\n   * 押下時間からdot/dashを判定し、バッファに追加する\n   */\n  keyRelease() {\n    if (!this.keyDown) return;\n    this.keyDown = !1;\n    const e = Date.now() - this.keyDownTime, t = e < this.timings.dot * 2 ? \".\" : \"-\";\n    this.buffer.addElement(t);\n    const s = R.createRecord(t, e, this.timings), n = R.evaluate(s);\n    this.evaluations.push(n), this.callbacks.onKeyRelease?.(t), this.callbacks.onSequenceUpdate?.(this.buffer.getSequence()), this.callbacks.onTimingEvaluated?.(n), this.notifyBufferUpdate(), this.setupCharWordTimers();\n  }\n  /**\n   * 文字確定・語間スペースタイマーを設定する\n   */\n  setupCharWordTimers() {\n    this.timer.clearAll();\n    const e = this.timings.charGap;\n    this.timer.set(\"charGap\", () => {\n      const s = this.buffer.getSequence();\n      if (s) {\n        const n = m.morseToText([s]);\n        this.buffer.commitSequence(), this.callbacks.onCharacter?.(s, n || \"?\"), this.notifyBufferUpdate();\n      }\n    }, e);\n    const t = this.timings.wordGap;\n    this.timer.set(\"wordGap\", () => {\n      const s = this.buffer.getSequence();\n      if (s) {\n        const n = m.morseToText([s]);\n        this.buffer.commitSequence(), this.callbacks.onCharacter?.(s, n || \"?\");\n      }\n      this.buffer.addWordSeparator(), this.callbacks.onWordSeparator?.(), this.notifyBufferUpdate();\n    }, t);\n  }\n  /**\n   * バッファ更新を通知する\n   */\n  notifyBufferUpdate() {\n    const e = this.buffer.getBuffer(), t = e.trim().split(/\\s+/), s = m.morseToText(t);\n    this.callbacks.onBufferUpdate?.(e, s);\n  }\n  /**\n   * バッファとタイマーをクリアする\n   */\n  clear() {\n    this.buffer.clear(), this.timer.clearAll(), this.evaluations = [], this.notifyBufferUpdate();\n  }\n  /**\n   * 現在のモールス信号バッファを取得する\n   * @returns モールス信号文字列 (例: \".- -...\")\n   */\n  getBuffer() {\n    return this.buffer.getBuffer();\n  }\n  /**\n   * 現在入力中のシーケンスを取得する\n   * @returns シーケンス文字列 (例: \".-\")\n   */\n  getSequence() {\n    return this.buffer.getSequence();\n  }\n  /**\n   * 現在のバッファを解読した文字列を取得する\n   * @returns 解読された文字列 (例: \"AB\")\n   */\n  getDecoded() {\n    const t = this.buffer.getBuffer().trim().split(/\\s+/);\n    return m.morseToText(t);\n  }\n  /**\n   * キーが現在押されているかどうかを取得する\n   * @returns キーが押されている場合true\n   */\n  isKeyDown() {\n    return this.keyDown;\n  }\n  /**\n   * タイマーの状態を取得する（主にテスト用）\n   * @returns アクティブなタイマーの数\n   */\n  getTimerCount() {\n    return this.timer.count();\n  }\n  /**\n   * タイミング評価の統計情報を取得する\n   * @returns 統計情報\n   */\n  getTimingStatistics() {\n    return R.calculateStatistics(this.evaluations);\n  }\n  /**\n   * 最近のN件のタイミング評価結果を取得する\n   * @param count - 取得する件数\n   * @returns タイミング評価結果の配列\n   */\n  getRecentEvaluations(e) {\n    return R.getRecent(this.evaluations, e);\n  }\n  /**\n   * 全てのタイミング評価結果を取得する\n   * @returns タイミング評価結果の配列\n   */\n  getAllEvaluations() {\n    return [...this.evaluations];\n  }\n  /**\n   * 要素タイプ（dot/dash）別の統計情報を取得する\n   * @returns dot/dash別の統計情報\n   */\n  getStatisticsByElement() {\n    const e = R.classifyByElement(this.evaluations);\n    return {\n      dot: R.calculateStatistics(e.dot),\n      dash: R.calculateStatistics(e.dash)\n    };\n  }\n}\nclass K {\n  /**\n   * 横振り電鍵トレーナーを初期化する\n   * @param buffer - モールスバッファインスタンス\n   * @param timer - タイマーマネージャーインスタンス\n   * @param timings - タイミング設定\n   * @param callbacks - イベントコールバック\n   * @param settings - トレーナー設定\n   */\n  constructor(e, t, s, n = {}, r = {}) {\n    this.buffer = e, this.timer = t, this.timings = s, this.callbacks = n, this.leftDown = !1, this.rightDown = !1, this.sending = !1, this.lastSent = null, this.forceNextElement = null, this.squeezeDetected = !1, this.isSqueezing = !1, this.iambicMode = r.iambicMode || \"A\", this.paddleLayout = r.paddleLayout || \"normal\";\n  }\n  /**\n   * 左パドルが押された時の処理\n   */\n  leftPaddlePress() {\n    if (this.leftDown = !0, this.updateSqueezeState(), this.iambicMode === \"B\" && this.sending && this.rightDown) {\n      const e = this.paddleLayout === \"reversed\" ? \"-\" : \".\";\n      this.forceNextElement = e, this.squeezeDetected = !0;\n    }\n    if (!this.sending) {\n      const e = this.paddleLayout === \"reversed\" ? \"-\" : \".\";\n      this.sendPaddleElement(e);\n    }\n  }\n  /**\n   * 右パドルが押された時の処理\n   */\n  rightPaddlePress() {\n    if (this.rightDown = !0, this.updateSqueezeState(), this.iambicMode === \"B\" && this.sending && this.leftDown) {\n      const e = this.paddleLayout === \"reversed\" ? \".\" : \"-\";\n      this.forceNextElement = e, this.squeezeDetected = !0;\n    }\n    if (!this.sending) {\n      const e = this.paddleLayout === \"reversed\" ? \".\" : \"-\";\n      this.sendPaddleElement(e);\n    }\n  }\n  /**\n   * 左パドルが離された時の処理\n   */\n  leftPaddleRelease() {\n    this.leftDown = !1, this.updateSqueezeState();\n  }\n  /**\n   * 右パドルが離された時の処理\n   */\n  rightPaddleRelease() {\n    this.rightDown = !1, this.updateSqueezeState();\n  }\n  /**\n   * パドル要素を送信する\n   * @param element - 送信する要素 ('.' | '-')\n   */\n  sendPaddleElement(e) {\n    if (this.sending) return;\n    this.sending = !0, this.timer.clearAll(), this.leftDown && this.rightDown || (this.squeezeDetected = !1);\n    const t = e === \".\" ? this.timings.dot : this.timings.dash;\n    this.callbacks.onElementStart?.(e, t), this.buffer.addElement(e), this.lastSent = e, this.callbacks.onSequenceUpdate?.(this.buffer.getSequence()), this.notifyBufferUpdate(), this.timer.set(\"iambicCheck\", () => {\n      const s = this.leftDown && this.rightDown;\n      this.iambicMode === \"B\" && this.squeezeDetected && !this.forceNextElement && (this.forceNextElement = e === \".\" ? \"-\" : \".\"), s && !this.forceNextElement && (this.forceNextElement = e === \".\" ? \"-\" : \".\");\n    }, Math.max(0, t - 5)), this.timer.set(\"elementEnd\", () => {\n      this.sending = !1, this.callbacks.onElementEnd?.(e), this.forceNextElement ? this.scheduleNext() : this.leftDown || this.rightDown ? this.scheduleNext() : this.setupCharWordTimers();\n    }, t + this.timings.dot);\n  }\n  /**\n   * 次の要素をスケジュールする\n   */\n  scheduleNext() {\n    if (this.forceNextElement) {\n      const e = this.forceNextElement;\n      this.forceNextElement = null, this.sendPaddleElement(e);\n    } else if (this.leftDown && this.rightDown) {\n      const e = this.lastSent === \".\" ? \"-\" : \".\";\n      this.sendPaddleElement(e);\n    } else if (this.leftDown) {\n      const e = this.paddleLayout === \"reversed\" ? \"-\" : \".\";\n      this.sendPaddleElement(e);\n    } else if (this.rightDown) {\n      const e = this.paddleLayout === \"reversed\" ? \".\" : \"-\";\n      this.sendPaddleElement(e);\n    }\n  }\n  /**\n   * 文字確定・語間スペースタイマーを設定する\n   */\n  setupCharWordTimers() {\n    this.timer.clearAll(), this.timer.set(\"charGap\", () => {\n      const e = this.buffer.getSequence();\n      if (e) {\n        const t = m.morseToText([e]);\n        this.buffer.commitSequence(), this.callbacks.onCharacter?.(e, t || \"?\"), this.notifyBufferUpdate();\n      }\n    }, this.timings.charGap), this.timer.set(\"wordGap\", () => {\n      const e = this.buffer.getSequence();\n      if (e) {\n        const t = m.morseToText([e]);\n        this.buffer.commitSequence(), this.callbacks.onCharacter?.(e, t || \"?\");\n      }\n      this.buffer.addWordSeparator(), this.callbacks.onWordSeparator?.(), this.notifyBufferUpdate();\n    }, this.timings.wordGap);\n  }\n  /**\n   * スクイーズ状態を更新する\n   */\n  updateSqueezeState() {\n    const e = this.leftDown && this.rightDown;\n    this.isSqueezing !== e && (this.isSqueezing = e, this.callbacks.onSqueezeChange?.(e));\n  }\n  /**\n   * バッファ更新を通知する\n   */\n  notifyBufferUpdate() {\n    const e = this.buffer.getBuffer(), t = e.trim().split(/\\s+/), s = m.morseToText(t);\n    this.callbacks.onBufferUpdate?.(e, s);\n  }\n  /**\n   * バッファとタイマーをクリアする\n   */\n  clear() {\n    this.buffer.clear(), this.timer.clearAll(), this.sending = !1, this.forceNextElement = null, this.squeezeDetected = !1, this.lastSent = null, this.notifyBufferUpdate();\n  }\n  /**\n   * 現在のモールス信号バッファを取得する\n   * @returns モールス信号文字列 (例: \".- -...\")\n   */\n  getBuffer() {\n    return this.buffer.getBuffer();\n  }\n  /**\n   * 現在入力中のシーケンスを取得する\n   * @returns シーケンス文字列 (例: \".-\")\n   */\n  getSequence() {\n    return this.buffer.getSequence();\n  }\n  /**\n   * 現在のバッファを解読した文字列を取得する\n   * @returns 解読された文字列 (例: \"AB\")\n   */\n  getDecoded() {\n    const t = this.buffer.getBuffer().trim().split(/\\s+/);\n    return m.morseToText(t);\n  }\n  /**\n   * 左パドルが押されているかどうかを取得する\n   * @returns 左パドルが押されている場合true\n   */\n  isLeftPaddleDown() {\n    return this.leftDown;\n  }\n  /**\n   * 右パドルが押されているかどうかを取得する\n   * @returns 右パドルが押されている場合true\n   */\n  isRightPaddleDown() {\n    return this.rightDown;\n  }\n  /**\n   * 現在送信中かどうかを取得する\n   * @returns 送信中の場合true\n   */\n  isSending() {\n    return this.sending;\n  }\n  /**\n   * スクイーズ中かどうかを取得する\n   * @returns スクイーズ中の場合true\n   */\n  isSqueezingNow() {\n    return this.isSqueezing;\n  }\n  /**\n   * Iambicモードを設定する\n   * @param mode - 'A' または 'B'\n   */\n  setIambicMode(e) {\n    this.iambicMode = e;\n  }\n  /**\n   * パドルレイアウトを設定する\n   * @param layout - 'normal' または 'reversed'\n   */\n  setPaddleLayout(e) {\n    this.paddleLayout = e;\n  }\n  /**\n   * 現在のIambicモードを取得する\n   * @returns 'A' または 'B'\n   */\n  getIambicMode() {\n    return this.iambicMode;\n  }\n  /**\n   * 現在のパドルレイアウトを取得する\n   * @returns 'normal' または 'reversed'\n   */\n  getPaddleLayout() {\n    return this.paddleLayout;\n  }\n}\nconst M = [\n  \"K\",\n  \"M\",\n  \"U\",\n  \"R\",\n  \"E\",\n  \"S\",\n  \"N\",\n  \"A\",\n  \"P\",\n  \"T\",\n  \"L\",\n  \"W\",\n  \"I\",\n  \".\",\n  \"J\",\n  \"Z\",\n  \"=\",\n  \"F\",\n  \"O\",\n  \"Y\",\n  \",\",\n  \"V\",\n  \"G\",\n  \"5\",\n  \"/\",\n  \"Q\",\n  \"9\",\n  \"2\",\n  \"H\",\n  \"3\",\n  \"8\",\n  \"B\",\n  \"?\",\n  \"4\",\n  \"7\",\n  \"C\",\n  \"1\",\n  \"D\",\n  \"6\",\n  \"0\",\n  \"X\"\n];\nclass N {\n  /**\n   * コッホ法トレーナーを初期化する\n   * @param initialLesson - 初期レッスン番号（1-40、デフォルト: 1）\n   */\n  constructor(e = 1) {\n    this.currentLesson = 1, this.currentLesson = Math.max(1, Math.min(40, e));\n  }\n  /**\n   * レッスン番号で学習する文字を取得\n   * @param lessonNum - レッスン番号（1-40）\n   * @returns 学習文字の配列\n   */\n  static getCharsForLesson(e) {\n    const t = Math.max(1, Math.min(40, e));\n    return M.slice(0, t + 1);\n  }\n  /**\n   * ランダムな文字グループを生成\n   * @param chars - 使用する文字の配列\n   * @param settings - 練習設定\n   * @returns 文字グループの配列\n   */\n  static generateRandomGroups(e, t = {}) {\n    const s = t.groupSize || 5, n = t.duration || 60, r = t.wpm || 20, i = Math.floor(n * r / (s * 5)), a = [];\n    for (let o = 0; o < i; o++) {\n      let h = \"\";\n      for (let A = 0; A < s; A++) {\n        const l = e[Math.floor(Math.random() * e.length)];\n        h += l;\n      }\n      a.push(h);\n    }\n    return a;\n  }\n  /**\n   * 指定した文字セットでランダムグループを生成\n   * @param charSet - 使用する文字セット\n   * @param settings - 練習設定\n   * @returns 文字グループの配列\n   */\n  static generateCustomGroups(e, t = {}) {\n    const s = Array.from(e);\n    if (s.length < 2)\n      throw new Error(\"文字セットには最低2文字必要です\");\n    return N.generateRandomGroups(s, t);\n  }\n  /**\n   * 正答率を計算する\n   * @param correctAnswer - 正解の文字列\n   * @param userInput - ユーザー入力の文字列\n   * @returns 正答率（0-100）\n   */\n  static calculateAccuracy(e, t) {\n    if (!t) return 0;\n    const s = e.replace(/\\s/g, \"\"), n = t.replace(/\\s/g, \"\"), r = Math.max(s.length, n.length);\n    if (r === 0) return 0;\n    let i = 0;\n    for (let a = 0; a < r; a++)\n      s[a] === n[a] && i++;\n    return i / r * 100;\n  }\n  /**\n   * 合格判定（90%以上）\n   * @param accuracy - 正答率（0-100）\n   * @returns 合格の場合true\n   */\n  static isPassed(e) {\n    return e >= 90;\n  }\n  /**\n   * 現在のレッスン番号を取得\n   * @returns レッスン番号（1-40）\n   */\n  getCurrentLesson() {\n    return this.currentLesson;\n  }\n  /**\n   * レッスン番号を設定\n   * @param lessonNum - レッスン番号（1-40）\n   */\n  setCurrentLesson(e) {\n    this.currentLesson = Math.max(1, Math.min(40, e));\n  }\n  /**\n   * 現在のレッスンで学習する文字を取得\n   * @returns 学習文字の配列\n   */\n  getCurrentChars() {\n    return N.getCharsForLesson(this.currentLesson);\n  }\n  /**\n   * 現在のレッスン用の練習問題を生成\n   * @param settings - 練習設定\n   * @returns 練習問題（文字グループの配列）\n   */\n  generatePractice(e = {}) {\n    const t = this.getCurrentChars();\n    return N.generateRandomGroups(t, e);\n  }\n  /**\n   * 次のレッスンに進む\n   * @returns 次のレッスン番号（最大40）\n   */\n  advanceLesson() {\n    return this.currentLesson < 40 && this.currentLesson++, this.currentLesson;\n  }\n  /**\n   * 前のレッスンに戻る\n   * @returns 前のレッスン番号（最小1）\n   */\n  previousLesson() {\n    return this.currentLesson > 1 && this.currentLesson--, this.currentLesson;\n  }\n  /**\n   * 最後のレッスンかどうかを判定\n   * @returns 最後のレッスンの場合true\n   */\n  isLastLesson() {\n    return this.currentLesson === 40;\n  }\n  /**\n   * 最初のレッスンかどうかを判定\n   * @returns 最初のレッスンの場合true\n   */\n  isFirstLesson() {\n    return this.currentLesson === 1;\n  }\n  /**\n   * 全レッスン数を取得\n   * @returns 全レッスン数（40）\n   */\n  static getTotalLessons() {\n    return 40;\n  }\n  /**\n   * 全文字数を取得\n   * @returns 全文字数（41）\n   */\n  static getTotalChars() {\n    return M.length;\n  }\n  /**\n   * コッホシーケンス全体を取得\n   * @returns 全41文字の配列\n   */\n  static getAllChars() {\n    return [...M];\n  }\n}\n//! 日本の都市名（ローマ字）。\nconst D = [\n  \"TOKYO\",\n  \"OSAKA\",\n  \"KYOTO\",\n  \"NAGOYA\",\n  \"YOKOHAMA\",\n  \"KOBE\",\n  \"FUKUOKA\",\n  \"SAPPORO\",\n  \"SENDAI\",\n  \"HIROSHIMA\",\n  \"KAWASAKI\",\n  \"SAITAMA\",\n  \"CHIBA\",\n  \"KITAKYUSHU\",\n  \"SAKAI\",\n  \"NIIGATA\",\n  \"HAMAMATSU\",\n  \"KUMAMOTO\",\n  \"OKAYAMA\",\n  \"SAGAMIHARA\",\n  \"SHIZUOKA\",\n  \"KAGOSHIMA\",\n  \"MATSUYAMA\",\n  \"GIFU\",\n  \"UTSUNOMIYA\",\n  \"KANAZAWA\",\n  \"TOYAMA\",\n  \"NARA\",\n  \"NAGASAKI\",\n  \"OITA\",\n  \"KOCHI\",\n  \"MIYAZAKI\",\n  \"NAHA\",\n  \"WAKAYAMA\",\n  \"AOMORI\",\n  \"AKITA\",\n  \"FUKUSHIMA\",\n  \"MORIOKA\",\n  \"MAEBASHI\",\n  \"KOFU\",\n  \"MATSUMOTO\",\n  \"TOYOHASHI\",\n  \"FUKUI\",\n  \"OTSU\",\n  \"TSU\",\n  \"YOKKAICHI\",\n  \"MATSUE\",\n  \"TOTTORI\",\n  \"YAMAGUCHI\",\n  \"TOKUSHIMA\",\n  \"TAKAMATSU\",\n  \"MITO\",\n  \"KORIYAMA\",\n  \"IWAKI\",\n  \"TAKASAKI\",\n  \"HACHIOJI\",\n  \"MACHIDA\",\n  \"KURASHIKI\",\n  \"HIMEJI\",\n  \"NISHINOMIYA\",\n  \"AMAGASAKI\",\n  \"TAKATSUKI\",\n  \"TOYONAKA\",\n  \"SUITA\",\n  \"KAWAGUCHI\",\n  \"FUNABASHI\",\n  \"HAKODATE\",\n  \"ASAHIKAWA\",\n  \"OTARU\",\n  \"KUSHIRO\",\n  \"OBIHIRO\",\n  \"TOMAKOMAI\",\n  \"IWAMIZAWA\",\n  \"HACHINOHE\",\n  \"HIROSAKI\",\n  \"ISHINOMAKI\",\n  \"YAMAGATA\",\n  \"TSURUOKA\",\n  \"YONEZAWA\",\n  \"HITACHI\",\n  \"TSUKUBA\",\n  \"KASUKABE\",\n  \"KAWAGOE\",\n  \"TOKOROZAWA\",\n  \"AGEO\",\n  \"FUCHU\",\n  \"CHOFU\",\n  \"HINO\",\n  \"KOKUBUNJI\",\n  \"ATSUGI\",\n  \"ODAWARA\",\n  \"HIRATSUKA\",\n  \"FUJISAWA\",\n  \"KAMAKURA\",\n  \"ZUSHI\",\n  \"NUMAZU\",\n  \"FUJI\",\n  \"MISHIMA\",\n  \"KAKEGAWA\",\n  \"IWATA\"\n];\n//! 名前（ファーストネーム）。\nconst L = [\n  \"JOHN\",\n  \"MIKE\",\n  \"TOM\",\n  \"DAVE\",\n  \"BOB\",\n  \"BILL\",\n  \"JIM\",\n  \"JACK\",\n  \"FRANK\",\n  \"PAUL\",\n  \"MARK\",\n  \"DAN\",\n  \"KEN\",\n  \"RON\",\n  \"RICK\",\n  \"STEVE\",\n  \"GEORGE\",\n  \"PETE\",\n  \"RAY\",\n  \"AL\",\n  \"FRED\",\n  \"JEFF\",\n  \"GARY\",\n  \"LARRY\",\n  \"DOUG\",\n  \"DENNIS\",\n  \"RANDY\",\n  \"SCOTT\",\n  \"BRIAN\",\n  \"BRUCE\",\n  \"ERIC\",\n  \"KEVIN\",\n  \"CRAIG\",\n  \"GLENN\",\n  \"GREG\",\n  \"WAYNE\",\n  \"CARL\",\n  \"TONY\",\n  \"KEITH\",\n  \"CHRIS\",\n  \"DONALD\",\n  \"EDWARD\",\n  \"JOSEPH\",\n  \"RICHARD\",\n  \"ROBERT\",\n  \"CHARLES\",\n  \"WILLIAM\",\n  \"THOMAS\",\n  \"JAMES\",\n  \"PATRICK\",\n  \"HENRY\",\n  \"HAROLD\",\n  \"HOWARD\",\n  \"WALTER\",\n  \"ARTHUR\",\n  \"ALBERT\",\n  \"EUGENE\",\n  \"RALPH\",\n  \"LAWRENCE\",\n  \"HERBERT\",\n  \"CLARENCE\",\n  \"ERNEST\",\n  \"WILLIE\",\n  \"ANDREW\",\n  \"SAMUEL\",\n  \"LOUIS\",\n  \"OSCAR\",\n  \"LEONARD\",\n  \"ROY\",\n  \"EARL\",\n  \"CHESTER\",\n  \"CLIFFORD\",\n  \"NORMAN\",\n  \"CLYDE\",\n  \"HOMER\",\n  \"STANLEY\",\n  \"LESTER\",\n  \"MORRIS\",\n  \"RAYMOND\",\n  \"LEWIS\",\n  \"LEON\",\n  \"EDDIE\",\n  \"CHARLIE\",\n  \"FLOYD\",\n  \"FRED\",\n  \"MARTIN\",\n  \"MELVIN\",\n  \"MARVIN\",\n  \"IRVING\",\n  \"HARVEY\",\n  \"SAM\",\n  \"MAX\",\n  \"MACK\",\n  \"JOE\",\n  \"ABE\",\n  \"HARRY\",\n  \"NED\",\n  \"GUS\",\n  \"BERT\",\n  \"EARL\"\n];\n//! CW用無線機のリスト。\nconst H = [\n  \"FT-991A\",\n  \"FT-891\",\n  \"FT-857D\",\n  \"FT-450D\",\n  \"FT-101ES\",\n  // Yaesu\n  \"IC-7300\",\n  \"IC-7610\",\n  \"IC-9700\",\n  \"IC-705\",\n  \"IC-718\",\n  // ICOM\n  \"TS-590SG\",\n  \"TS-590S\",\n  \"TS-480SAT\",\n  \"TS-850S\",\n  \"TS-2000\"\n  // Kenwood\n];\n//! RSTレポートのリスト。\nconst v = [\n  \"599\",\n  \"589\",\n  \"579\",\n  \"569\",\n  \"559\",\n  \"449\",\n  \"339\"\n];\n//! QSOのサンプルテンプレート。\nconst p = [\n  {\n    id: \"qso-rubberstamp-1\",\n    category: \"qso\",\n    title: \"ラバースタンプQSO例: 完全な交信\",\n    dialog: [\n      { side: \"A\", text: \"CQ CQ CQ DE JF2SDR JF2SDR PSE K\" },\n      { side: \"B\", text: \"JF2SDR DE JR2ZWA JR2ZWA K\" },\n      { side: \"A\", text: \"R JR2ZWA DE JF2SDR GM OM TNX FER UR CALL BT UR RST IS 599 599 BT MI QTH IS NAGOYA NAGOYA CITY ES MI NAME IS SHIN SHIN HW ? AR JF2SDR DE JF2SDR KN\" },\n      { side: \"B\", text: \"R JF2SDR DE JR2ZWA GM DR SHIN OM TKS FER FB RPT 599 FM NAGOYA BT UR RST ALSO 599 599 VY FB MI QTH IS GIFU GIFU CITY BT NAME IS HIRO HIRO HW? JF2SDR DE JR2ZWA KN\" },\n      { side: \"A\", text: \"R FB DE JF2SDR DR HIRO OM BT MI RIG IS TS-850S PWR 100W ES ANT IS 3ELE YAGI 12MH BT PSE UR QSL CRD VIA JARL ? MI CRD SURE HW? AR JR2ZWA DE JF2SDR KN\" },\n      { side: \"B\", text: \"R JF2SDR DE JR2ZWA OK SHIN OM BT UR RIG ES ANT VY FB BT MI RIG IS FT-101ES VY OLD RIG ES ANT IS DP 8MH BT QSL VIA JARL OK SURE BT TNX FB 1ST QSO ES 73 AR JF2SDR DE JR2ZWA VA\" },\n      { side: \"A\", text: \"OK HIRO SOLID CPI BT TKS FB QSO ES BEST 73 AR JR2ZWA DE JF2SDR VA TU E E\" }\n    ]\n  },\n  {\n    id: \"qso-short-1\",\n    category: \"qso\",\n    title: \"QSO例: 短い交信（CQ呼び出しと応答）\",\n    dialog: [\n      { side: \"A\", text: \"CQ CQ CQ DE JA1ABC JA1ABC PSE K\" },\n      { side: \"B\", text: \"JA1ABC DE JE1XYZ JE1XYZ K\" },\n      { side: \"A\", text: \"R JE1XYZ DE JA1ABC TKS UR RST 599 QTH TOKYO TKS QSO 73 AR JA1ABC DE JA1ABC VA\" },\n      { side: \"B\", text: \"R JA1ABC DE JE1XYZ TKS 599 QTH OSAKA 73 AR JE1XYZ VA\" }\n    ]\n  },\n  {\n    id: \"qso-short-2\",\n    category: \"qso\",\n    title: \"QSO例: 挨拶と信号報告のみ\",\n    dialog: [\n      { side: \"A\", text: \"CQ DX CQ DX DE JH8ZZZ JH8ZZZ K\" },\n      { side: \"B\", text: \"JH8ZZZ DE VK2AAA VK2AAA K\" },\n      { side: \"A\", text: \"R VK2AAA DE JH8ZZZ GM UR RST 579 NAME TARO QTH SAPPORO HW? AR JH8ZZZ KN\" },\n      { side: \"B\", text: \"R JH8ZZZ DE VK2AAA TKS TARO UR RST 589 NAME JOHN QTH SYDNEY 73 AR VK2AAA VA\" },\n      { side: \"A\", text: \"R VK2AAA TNX QSO 73 AR JH8ZZZ VA TU\" }\n    ]\n  }\n];\n//! 英文100字程度のサンプルテンプレート。\nconst O = [\n  {\n    id: \"text100-1\",\n    category: \"text100\",\n    title: \"英文例1: 自己紹介\",\n    content: \"MY NAME IS JOHN. I LIVE IN TOKYO JAPAN. I AM A STUDENT AT THE UNIVERSITY. I ENJOY LEARNING MORSE CODE IN MY FREE TIME.\"\n  },\n  {\n    id: \"text100-2\",\n    category: \"text100\",\n    title: \"英文例2: 天気\",\n    content: \"THE WEATHER TODAY IS VERY NICE. IT IS SUNNY AND WARM. I WENT FOR A WALK IN THE PARK. MANY PEOPLE WERE ENJOYING THE SUNSHINE.\"\n  },\n  {\n    id: \"text100-3\",\n    category: \"text100\",\n    title: \"英文例3: 趣味\",\n    content: \"I HAVE MANY HOBBIES. I LIKE READING BOOKS AND LISTENING TO MUSIC. ON WEEKENDS I PLAY TENNIS WITH MY FRIENDS. WE HAVE A LOT OF FUN.\"\n  }\n];\n//! 英文200字程度のサンプルテンプレート。\nconst y = [\n  {\n    id: \"text200-1\",\n    category: \"text200\",\n    title: \"英文例1: アマチュア無線の歴史\",\n    content: \"AMATEUR RADIO HAS A LONG AND RICH HISTORY. IT BEGAN IN THE EARLY TWENTIETH CENTURY WHEN ENTHUSIASTS STARTED EXPERIMENTING WITH RADIO WAVES. MORSE CODE WAS THE PRIMARY MODE OF COMMUNICATION. TODAY AMATEUR RADIO CONTINUES TO BE A POPULAR HOBBY AROUND THE WORLD. OPERATORS USE VARIOUS MODES INCLUDING CW SSB AND DIGITAL MODES. IT IS A GREAT WAY TO MAKE FRIENDS AND LEARN ABOUT TECHNOLOGY.\"\n  },\n  {\n    id: \"text200-2\",\n    category: \"text200\",\n    title: \"英文例2: 旅行の思い出\",\n    content: \"LAST SUMMER I WENT ON A TRIP TO KYOTO. IT WAS MY FIRST TIME VISITING THE ANCIENT CAPITAL OF JAPAN. I VISITED MANY FAMOUS TEMPLES AND SHRINES. THE ARCHITECTURE WAS BEAUTIFUL AND THE GARDENS WERE PEACEFUL. I ALSO ENJOYED TRYING LOCAL FOODS LIKE TOFU AND GREEN TEA. THE PEOPLE WERE VERY FRIENDLY AND HELPFUL. I TOOK MANY PHOTOS TO REMEMBER THIS WONDERFUL EXPERIENCE. I HOPE TO RETURN SOMEDAY.\"\n  }\n];\n//! 英文300字程度のサンプルテンプレート。\nconst C = [\n  {\n    id: \"text300-1\",\n    category: \"text300\",\n    title: \"英文例1: モールス符号の学習\",\n    content: \"LEARNING MORSE CODE IS A REWARDING EXPERIENCE. AT FIRST IT MAY SEEM DIFFICULT BUT WITH REGULAR PRACTICE IT BECOMES EASIER. THE KOCH METHOD IS ONE OF THE MOST EFFECTIVE WAYS TO LEARN. IT STARTS WITH JUST TWO CHARACTERS AND GRADUALLY ADDS MORE. THIS APPROACH HELPS YOU LEARN AT A STEADY PACE. LISTENING PRACTICE IS ALSO VERY IMPORTANT. YOU SHOULD TRY TO COPY REAL MORSE CODE TRANSMISSIONS. MANY ONLINE RESOURCES ARE AVAILABLE TO HELP YOU PRACTICE. JOINING AN AMATEUR RADIO CLUB CAN ALSO BE BENEFICIAL. YOU CAN MEET OTHER ENTHUSIASTS AND SHARE EXPERIENCES. WITH DEDICATION AND PATIENCE YOU WILL MASTER MORSE CODE AND ENJOY USING IT IN YOUR RADIO COMMUNICATIONS.\"\n  },\n  {\n    id: \"text300-2\",\n    category: \"text300\",\n    title: \"英文例2: 無線交信の楽しみ\",\n    content: \"AMATEUR RADIO OFFERS MANY EXCITING OPPORTUNITIES. ONE OF THE GREATEST JOYS IS MAKING CONTACT WITH STATIONS AROUND THE WORLD. YOU CAN TALK TO PEOPLE FROM DIFFERENT COUNTRIES AND CULTURES. EACH CONTACT IS UNIQUE AND SPECIAL. SOME OPERATORS ENJOY CONTESTS WHERE THEY TRY TO MAKE AS MANY CONTACTS AS POSSIBLE. OTHERS PREFER RELAXED CONVERSATIONS ABOUT HOBBIES AND DAILY LIFE. DX CONTACTS WITH DISTANT STATIONS ARE PARTICULARLY THRILLING. THE THRILL OF HEARING A WEAK SIGNAL FROM FAR AWAY IS UNFORGETTABLE. OPERATING PORTABLE FROM MOUNTAINTOPS OR PARKS IS ALSO FUN. YOU CAN COMBINE YOUR LOVE OF RADIO WITH OUTDOOR ACTIVITIES. AMATEUR RADIO IS MORE THAN A HOBBY IT IS A LIFELONG PASSION.\"\n  }\n];\nclass F {\n  /**\n   * ランダムなコールサインを生成する\n   * @returns JA/JE/JF等のプレフィックス + 0-9のエリア番号 + 3文字のサフィックス\n   */\n  static generateCallsign() {\n    const e = [\"JA\", \"JE\", \"JF\", \"JH\", \"JI\", \"JJ\", \"JK\", \"JL\", \"JM\", \"JN\", \"JO\", \"JP\", \"JQ\", \"JR\"], t = e[Math.floor(Math.random() * e.length)], s = Math.floor(Math.random() * 10), n = String.fromCharCode(65 + Math.floor(Math.random() * 26)) + String.fromCharCode(65 + Math.floor(Math.random() * 26)) + String.fromCharCode(65 + Math.floor(Math.random() * 26));\n    return `${t}${s}${n}`;\n  }\n  /**\n   * 配列からランダムな要素を選択する\n   * @param array - 選択元の配列\n   * @returns ランダムに選ばれた要素\n   */\n  static randomChoice(e) {\n    return e[Math.floor(Math.random() * e.length)];\n  }\n  /**\n   * ランダムなQSOを生成する\n   * @returns 完全なQSOテンプレート\n   */\n  static generateRandomQSO() {\n    const e = this.generateCallsign(), t = this.generateCallsign(), s = this.randomChoice(D), n = this.randomChoice(D), r = this.randomChoice(L), i = this.randomChoice(L), a = this.randomChoice(v), o = this.randomChoice(v), h = this.randomChoice(H), A = this.randomChoice(H), l = this.randomChoice([\"GM\", \"GA\", \"GE\", \"GN\"]);\n    return {\n      id: `qso-random-${Date.now()}`,\n      category: \"qso\",\n      title: \"ランダムQSO\",\n      dialog: [\n        { side: \"A\", text: `CQ CQ CQ DE ${e} ${e} PSE K` },\n        { side: \"B\", text: `${e} DE ${t} ${t} K` },\n        { side: \"A\", text: `R ${t} DE ${e} ${l} OM TNX FER UR CALL BT UR RST IS ${o} ${o} BT MI QTH IS ${s} ${s} ES MI NAME IS ${r} ${r} HW ? AR ${e} DE ${e} KN` },\n        { side: \"B\", text: `R ${e} DE ${t} ${l} DR ${r} OM TKS FER FB RPT ${o} FM ${s} BT UR RST ALSO ${a} ${a} VY FB MI QTH IS ${n} ${n} BT NAME IS ${i} ${i} HW? ${e} DE ${t} KN` },\n        { side: \"A\", text: `R FB DE ${e} DR ${i} OM BT MI RIG IS ${h} PWR 100W BT PSE UR QSL CRD VIA JARL ? MI CRD SURE HW? AR ${t} DE ${e} KN` },\n        { side: \"B\", text: `R ${e} DE ${t} OK ${r} OM BT UR RIG ${h} VY FB BT MI RIG IS ${A} BT QSL VIA JARL OK SURE BT TNX FB QSO ES 73 AR ${e} DE ${t} VA` },\n        { side: \"A\", text: `OK ${i} SOLID CPI BT TKS FB QSO ES BEST 73 AR ${t} DE ${e} VA TU E E` }\n      ]\n    };\n  }\n  /**\n   * カテゴリー別にビルトインテンプレートを取得する\n   * @param category - テンプレートカテゴリー（省略時は全カテゴリー）\n   * @returns テンプレートの配列\n   */\n  static getBuiltinTemplates(e) {\n    if (!e)\n      return [...p, ...O, ...y, ...C];\n    switch (e) {\n      case \"qso\":\n        return [...p];\n      case \"text100\":\n        return [...O];\n      case \"text200\":\n        return [...y];\n      case \"text300\":\n        return [...C];\n      default:\n        return [];\n    }\n  }\n  /**\n   * IDでテンプレートを検索する\n   * @param id - テンプレートID\n   * @returns 該当するテンプレート（見つからない場合はundefined）\n   */\n  static getTemplateById(e) {\n    return this.getBuiltinTemplates().find((s) => s.id === e);\n  }\n  /**\n   * 正答率を計算する\n   * @param correctAnswer - 正解の文字列\n   * @param userInput - ユーザー入力の文字列\n   * @returns 正答率（0-100）\n   */\n  static calculateAccuracy(e, t) {\n    if (!t) return 0;\n    //! 空白を除去して大文字化して比較。\n    const s = e.replace(/\\s/g, \"\").toUpperCase(), n = t.replace(/\\s/g, \"\").toUpperCase(), r = Math.max(s.length, n.length);\n    if (r === 0) return 0;\n    let i = 0;\n    for (let a = 0; a < r; a++)\n      s[a] === n[a] && i++;\n    return Math.round(i / r * 100);\n  }\n  /**\n   * 合格判定\n   * @param accuracy - 正答率（0-100）\n   * @param threshold - 合格ライン（デフォルト: 90）\n   * @returns 合格の場合true\n   */\n  static isPassed(e, t = 90) {\n    return e >= t;\n  }\n  /**\n   * 全カテゴリーのテンプレート数を取得する\n   * @returns カテゴリーごとのテンプレート数\n   */\n  static getTemplateCounts() {\n    return {\n      qso: p.length,\n      text100: O.length,\n      text200: y.length,\n      text300: C.length\n    };\n  }\n  /**\n   * 全ビルトインテンプレートの総数を取得する\n   * @returns 全テンプレート数\n   */\n  static getTotalTemplateCount() {\n    return p.length + O.length + y.length + C.length;\n  }\n}\nclass G {\n  /**\n   * カードをシャッフルする（Fisher-Yates shuffle）\n   * @param cards - シャッフルするカードの配列\n   * @returns シャッフルされたカードの配列\n   */\n  static shuffleCards(e) {\n    const t = [...e];\n    for (let s = t.length - 1; s > 0; s--) {\n      const n = Math.floor(Math.random() * (s + 1));\n      [t[s], t[n]] = [t[n], t[s]];\n    }\n    return t;\n  }\n  /**\n   * 試験問題を生成する\n   * @param entries - 問題の元となるエントリーの配列\n   * @param questionType - 出題形式\n   * @param count - 問題数（entriesの長さを超える場合はentriesの長さになる）\n   * @returns 試験問題の配列\n   */\n  static generateExamQuestions(e, t, s) {\n    if (e.length === 0) return [];\n    const n = Math.min(s, e.length);\n    return this.shuffleCards(e).slice(0, n).map((a) => this.createQuestion(a, e, t));\n  }\n  /**\n   * 1つの試験問題を作成する\n   * @param entry - 正解となるエントリー\n   * @param allEntries - 選択肢生成用の全エントリー\n   * @param questionType - 出題形式\n   * @returns 試験問題\n   */\n  static createQuestion(e, t, s) {\n    //! 正解以外のエントリーから3つ選ぶ。\n    const n = t.filter((a) => a.abbreviation !== e.abbreviation).sort(() => Math.random() - 0.5).slice(0, 3);\n    let r, i;\n    switch (s) {\n      case \"abbr-to-meaning\":\n      case \"morse-to-meaning\":\n        r = `${e.english} / ${e.japanese}`, i = [r, ...n.map((a) => `${a.english} / ${a.japanese}`)];\n        break;\n      case \"meaning-to-abbr\":\n      case \"morse-to-abbr\":\n        r = e.abbreviation, i = [r, ...n.map((a) => a.abbreviation)];\n        break;\n    }\n    //! 選択肢をシャッフル。\n    return i = i.sort(() => Math.random() - 0.5), {\n      type: s,\n      entry: e,\n      choices: i,\n      correctAnswer: r\n    };\n  }\n  /**\n   * ユーザーの回答が正解かどうかを判定する\n   * @param question - 試験問題\n   * @param userAnswer - ユーザーの回答\n   * @returns 正解の場合true\n   */\n  static checkAnswer(e, t) {\n    return t === e.correctAnswer;\n  }\n  /**\n   * 試験結果のスコアを計算する\n   * @param results - 試験結果の配列\n   * @returns スコア情報\n   */\n  static calculateScore(e) {\n    const t = e.length, s = e.filter((r) => r.isCorrect).length, n = t > 0 ? Math.round(s / t * 100) : 0;\n    return {\n      correct: s,\n      total: t,\n      percentage: n\n    };\n  }\n  /**\n   * 合格判定\n   * @param percentage - 正答率（0-100）\n   * @param threshold - 合格ライン（デフォルト: 80）\n   * @returns 合格の場合true\n   */\n  static isPassed(e, t = 80) {\n    return e >= t;\n  }\n  /**\n   * 間違えた問題のエントリーを抽出する\n   * @param results - 試験結果の配列\n   * @returns 間違えたエントリーの配列\n   */\n  static getWrongAnswers(e) {\n    return e.filter((t) => !t.isCorrect).map((t) => t.question.entry);\n  }\n  /**\n   * 正解した問題のエントリーを抽出する\n   * @param results - 試験結果の配列\n   * @returns 正解したエントリーの配列\n   */\n  static getCorrectAnswers(e) {\n    return e.filter((t) => t.isCorrect).map((t) => t.question.entry);\n  }\n  /**\n   * タグでフィルタリングする\n   * @param entries - フィルタリング対象のエントリー配列\n   * @param tags - フィルタリングに使用するタグのセット\n   * @returns フィルタリングされたエントリー配列\n   */\n  static filterByTags(e, t) {\n    return t.size === 0 ? e : e.filter((s) => {\n      const n = s.tags.split(\",\").map((r) => r.trim());\n      return Array.from(t).some((r) => n.includes(r));\n    });\n  }\n  /**\n   * 使用頻度でフィルタリングする\n   * @param entries - フィルタリング対象のエントリー配列\n   * @param frequencies - フィルタリングに使用する頻度のセット（1-5）\n   * @returns フィルタリングされたエントリー配列\n   */\n  static filterByFrequencies(e, t) {\n    return t.size === 0 ? e : e.filter((s) => t.has(s.frequency));\n  }\n  /**\n   * 検索クエリでフィルタリングする\n   * @param entries - フィルタリング対象のエントリー配列\n   * @param query - 検索クエリ（略語、英語、日本語、タグから検索）\n   * @returns フィルタリングされたエントリー配列\n   */\n  static filterByQuery(e, t) {\n    if (!t.trim()) return e;\n    const s = t.toLowerCase();\n    return e.filter(\n      (n) => n.abbreviation.toLowerCase().includes(s) || n.english.toLowerCase().includes(s) || n.japanese.includes(t) || n.tags.toLowerCase().includes(s)\n    );\n  }\n  /**\n   * 全てのタグを抽出する\n   * @param entries - エントリー配列\n   * @returns ユニークなタグの配列（ソート済み）\n   */\n  static getAllTags(e) {\n    const t = /* @__PURE__ */ new Set();\n    return e.forEach((s) => {\n      s.tags.split(\",\").forEach((n) => {\n        const r = n.trim();\n        r && t.add(r);\n      });\n    }), Array.from(t).sort();\n  }\n  /**\n   * エントリーを略語でソートする\n   * @param entries - ソート対象のエントリー配列\n   * @param ascending - 昇順の場合true（デフォルト: true）\n   * @returns ソートされたエントリー配列\n   */\n  static sortByAbbreviation(e, t = !0) {\n    const s = [...e];\n    return s.sort((n, r) => {\n      const i = n.abbreviation.localeCompare(r.abbreviation);\n      return t ? i : -i;\n    }), s;\n  }\n  /**\n   * エントリーを使用頻度でソートする\n   * @param entries - ソート対象のエントリー配列\n   * @param ascending - 昇順の場合true（デフォルト: false、頻度の高い順）\n   * @returns ソートされたエントリー配列\n   */\n  static sortByFrequency(e, t = !1) {\n    const s = [...e];\n    return s.sort((n, r) => {\n      const i = n.frequency - r.frequency;\n      return t ? i : -i;\n    }), s;\n  }\n  /**\n   * エントリーを英語でソートする\n   * @param entries - ソート対象のエントリー配列\n   * @param ascending - 昇順の場合true（デフォルト: true）\n   * @returns ソートされたエントリー配列\n   */\n  static sortByEnglish(e, t = !0) {\n    const s = [...e];\n    return s.sort((n, r) => {\n      const i = n.english.localeCompare(r.english);\n      return t ? i : -i;\n    }), s;\n  }\n  /**\n   * エントリーを日本語でソートする\n   * @param entries - ソート対象のエントリー配列\n   * @param ascending - 昇順の場合true（デフォルト: true）\n   * @returns ソートされたエントリー配列\n   */\n  static sortByJapanese(e, t = !0) {\n    const s = [...e];\n    return s.sort((n, r) => {\n      const i = n.japanese.localeCompare(r.japanese, \"ja\");\n      return t ? i : -i;\n    }), s;\n  }\n  /**\n   * エントリーをタグでソートする\n   * @param entries - ソート対象のエントリー配列\n   * @param ascending - 昇順の場合true（デフォルト: true）\n   * @returns ソートされたエントリー配列\n   */\n  static sortByTags(e, t = !0) {\n    const s = [...e];\n    return s.sort((n, r) => {\n      const i = n.tags.localeCompare(r.tags);\n      return t ? i : -i;\n    }), s;\n  }\n}\nconst b = class b {\n  /**\n   * 進捗を保存する\n   */\n  static saveProgress(e) {\n    try {\n      const t = {\n        known: Array.from(e.known),\n        unknown: Array.from(e.unknown)\n      };\n      localStorage.setItem(\n        `${this.STORAGE_PREFIX}progress`,\n        JSON.stringify(t)\n      );\n    } catch (t) {\n      console.error(\"進捗保存エラー:\", t);\n    }\n  }\n  /**\n   * 進捗を読み込む\n   */\n  static loadProgress() {\n    try {\n      const e = localStorage.getItem(`${this.STORAGE_PREFIX}progress`);\n      if (e) {\n        const t = JSON.parse(e);\n        return {\n          known: new Set(t.known || []),\n          unknown: new Set(t.unknown || [])\n        };\n      }\n    } catch (e) {\n      console.error(\"進捗読み込みエラー:\", e);\n    }\n    return { known: /* @__PURE__ */ new Set(), unknown: /* @__PURE__ */ new Set() };\n  }\n  /**\n   * 進捗をクリアする\n   */\n  static clearProgress() {\n    try {\n      localStorage.removeItem(`${this.STORAGE_PREFIX}progress`);\n    } catch (e) {\n      console.error(\"進捗クリアエラー:\", e);\n    }\n  }\n  /**\n   * フィルター状態を保存する\n   */\n  static saveFilters(e) {\n    try {\n      const t = {\n        selectedTags: Array.from(e.selectedTags),\n        selectedFrequencies: Array.from(e.selectedFrequencies),\n        searchQuery: e.searchQuery\n      };\n      localStorage.setItem(\n        `${this.STORAGE_PREFIX}filters`,\n        JSON.stringify(t)\n      );\n    } catch (t) {\n      console.error(\"フィルター保存エラー:\", t);\n    }\n  }\n  /**\n   * フィルター状態を読み込む\n   */\n  static loadFilters() {\n    try {\n      const e = localStorage.getItem(`${this.STORAGE_PREFIX}filters`);\n      if (e) {\n        const t = JSON.parse(e);\n        return {\n          selectedTags: new Set(t.selectedTags || []),\n          selectedFrequencies: new Set(t.selectedFrequencies || [5]),\n          searchQuery: t.searchQuery || \"\"\n        };\n      }\n    } catch (e) {\n      console.error(\"フィルター読み込みエラー:\", e);\n    }\n    return {\n      selectedTags: /* @__PURE__ */ new Set(),\n      selectedFrequencies: /* @__PURE__ */ new Set([5]),\n      searchQuery: \"\"\n    };\n  }\n  /**\n   * ビュー状態を保存する\n   */\n  static saveViewState(e) {\n    try {\n      localStorage.setItem(\n        `${this.STORAGE_PREFIX}viewState`,\n        JSON.stringify(e)\n      );\n    } catch (t) {\n      console.error(\"ビュー状態保存エラー:\", t);\n    }\n  }\n  /**\n   * ビュー状態を読み込む\n   */\n  static loadViewState() {\n    try {\n      const e = localStorage.getItem(`${this.STORAGE_PREFIX}viewState`);\n      if (e)\n        return JSON.parse(e);\n    } catch (e) {\n      console.error(\"ビュー状態読み込みエラー:\", e);\n    }\n    return {\n      viewMode: \"browse\",\n      displayMode: \"card\",\n      sortColumn: \"abbreviation\",\n      sortDirection: \"asc\",\n      learnQuestionType: \"abbr-to-meaning\",\n      examQuestionType: \"abbr-to-meaning\"\n    };\n  }\n  /**\n   * viewModeのみ保存する\n   */\n  static saveViewMode(e) {\n    const t = this.loadViewState();\n    t.viewMode = e, this.saveViewState(t);\n  }\n  /**\n   * displayModeのみ保存する\n   */\n  static saveDisplayMode(e) {\n    const t = this.loadViewState();\n    t.displayMode = e, this.saveViewState(t);\n  }\n  /**\n   * learnQuestionTypeのみ保存する\n   */\n  static saveLearnQuestionType(e) {\n    const t = this.loadViewState();\n    t.learnQuestionType = e, this.saveViewState(t);\n  }\n  /**\n   * examQuestionTypeのみ保存する\n   */\n  static saveExamQuestionType(e) {\n    const t = this.loadViewState();\n    t.examQuestionType = e, this.saveViewState(t);\n  }\n  /**\n   * sortColumnとsortDirectionを保存する\n   */\n  static saveSortState(e, t) {\n    const s = this.loadViewState();\n    s.sortColumn = e, s.sortDirection = t, this.saveViewState(s);\n  }\n};\nb.STORAGE_PREFIX = \"v10.flashcard.\";\nlet U = b;\n//! 画面の種類。\n//! 入力タイプ。\n//! 設定項目の定義。\n//! 設定値の型。\n//! モーダルのコールバック関数。\nclass W {\n  /**\n   * コンストラクタ\n   *\n   * @param modalId - モーダルのID（重複を避けるため）\n   * @param items - 設定項目の配列\n   * @param currentValues - 現在の設定値\n   * @param callbacks - コールバック関数\n   */\n  constructor(e, t, s, n) {\n    this.modalId = e, this.items = t, this.currentValues = { ...s }, this.initialValues = { ...s }, this.callbacks = n;\n  }\n  /**\n   * モーダルを表示する\n   *\n   * @param screenType - 表示する画面の種類\n   */\n  show(e) {\n    //! この画面用の設定項目をフィルタリングして優先度順にソート。\n    const t = this.items.filter((n) => n.screens.includes(e)).sort((n, r) => n.priority - r.priority);\n    //! モーダルのHTMLを生成。\n    const s = this.generateModalHTML(t);\n    //! DOMに追加。\n    document.body.insertAdjacentHTML(\"beforeend\", s);\n    //! イベントリスナーを設定。\n    this.attachEventListeners(t);\n  }\n  /**\n   * モーダルのHTMLを生成する\n   *\n   * @param items - 表示する設定項目\n   * @returns モーダルのHTML\n   */\n  generateModalHTML(e) {\n    //! FlashcardかListeningかで使い分ける。\n    if (this.modalId.includes(\"flashcard\")) {\n      //! Flashcard用のモーダル（.settings-modal）。\n      return `\n\t\t\t\t<div class=\"settings-modal active\" id=\"${this.modalId}\">\n\t\t\t\t\t<div class=\"settings-content\">\n\t\t\t\t\t\t<h2>設定</h2>\n\t\t\t\t\t\t<div class=\"settings-grid\">\n\t\t\t\t\t\t\t${e.map((s) => this.generateSettingItemHTML(s)).join(\"\")}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"settings-buttons\">\n\t\t\t\t\t\t\t<button id=\"${this.modalId}-cancel\" class=\"secondary-button\">キャンセル</button>\n\t\t\t\t\t\t\t<button id=\"${this.modalId}-save\" class=\"primary-button\">OK</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;\n    } else {\n      //! Listening用のモーダル（.modal）。\n      return `\n\t\t\t\t<div class=\"modal\" id=\"${this.modalId}\">\n\t\t\t\t\t<div class=\"modal-content\">\n\t\t\t\t\t\t<div class=\"modal-header\">\n\t\t\t\t\t\t\t<h2>設定</h2>\n\t\t\t\t\t\t\t<button id=\"${this.modalId}-close\" class=\"close-btn\">×</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"modal-body\">\n\t\t\t\t\t\t\t${e.map((s) => this.generateSettingItemHTML(s)).join(\"\")}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"modal-footer\">\n\t\t\t\t\t\t\t<button id=\"${this.modalId}-cancel\" class=\"btn\">キャンセル</button>\n\t\t\t\t\t\t\t<button id=\"${this.modalId}-save\" class=\"btn primary\">OK</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;\n    }\n  }\n  /**\n   * 設定項目のHTMLを生成する\n   *\n   * @param item - 設定項目\n   * @returns 設定項目のHTML\n   */\n  generateSettingItemHTML(e) {\n    const t = this.currentValues[e.key];\n    switch (e.inputType) {\n      case \"number\":\n        return `\n\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t<label for=\"${this.modalId}-${e.key}\">${e.label}</label>\n\t\t\t\t\t\t<input type=\"number\" id=\"${this.modalId}-${e.key}\"\n\t\t\t\t\t\t\tmin=\"${e.min}\" max=\"${e.max}\" step=\"${e.step || 1}\"\n\t\t\t\t\t\t\tvalue=\"${t}\" data-key=\"${e.key}\">\n\t\t\t\t\t</div>\n\t\t\t\t`;\n      case \"range-with-number\":\n        return `\n\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t<label for=\"${this.modalId}-${e.key}-range\">${e.label}</label>\n\t\t\t\t\t\t<input type=\"range\" id=\"${this.modalId}-${e.key}-range\"\n\t\t\t\t\t\t\tmin=\"${e.min}\" max=\"${e.max}\" step=\"${e.step || 1}\"\n\t\t\t\t\t\t\tvalue=\"${t}\" data-key=\"${e.key}\">\n\t\t\t\t\t\t<input type=\"number\" id=\"${this.modalId}-${e.key}-number\"\n\t\t\t\t\t\t\tmin=\"${e.min}\" max=\"${e.max}\" step=\"${e.step || 1}\"\n\t\t\t\t\t\t\tvalue=\"${t}\" data-key=\"${e.key}\">\n\t\t\t\t\t\t${e.unit ? `<span>${e.unit}</span>` : \"\"}\n\t\t\t\t\t</div>\n\t\t\t\t`;\n      case \"button\":\n        return `\n\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t<span>${e.label}</span>\n\t\t\t\t\t\t<button id=\"${this.modalId}-${e.key}\" class=\"${e.buttonClass || \"test-button\"}\">${e.buttonText || \"再生\"}</button>\n\t\t\t\t\t</div>\n\t\t\t\t`;\n      case \"checkbox\":\n        return `\n\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"${this.modalId}-${e.key}\"\n\t\t\t\t\t\t\t\tdata-key=\"${e.key}\" ${t ? \"checked\" : \"\"}>\n\t\t\t\t\t\t\t${e.label}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t`;\n      case \"select\":\n        return `\n\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t<label for=\"${this.modalId}-${e.key}\">${e.label}</label>\n\t\t\t\t\t\t<select id=\"${this.modalId}-${e.key}\" data-key=\"${e.key}\">\n\t\t\t\t\t\t\t${(e.options || []).map((n) => `\n\t\t\t\t\t\t\t\t<option value=\"${n.value}\" ${t === n.value ? \"selected\" : \"\"}>${n.label}</option>\n\t\t\t\t\t\t\t`).join(\"\")}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t`;\n      case \"keybinding\":\n        const s = typeof t == \"string\" ? t.replace(/^Key/, \"\") : t;\n        return `\n\t\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t\t<label for=\"${this.modalId}-${e.key}\">${e.label}</label>\n\t\t\t\t\t\t<input type=\"text\" id=\"${this.modalId}-${e.key}\" class=\"keybinding-input\"\n\t\t\t\t\t\t\tvalue=\"${s}\" readonly placeholder=\"キーを押してください\" data-key=\"${e.key}\">\n\t\t\t\t\t\t${e.hint ? `<span class=\"key-hint\">${e.hint}</span>` : \"\"}\n\t\t\t\t\t</div>\n\t\t\t\t`;\n      default:\n        return \"\";\n    }\n  }\n  /**\n   * イベントリスナーを設定する\n   *\n   * @param items - 表示する設定項目\n   */\n  attachEventListeners(e) {\n    const t = document.getElementById(this.modalId);\n    if (!t) return;\n    //! 各設定項目のイベントリスナー。\n    e.forEach((i) => {\n      if (i.inputType === \"range-with-number\") {\n        //! レンジとナンバーの同期。\n        const a = document.getElementById(`${this.modalId}-${i.key}-range`), o = document.getElementById(`${this.modalId}-${i.key}-number`);\n        a?.addEventListener(\"input\", () => {\n          o.value = a.value, this.currentValues[i.key] = parseFloat(a.value);\n        }), o?.addEventListener(\"input\", () => {\n          a.value = o.value, this.currentValues[i.key] = parseFloat(o.value);\n        });\n      } else if (i.inputType === \"number\") {\n        const a = document.getElementById(`${this.modalId}-${i.key}`);\n        a?.addEventListener(\"input\", () => {\n          this.currentValues[i.key] = parseFloat(a.value);\n        });\n      } else if (i.inputType === \"button\" && i.key === \"testPlay\") {\n        //! テスト再生ボタン。\n        document.getElementById(`${this.modalId}-${i.key}`)?.addEventListener(\"click\", () => {\n          this.callbacks.onTestPlay?.();\n        });\n      } else if (i.inputType === \"checkbox\") {\n        const a = document.getElementById(`${this.modalId}-${i.key}`);\n        a?.addEventListener(\"change\", () => {\n          this.currentValues[i.key] = a.checked;\n        });\n      } else if (i.inputType === \"select\") {\n        const a = document.getElementById(`${this.modalId}-${i.key}`);\n        a?.addEventListener(\"change\", () => {\n          this.currentValues[i.key] = a.value;\n        });\n      } else if (i.inputType === \"keybinding\") {\n        const a = document.getElementById(`${this.modalId}-${i.key}`);\n        a?.addEventListener(\"click\", () => {\n          a.value = \"キーを押してください...\", a.classList.add(\"waiting-key\");\n        }), a?.addEventListener(\"keydown\", (o) => {\n          o.preventDefault(), o.stopPropagation(), this.currentValues[i.key] = o.code, a.value = o.code.replace(/^Key/, \"\"), a.classList.remove(\"waiting-key\");\n        });\n      }\n    });\n    //! 保存ボタン。\n    document.getElementById(`${this.modalId}-save`)?.addEventListener(\"click\", () => {\n      this.callbacks.onSave(this.currentValues), this.close();\n    });\n    //! キャンセルボタン。\n    document.getElementById(`${this.modalId}-cancel`)?.addEventListener(\"click\", () => {\n      this.currentValues = { ...this.initialValues }, this.callbacks.onCancel(), this.close();\n    });\n    //! 閉じるボタン（×）。\n    document.getElementById(`${this.modalId}-close`)?.addEventListener(\"click\", () => {\n      this.currentValues = { ...this.initialValues }, this.callbacks.onCancel(), this.close();\n    });\n    //! モーダル外クリックで閉じる。\n    t.addEventListener(\"click\", (i) => {\n      i.target === t && (this.currentValues = { ...this.initialValues }, this.callbacks.onCancel(), this.close());\n    });\n  }\n  /**\n   * モーダルを閉じる\n   */\n  close() {\n    document.getElementById(this.modalId)?.remove();\n  }\n}\nconst Y = [\n  //! Flashcard, Koch, 電鍵練習用の設定。\n  {\n    screens: [\"flashcard\", \"koch\", \"horizontal-key\", \"vertical-key\"],\n    priority: 10,\n    key: \"volume\",\n    label: \"音量\",\n    inputType: \"range-with-number\",\n    min: 0,\n    max: 100,\n    step: 1,\n    unit: \"%\"\n  },\n  {\n    screens: [\"flashcard\", \"koch\", \"horizontal-key\", \"vertical-key\"],\n    priority: 20,\n    key: \"frequency\",\n    label: \"周波数 (Hz)\",\n    inputType: \"number\",\n    min: 400,\n    max: 1200,\n    step: 50\n  },\n  {\n    screens: [\"flashcard\", \"koch\", \"horizontal-key\", \"vertical-key\"],\n    priority: 30,\n    key: \"wpm\",\n    label: \"WPM (速度: 5-40)\",\n    inputType: \"number\",\n    min: 5,\n    max: 40,\n    step: 1\n  },\n  //! Listening専用の設定。\n  {\n    screens: [\"listening\"],\n    priority: 5,\n    key: \"characterSpeed\",\n    label: \"文字速度 (WPM)\",\n    inputType: \"number\",\n    min: 5,\n    max: 40,\n    step: 1\n  },\n  {\n    screens: [\"listening\"],\n    priority: 6,\n    key: \"effectiveSpeed\",\n    label: \"実効速度 (WPM)\",\n    inputType: \"number\",\n    min: 5,\n    max: 40,\n    step: 1\n  },\n  {\n    screens: [\"listening\"],\n    priority: 20,\n    key: \"frequency\",\n    label: \"周波数 A側 (Hz)\",\n    inputType: \"number\",\n    min: 400,\n    max: 1e3,\n    step: 10\n  },\n  {\n    screens: [\"listening\"],\n    priority: 21,\n    key: \"bFrequency\",\n    label: \"周波数 B側 (Hz)\",\n    inputType: \"number\",\n    min: 400,\n    max: 1e3,\n    step: 10\n  },\n  {\n    screens: [\"listening\"],\n    priority: 10,\n    key: \"volume\",\n    label: \"音量\",\n    inputType: \"range-with-number\",\n    min: 0,\n    max: 100,\n    step: 5,\n    unit: \"%\"\n  },\n  //! テスト再生ボタン。\n  {\n    screens: [\"flashcard\", \"listening\"],\n    priority: 100,\n    key: \"testPlay\",\n    label: \"テスト再生\",\n    inputType: \"button\",\n    buttonText: \"再生\",\n    buttonClass: \"test-button\"\n  },\n  //! Koch専用の設定。\n  {\n    screens: [\"koch\"],\n    priority: 5,\n    key: \"characterSpeed\",\n    label: \"文字速度 (WPM: 5-40)\",\n    inputType: \"number\",\n    min: 5,\n    max: 40,\n    step: 1\n  },\n  {\n    screens: [\"koch\"],\n    priority: 6,\n    key: \"effectiveSpeed\",\n    label: \"実効速度 (WPM: 5-40)\",\n    inputType: \"number\",\n    min: 5,\n    max: 40,\n    step: 1\n  },\n  {\n    screens: [\"koch\"],\n    priority: 40,\n    key: \"practiceDuration\",\n    label: \"練習時間 (秒: 30-300)\",\n    inputType: \"number\",\n    min: 30,\n    max: 300,\n    step: 30\n  },\n  {\n    screens: [\"koch\"],\n    priority: 50,\n    key: \"groupSize\",\n    label: \"グループサイズ (文字: 3-10)\",\n    inputType: \"number\",\n    min: 3,\n    max: 10,\n    step: 1\n  },\n  {\n    screens: [\"koch\"],\n    priority: 60,\n    key: \"showInput\",\n    label: \"入力を表示\",\n    inputType: \"checkbox\"\n  },\n  //! HorizontalKey専用の設定。\n  {\n    screens: [\"horizontal-key\"],\n    priority: 40,\n    key: \"iambicMode\",\n    label: \"Iambicモード\",\n    inputType: \"select\",\n    options: [\n      { value: \"A\", label: \"Iambic A\" },\n      { value: \"B\", label: \"Iambic B\" }\n    ]\n  },\n  {\n    screens: [\"horizontal-key\"],\n    priority: 50,\n    key: \"paddleLayout\",\n    label: \"パドルレイアウト\",\n    inputType: \"select\",\n    options: [\n      { value: \"normal\", label: \"標準（左=dit / 右=dah）\" },\n      { value: \"reversed\", label: \"反転（左=dah / 右=dit）\" }\n    ]\n  },\n  {\n    screens: [\"horizontal-key\"],\n    priority: 60,\n    key: \"leftKeyCode\",\n    label: \"左パドルキー\",\n    inputType: \"keybinding\",\n    hint: \"クリックしてキーを押す\"\n  },\n  {\n    screens: [\"horizontal-key\"],\n    priority: 70,\n    key: \"rightKeyCode\",\n    label: \"右パドルキー\",\n    inputType: \"keybinding\",\n    hint: \"クリックしてキーを押す\"\n  },\n  //! VerticalKey専用の設定。\n  {\n    screens: [\"vertical-key\"],\n    priority: 40,\n    key: \"keyCode\",\n    label: \"キーバインド\",\n    inputType: \"keybinding\",\n    hint: \"クリックしてキーを押す\"\n  }\n];\nexport {\n  Y as ALL_SETTING_ITEMS,\n  $ as AudioGenerator,\n  U as FlashcardState,\n  G as FlashcardTrainer,\n  K as HorizontalKeyTrainer,\n  M as KOCH_SEQUENCE,\n  N as KochTrainer,\n  F as ListeningTrainer,\n  w as MorseBuffer,\n  m as MorseCodec,\n  W as SettingsModal,\n  k as TimerManager,\n  x as TimingCalculator,\n  R as TimingEvaluator,\n  P as VerticalKeyTrainer\n};\n//# sourceMappingURL=index.js.map\n"],"names":["g","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","_","Object","fromEntries","entries","map","e","m","textToMorse","t","toUpperCase","s","n","i","r","exec","index","h","substring","Array","from","l","push","join","o","lastIndex","length","a","filter","morseToText","getMorseMap","charToMorse","x","calculate","Error","shortenGaps","dot","dash","elementGap","charGap","wordGap","getCharGapDelay","getWordGapDelay","classifyElement","createRecord","Date","now","element","actualDuration","expectedDuration","timestamp","evaluate","Math","abs","record","absoluteError","relativeError","accuracy","max","calculateStatistics","count","averageAccuracy","averageAbsoluteError","averageRelativeError","maxAccuracy","minAccuracy","standardDeviation","c","reduce","min","pow","sqrt","classifyByElement","getRecent","sort","slice","getByTimeRange","w","constructor","this","buffer","sequence","getSequence","getBuffer","addElement","commitSequence","addWordSeparator","endsWith","clear","getBufferLength","getSequenceLength","isEmpty","k","timers","Map","set","window","setTimeout","get","clearTimeout","delete","clearAll","values","has","size","$","frequency","volume","wpm","audioContext","currentOscillator","currentGain","isPlaying","settings","ensureAudioContext","AudioContext","webkitAudioContext","state","resume","updateSettings","getSettings","scheduleTone","createOscillator","createGain","connect","destination","value","type","currentTime","gain","setValueAtTime","linearRampToValueAtTime","start","stop","startContinuousTone","stopContinuousTone","cancelScheduledValues","playMorseString","effectiveWpm","u","Promise","stopPlaying","isCurrentlyPlaying","getAudioContext","getVolume","setVolume","getFrequency","setFrequency","getWPM","setWPM","generateWav","d","f","OfflineAudioContext","ceil","scheduleOfflineTone","startRendering","audioBufferToWav","numberOfChannels","sampleRate","Float32Array","getChannelData","ArrayBuffer","DataView","setUint8","charCodeAt","setUint32","setUint16","setInt16","Blob","timer","timings","callbacks","keyDown","keyDownTime","evaluations","keyPress","onKeyPress","keyRelease","onKeyRelease","onSequenceUpdate","onTimingEvaluated","notifyBufferUpdate","setupCharWordTimers","onCharacter","onWordSeparator","trim","split","onBufferUpdate","getDecoded","isKeyDown","getTimerCount","getTimingStatistics","getRecentEvaluations","getAllEvaluations","getStatisticsByElement","leftDown","rightDown","sending","lastSent","forceNextElement","squeezeDetected","isSqueezing","iambicMode","paddleLayout","leftPaddlePress","updateSqueezeState","sendPaddleElement","rightPaddlePress","leftPaddleRelease","rightPaddleRelease","onElementStart","onElementEnd","scheduleNext","onSqueezeChange","isLeftPaddleDown","isRightPaddleDown","isSending","isSqueezingNow","setIambicMode","setPaddleLayout","getIambicMode","getPaddleLayout","currentLesson","getCharsForLesson","generateRandomGroups","groupSize","duration","floor","random","generateCustomGroups","calculateAccuracy","replace","isPassed","getCurrentLesson","setCurrentLesson","getCurrentChars","generatePractice","advanceLesson","previousLesson","isLastLesson","isFirstLesson","getTotalLessons","getTotalChars","getAllChars","v","p","id","category","title","dialog","side","text","content","y","generateCallsign","String","fromCharCode","randomChoice","generateRandomQSO","getBuiltinTemplates","getTemplateById","find","round","getTemplateCounts","qso","text100","text200","text300","getTotalTemplateCount","shuffleCards","generateExamQuestions","createQuestion","abbreviation","english","japanese","entry","choices","correctAnswer","checkAnswer","calculateScore","isCorrect","correct","total","percentage","getWrongAnswers","question","getCorrectAnswers","filterByTags","tags","some","includes","filterByFrequencies","filterByQuery","toLowerCase","getAllTags","Set","forEach","add","sortByAbbreviation","localeCompare","sortByFrequency","sortByEnglish","sortByJapanese","sortByTags","b","saveProgress","known","unknown","localStorage","setItem","STORAGE_PREFIX","JSON","stringify","loadProgress","getItem","parse","clearProgress","removeItem","saveFilters","selectedTags","selectedFrequencies","searchQuery","loadFilters","saveViewState","loadViewState","viewMode","displayMode","sortColumn","sortDirection","learnQuestionType","examQuestionType","saveViewMode","saveDisplayMode","saveLearnQuestionType","saveExamQuestionType","saveSortState","modalId","items","currentValues","initialValues","show","screens","priority","generateModalHTML","document","body","insertAdjacentHTML","attachEventListeners","generateSettingItemHTML","key","inputType","label","step","unit","buttonClass","buttonText","options","hint","getElementById","addEventListener","parseFloat","onTestPlay","checked","classList","preventDefault","stopPropagation","code","remove","onSave","close","onCancel","target"],"mappings":"AAAA,MAAMA,EAAI,CACRC,EAAG,KACHC,EAAG,OACHC,EAAG,OACHC,EAAG,MACHC,EAAG,IACHC,EAAG,OACHC,EAAG,MACHC,EAAG,OACHC,EAAG,KACHC,EAAG,OACHC,EAAG,MACHC,EAAG,OACHC,EAAG,KACHC,EAAG,KACHC,EAAG,MACHC,EAAG,OACHC,EAAG,OACHC,EAAG,MACHC,EAAG,MACHC,EAAG,IACHC,EAAG,MACHC,EAAG,OACHC,EAAG,MACHC,EAAG,OACHC,EAAG,OACHC,EAAG,OACH,EAAG,QACH,EAAG,QACH,EAAG,QACH,EAAG,QACH,EAAG,QACH,EAAG,QACH,EAAG,QACH,EAAG,QACH,EAAG,QACH,EAAG,QACH,IAAK,IACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACLC,EAAG,SACH,IAAK,QACL,IAAK,SACL,IAAK,OACL,IAAK,SACL,IAAK,QACL,IAAK,SACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACJzB,EAAI0B,OAAOC,YACZD,OAAOE,QAAQ9B,GAAG+B,IAAI,EAAEX,EAAGY,KAAO,CAACA,EAAGZ,KAExC,MAAMa,EAMJ,kBAAOC,CAAYF,GACjB,MAAMG,EAAIH,EAAEI,cAAeC,EAAI,gBAAiBC,EAAI,GACpD,IAAWC,EAAPC,EAAI,EACR,KAA2B,QAAnBD,EAAIF,EAAEI,KAAKN,KAAgB,CACjC,GAAII,EAAEG,MAAQF,EAAG,CACf,MAAMG,EAAIR,EAAES,UAAUJ,EAAGD,EAAEG,OAAQzC,EAAI4C,MAAMC,KAAKH,GAAGZ,IAAKgB,GAAM/C,EAAE+C,IAAMA,GACxET,EAAEU,KAAK/C,EAAEgD,KAAK,KAChB,CACA,MAAMC,EAAIL,MAAMC,KAAKP,EAAE,IAAIR,IAAKY,GAAM3C,EAAE2C,IAAMA,GAC9CL,EAAEU,KAAKE,EAAED,KAAK,KAAMT,EAAIH,EAAEc,SAC5B,CACA,GAAIX,EAAIL,EAAEiB,OAAQ,CAChB,MAAMC,EAAIlB,EAAES,UAAUJ,GAAIU,EAAIL,MAAMC,KAAKO,GAAGtB,IAAKY,GAAM3C,EAAE2C,IAAMA,GAC/DL,EAAEU,KAAKE,EAAED,KAAK,KAChB,CACA,OAAOX,EAAEgB,OAAQD,GAAMA,GAAGJ,KAAK,IACjC,CAMA,kBAAOM,CAAYvB,GACjB,IAAIG,EAAI,GACR,IAAA,MAAWE,KAAKL,EACR,MAANK,EAAYF,GAAK,IAAME,GAAW,KAANA,IAAaF,GAAKjC,EAAEmC,IAAM,KACxD,OAAOF,CACT,CAKA,kBAAOqB,GACL,MAAO,IAAKxD,EACd,CAMA,kBAAOyD,CAAYzB,GACjB,OAAOhC,EAAEgC,EAAEI,cACb,EAEF,MAAMsB,EAeJ,gBAAOC,CAAU3B,EAAGG,EAAI,IACtB,GAAIH,GAAK,EACP,MAAM,IAAI4B,MAAM,sBAAsB5B,kCACxC,MAAMK,EAAI,KAAOL,EAAGM,EAAIH,EAAE0B,YAAc,GAAM,EAC9C,MAAO,CACLC,IAAKzB,EACL0B,KAAU,EAAJ1B,EACN2B,WAAY3B,EACZ4B,QAAa,EAAJ5B,EAAQC,EACjB4B,QAAa,EAAJ7B,EAAQC,EAErB,CAOA,sBAAO6B,CAAgBnC,GACrB,MAAMG,EAAIH,EAAEiC,SAAmB,EAARjC,EAAE8B,KACzB,OAAe,EAAR9B,EAAE8B,IAAU3B,CACrB,CAOA,sBAAOiC,CAAgBpC,GACrB,OAAOA,EAAEkC,OACX,CAQA,sBAAOG,CAAgBrC,EAAGG,GAExB,OAAOH,EADO,IAAJG,EACK,IAAM,GACvB,EAEF,MAAMjB,EAiBJ,mBAAOoD,CAAatC,EAAGG,EAAGE,EAAGC,EAAIiC,KAAKC,OAEpC,MAAO,CACLC,QAASzC,EACT0C,eAAgBvC,EAChBwC,iBAJc,MAAN3C,EAAYK,EAAEyB,IAAMzB,EAAE0B,KAK9Ba,UAAWtC,EAEf,CAgBA,eAAOuC,CAAS7C,GACd,MAAMG,EAAI2C,KAAKC,IAAI/C,EAAE0C,eAAiB1C,EAAE2C,kBAAmBtC,EAAIF,EAAIH,EAAE2C,iBAAmB,IACxF,MAAO,CACLK,OAAQhD,EACRiD,cAAe9C,EACf+C,cAAe7C,EACf8C,SAL+FL,KAAKM,IAAI,EAAG,IAAM/C,GAOrH,CAoBA,0BAAOgD,CAAoBrD,GACzB,GAAiB,IAAbA,EAAEoB,OACJ,MAAO,CACLkC,MAAO,EACPC,gBAAiB,EACjBC,qBAAsB,EACtBC,qBAAsB,EACtBC,YAAa,EACbC,YAAa,EACbC,kBAAmB,GAEvB,MAAMzD,EAAIH,EAAED,IAAK8D,GAAMA,EAAEV,UAAW9C,EAAIL,EAAED,IAAK8D,GAAMA,EAAEZ,eAAgB3C,EAAIN,EAAED,IAAK8D,GAAMA,EAAEX,eAAgB1C,EAAIL,EAAE2D,OAAO,CAACD,EAAGxF,IAAMwF,EAAIxF,EAAG,GAAK8B,EAAEiB,OAAQb,EAAIF,EAAEyD,OAAO,CAACD,EAAGxF,IAAMwF,EAAIxF,EAAG,GAAKgC,EAAEe,OAAQC,EAAIf,EAAEwD,OAAO,CAACD,EAAGxF,IAAMwF,EAAIxF,EAAG,GAAKiC,EAAEc,OAAQF,EAAI4B,KAAKM,OAAOjD,GAAIQ,EAAImC,KAAKiB,OAAO5D,GAAIlC,EAAIkC,EAAE2D,OAAO,CAACD,EAAGxF,IAAMwF,EAAIf,KAAKkB,IAAI3F,EAAImC,EAAG,GAAI,GAAKL,EAAEiB,OAAQL,EAAI+B,KAAKmB,KAAKhG,GACrW,MAAO,CACLqF,MAAOtD,EAAEoB,OACTmC,gBAAiB/C,EACjBgD,qBAAsBjD,EACtBkD,qBAAsBpC,EACtBqC,YAAaxC,EACbyC,YAAahD,EACbiD,kBAAmB7C,EAEvB,CAeA,wBAAOmD,CAAkBlE,GAEvB,MAAO,CAAE8B,IADC9B,EAAEsB,OAAQhB,GAA2B,MAArBA,EAAE0C,OAAOP,SAClBV,KADwC/B,EAAEsB,OAAQhB,GAA2B,MAArBA,EAAE0C,OAAOP,SAEpF,CAeA,gBAAO0B,CAAUnE,EAAGG,GAClB,OAAOA,GAAK,EAAI,GAAK,IAAIH,GAAGoE,KAC1B,CAAC9D,EAAGE,IAAMA,EAAEwC,OAAOJ,UAAYtC,EAAE0C,OAAOJ,WACxCyB,MAAM,EAAGlE,EACb,CAiBA,qBAAOmE,CAAetE,EAAGG,EAAGE,EAAIkC,KAAKC,OACnC,OAAOxC,EAAEsB,OACNhB,GAAMA,EAAE0C,OAAOJ,WAAazC,GAAKG,EAAE0C,OAAOJ,WAAavC,EAE5D,EAEF,MAAMkE,EACJ,WAAAC,GACEC,KAAKC,OAAS,GAAID,KAAKE,SAAW,EACpC,CAMA,WAAAC,GACE,OAAOH,KAAKE,QACd,CAMA,SAAAE,GACE,OAAOJ,KAAKC,MACd,CAMA,UAAAI,CAAW9E,GACTyE,KAAKE,UAAY3E,CACnB,CAMA,cAAA+E,CAAe/E,GAAI,GACjByE,KAAKE,WAAaF,KAAKC,QAAUD,KAAKE,SAAU3E,IAAMyE,KAAKC,QAAU,KAAMD,KAAKE,SAAW,GAC7F,CAKA,gBAAAK,GACEP,KAAKM,gBAAe,GAAKN,KAAKC,OAAOO,SAAS,QAAUR,KAAKC,QAAU,KACzE,CAIA,KAAAQ,GACET,KAAKC,OAAS,GAAID,KAAKE,SAAW,EACpC,CAOA,QAAAM,CAASjF,GACP,OAAOyE,KAAKC,OAAOO,SAASjF,EAC9B,CAMA,eAAAmF,GACE,OAAOV,KAAKC,OAAOtD,MACrB,CAMA,iBAAAgE,GACE,OAAOX,KAAKE,SAASvD,MACvB,CAMA,OAAAiE,GACE,OAA8B,IAAvBZ,KAAKC,OAAOtD,QAAyC,IAAzBqD,KAAKE,SAASvD,MACnD,EAEF,MAAMkE,EACJ,WAAAd,GACEC,KAAKc,WAA6BC,GACpC,CAcA,GAAAC,CAAIzF,EAAGG,EAAGE,GACRoE,KAAKS,MAAMlF,GACX,MAAMM,EAAIoF,OAAOC,WAAWxF,EAAGE,GAC/BoE,KAAKc,OAAOE,IAAIzF,EAAGM,EACrB,CAWA,KAAA4E,CAAMlF,GACJ,MAAMG,EAAIsE,KAAKc,OAAOK,IAAI5F,QACpB,IAANG,IAAiB0F,aAAa1F,GAAIsE,KAAKc,OAAOO,OAAO9F,GACvD,CASA,QAAA+F,GACE,IAAA,MAAW/F,KAAKyE,KAAKc,OAAOS,SAC1BH,aAAa7F,GACfyE,KAAKc,OAAOL,OACd,CAOA,GAAAe,CAAIjG,GACF,OAAOyE,KAAKc,OAAOU,IAAIjG,EACzB,CAMA,KAAAsD,GACE,OAAOmB,KAAKc,OAAOW,IACrB,EAEF,MAAMC,EAMJ,WAAA3B,CAAYxE,EAAI,CAAEoG,UAAW,IAAKC,OAAQ,GAAKC,IAAK,KAClD7B,KAAK8B,aAAe,KAAM9B,KAAK+B,kBAAoB,KAAM/B,KAAKgC,YAAc,KAAMhC,KAAKiC,WAAY,EAAIjC,KAAKkC,SAAW3G,CACzH,CAIA,kBAAA4G,GACEnC,KAAK8B,eAAiB9B,KAAK8B,aAAe,IAAKb,OAAOmB,cAAgBnB,OAAOoB,qBAAoD,cAA5BrC,KAAK8B,aAAaQ,OAAyBtC,KAAK8B,aAAaS,QACpK,CAMA,cAAAC,CAAejH,GACbyE,KAAKkC,SAAW,IAAKlC,KAAKkC,YAAa3G,EACzC,CAMA,WAAAkH,GACE,MAAO,IAAKzC,KAAKkC,SACnB,CAOA,YAAAQ,CAAanH,EAAGG,GACd,GAAIsE,KAAKmC,qBAAwBnC,KAAK8B,aACpC,IACE,MAAMlG,EAAIoE,KAAK8B,aAAaa,mBAAoB9G,EAAImE,KAAK8B,aAAac,aACtEhH,EAAEiH,QAAQhH,GAAIA,EAAEgH,QAAQ7C,KAAK8B,aAAagB,aAAclH,EAAE+F,UAAUoB,MAAQ/C,KAAKkC,SAASP,UAAW/F,EAAEoH,KAAO,OAC9G,MAAMjH,EAAIiE,KAAK8B,aAAamB,YAAanH,EAAIuC,KAAKM,IAAI5C,EAAGR,GACzDM,EAAEqH,KAAKC,eAAe,EAAGrH,GAAID,EAAEqH,KAAKE,wBAAwBpD,KAAKkC,SAASN,OAAQ9F,EAAI,MAAOD,EAAEqH,KAAKC,eAAenD,KAAKkC,SAASN,OAAQ9F,GAAKJ,EAAI,GAAK,KAAMG,EAAEqH,KAAKE,wBAAwB,EAAGtH,EAAIJ,EAAI,KAAME,EAAEyH,MAAMvH,GAAIF,EAAE0H,KAAKxH,EAAIJ,EAAI,IAC1O,OAASE,GAET,CACJ,CAIA,mBAAA2H,GACE,GAAIvD,KAAKmC,qBAAwBnC,KAAK8B,aACpC,IACE9B,KAAKwD,qBACL,MAAMjI,EAAIyE,KAAK8B,aAAaa,mBAAoBjH,EAAIsE,KAAK8B,aAAac,aACtErH,EAAEsH,QAAQnH,GAAIA,EAAEmH,QAAQ7C,KAAK8B,aAAagB,aAAcvH,EAAEoG,UAAUoB,MAAQ/C,KAAKkC,SAASP,UAAWpG,EAAEyH,KAAO,OAC9G,MAAMpH,EAAIoE,KAAK8B,aAAamB,YAC5BvH,EAAEwH,KAAKC,eAAe,EAAGvH,GAAIF,EAAEwH,KAAKE,wBAAwBpD,KAAKkC,SAASN,OAAQhG,EAAI,MAAOL,EAAE8H,MAAMzH,GAAIoE,KAAK+B,kBAAoBxG,EAAGyE,KAAKgC,YAActG,CAC1J,OAASH,GAET,CACJ,CAIA,kBAAAiI,GACE,GAAIxD,KAAK8B,aACP,IACE,GAAI9B,KAAK+B,mBAAqB/B,KAAKgC,YAAa,CAC9C,MAAMzG,EAAIyE,KAAK8B,aAAamB,YAC5BjD,KAAKgC,YAAYkB,KAAKO,sBAAsBlI,GAAIyE,KAAKgC,YAAYkB,KAAKC,eAAenD,KAAKgC,YAAYkB,KAAKH,MAAOxH,GAAIyE,KAAKgC,YAAYkB,KAAKE,wBAAwB,EAAG7H,EAAI,MAAOyE,KAAK+B,kBAAkBuB,KAAK/H,EAAI,MAAOyE,KAAK+B,kBAAoB,KAAM/B,KAAKgC,YAAc,IAC7Q,CACF,OAASzG,GAET,CACJ,CAaA,qBAAMmI,CAAgBnI,GACpB,GAAIyE,KAAKiC,YAAc1G,IAAMyE,KAAKmC,sBAAuBnC,KAAK8B,cAAe,OAAO,EACpF9B,KAAKiC,WAAY,EACjB,MAAMvG,EAAIsE,KAAKkC,SAASL,KAAO,GAAsDhG,EAAI,KAAOH,EAAGK,EAAIF,EAAGC,EAAI,EAAID,EAAGe,EAAIf,EAAGY,EAAI,EAAIZ,EAAGrC,EAAS,KAAzG6E,KAAKiB,IAAIU,KAAKkC,SAASyB,cAAgBjI,EAAGA,GAA0D,EAC3I,IAAIY,EAAI0D,KAAK8B,aAAamB,YAAc,IACxC,IAAA,IAASvI,EAAI,EAAGA,EAAIa,EAAEoB,QAAUqD,KAAKiC,UAAWvH,IAAK,CACnD,MAAMkJ,EAAIrI,EAAEb,GACN,MAANkJ,GAAa5D,KAAK0C,aAAapG,EAAGP,GAAIO,IAAMP,EAAIa,GAAK,KAAa,MAANgH,GAAa5D,KAAK0C,aAAapG,EAAGR,GAAIQ,IAAMR,EAAIc,GAAK,KAAa,MAANgH,EAAYtH,IAAMG,EAAIG,GAAK,IAAY,MAANgH,IAActH,IAAM9C,EAAIoD,GAAK,IACxL,CACA,MAAMwC,EAA0C,KAArC9C,EAAI0D,KAAK8B,aAAamB,mBAC3B,IAAIY,QAASnJ,GAAMwG,WAAWxG,EAAG0E,IACvC,MAAMxF,EAAIoG,KAAKiC,UACf,OAAOjC,KAAKiC,WAAY,EAAIrI,CAC9B,CAIA,WAAAkK,GACE9D,KAAKiC,WAAY,CACnB,CAMA,kBAAA8B,GACE,OAAO/D,KAAKiC,SACd,CAMA,eAAA+B,GACE,OAAOhE,KAAK8B,YACd,CAMA,SAAAmC,GACE,OAAOjE,KAAKkC,SAASN,MACvB,CAMA,SAAAsC,CAAU3I,GACRyE,KAAKkC,SAASN,OAASvD,KAAKM,IAAI,EAAGN,KAAKiB,IAAI,EAAG/D,GACjD,CAMA,YAAA4I,GACE,OAAOnE,KAAKkC,SAASP,SACvB,CAMA,YAAAyC,CAAa7I,GACXyE,KAAKkC,SAASP,UAAYtD,KAAKM,IAAI,IAAKN,KAAKiB,IAAI,KAAM/D,GACzD,CAMA,MAAA8I,GACE,OAAOrE,KAAKkC,SAASL,KAAO,EAC9B,CAMA,MAAAyC,CAAO/I,GACLyE,KAAKkC,SAASL,IAAMxD,KAAKM,IAAI,EAAGN,KAAKiB,IAAI,GAAI/D,GAC/C,CAaA,iBAAMgJ,CAAYhJ,GAChB,IAAKA,EACH,MAAM,IAAI4B,MAAM,cAClB,MAAMzB,EAAIsE,KAAKkC,SAASL,KAAO,GAAsDhG,EAAI,KAAOH,EAAGK,EAAIF,EAAGC,EAAI,EAAID,EAAGe,EAAIf,EAAGY,EAAI,EAAIZ,EAAGrC,EAAS,KAAzG6E,KAAKiB,IAAIU,KAAKkC,SAASyB,cAAgBjI,EAAGA,GAA0D,EAC3I,IAAIY,EAAI,EACR,IAAA,IAASkI,EAAI,EAAGA,EAAIjJ,EAAEoB,OAAQ6H,IAAK,CACjC,MAAMC,EAAIlJ,EAAEiJ,GACN,MAANC,EAAYnI,GAAKP,EAAIa,EAAU,MAAN6H,EAAYnI,GAAKR,EAAIc,EAAU,MAAN6H,EAAYnI,GAAKG,EAAIG,EAAU,MAAN6H,IAAcnI,GAAK9C,EAAIoD,EACpG,CACA,MAAiBhD,GAAK0C,EAAI,KAAO,IAAK5B,EAAI,IAAIgK,oBAAoB,EAAGrG,KAAKsG,KAAhE,MAAqE/K,GAArE,OACV,IAAIgK,EAAI,IACR,IAAA,IAASY,EAAI,EAAGA,EAAIjJ,EAAEoB,OAAQ6H,IAAK,CACjC,MAAMC,EAAIlJ,EAAEiJ,GACN,MAANC,GAAazE,KAAK4E,oBAAoBlK,EAAGkJ,EAAG7H,GAAI6H,IAAM7H,EAAIa,GAAK,KAAa,MAAN6H,GAAazE,KAAK4E,oBAAoBlK,EAAGkJ,EAAG9H,GAAI8H,IAAM9H,EAAIc,GAAK,KAAa,MAAN6H,EAAYb,IAAMnH,EAAIG,GAAK,IAAY,MAAN6H,IAAcb,IAAMpK,EAAIoD,GAAK,IAC5M,CACA,MAAM5C,QAAUU,EAAEmK,iBAClB,OAAO7E,KAAK8E,iBAAiB9K,EAC/B,CAQA,mBAAA4K,CAAoBrJ,EAAGG,EAAGE,GACxB,MAAMC,EAAIN,EAAEoH,mBAAoB5G,EAAIR,EAAEqH,aACtC/G,EAAEgH,QAAQ9G,GAAIA,EAAE8G,QAAQtH,EAAEuH,aAAcjH,EAAE8F,UAAUoB,MAAQ/C,KAAKkC,SAASP,UAAW9F,EAAEmH,KAAO,OAC9F,MAAMlH,EAAIJ,EACVK,EAAEmH,KAAKC,eAAe,EAAGrH,GAAIC,EAAEmH,KAAKE,wBAAwBpD,KAAKkC,SAASN,OAAQ9F,EAAI,MAAOC,EAAEmH,KAAKC,eAAenD,KAAKkC,SAASN,OAAQ9F,GAAKF,EAAI,GAAK,KAAMG,EAAEmH,KAAKE,wBAAwB,EAAGtH,EAAIF,EAAI,KAAMC,EAAEwH,MAAMvH,GAAID,EAAEyH,KAAKxH,EAAIF,EAAI,IAC1O,CAOA,gBAAAkJ,CAAiBvJ,GACf,MAAMG,EAAIH,EAAEwJ,iBAAkBnJ,EAAIL,EAAEyJ,WAAsCpI,EAAPb,EAAWL,EAAOe,EAAI,IAAIwI,aAAa1J,EAAEoB,OAASjB,GACrH,IAAA,IAASkI,EAAI,EAAGA,EAAIrI,EAAEwJ,iBAAkBnB,IAAK,CAC3C,MAAM5J,EAAIuB,EAAE2J,eAAetB,GAC3B,IAAA,IAASY,EAAI,EAAGA,EAAIxK,EAAE2C,OAAQ6H,IAC5B/H,EAAE+H,EAAI9I,EAAIkI,GAAK5J,EAAEwK,EACrB,CACA,MAAMtI,EAN6DH,EAMzDU,EAAEE,OAAYnD,EAAI,GAAK0C,EAAGI,EAAI,IAAI6I,YAAY3L,GAAI4F,EAAI,IAAIgG,SAAS9I,GAAI1C,EAAI,CAACgK,EAAG5J,KACvF,IAAA,IAASwK,EAAI,EAAGA,EAAIxK,EAAE2C,OAAQ6H,IAC5BpF,EAAEiG,SAASzB,EAAIY,EAAGxK,EAAEsL,WAAWd,KAEnC5K,EAAE,EAAG,QAASwF,EAAEmG,UAAU,EAAG/L,EAAI,GAAG,GAAKI,EAAE,EAAG,QAASA,EAAE,GAAI,QAASwF,EAAEmG,UAAU,GAAI,IAAI,GAAKnG,EAAEoG,UAAU,GAVvD,GAU8D,GAAKpG,EAAEoG,UAAU,GAAI9J,GAAG,GAAK0D,EAAEmG,UAAU,GAAI3J,GAAG,GAAKwD,EAAEmG,UAAU,GAAI3J,EAAIgB,GAAG,GAAKwC,EAAEoG,UAAU,GAAI5I,GAAG,GAAKwC,EAAEoG,UAAU,GAV5K,IAUmL,GAAK5L,EAAE,GAAI,QAASwF,EAAEmG,UAAU,GAAIrJ,GAAG,GACrR,IAAIxB,EAAI,GACR,IAAA,IAASkJ,EAAI,EAAGA,EAAInH,EAAEE,OAAQiH,IAAK,CACjC,MAAM5J,EAAIqE,KAAKM,KAAI,EAAIN,KAAKiB,IAAI,EAAG7C,EAAEmH,KAAMY,EAAIxK,EAAI,EAAQ,MAAJA,EAAgB,MAAJA,EACnEoF,EAAEqG,SAAS/K,EAAG8J,GAAG,GAAK9J,GAAK,CAC7B,CACA,OAAO,IAAIgL,KAAK,CAACpJ,GAAI,CAAE0G,KAAM,aAC/B,EAEF,MAAMzI,EAQJ,WAAAwF,CAAYxE,EAAGG,EAAGE,EAAGC,EAAI,CAAA,GACvBmE,KAAKC,OAAS1E,EAAGyE,KAAK2F,MAAQjK,EAAGsE,KAAK4F,QAAUhK,EAAGoE,KAAK6F,UAAYhK,EAAGmE,KAAK8F,SAAU,EAAI9F,KAAK+F,YAAc,EAAG/F,KAAKgG,YAAc,EACrI,CAKA,QAAAC,GACEjG,KAAK8F,UAAY9F,KAAK8F,SAAU,EAAI9F,KAAK+F,YAAcjI,KAAKC,MAAOiC,KAAK2F,MAAMrE,WAAYtB,KAAK6F,UAAUK,eAC3G,CAKA,UAAAC,GACE,IAAKnG,KAAK8F,QAAS,OACnB9F,KAAK8F,SAAU,EACf,MAAMvK,EAAIuC,KAAKC,MAAQiC,KAAK+F,YAAarK,EAAIH,EAAuB,EAAnByE,KAAK4F,QAAQvI,IAAU,IAAM,IAC9E2C,KAAKC,OAAOI,WAAW3E,GACvB,MAAME,EAAInB,EAAEoD,aAAanC,EAAGH,EAAGyE,KAAK4F,SAAU/J,EAAIpB,EAAE2D,SAASxC,GAC7DoE,KAAKgG,YAAYzJ,KAAKV,GAAImE,KAAK6F,UAAUO,eAAe1K,GAAIsE,KAAK6F,UAAUQ,mBAAmBrG,KAAKC,OAAOE,eAAgBH,KAAK6F,UAAUS,oBAAoBzK,GAAImE,KAAKuG,qBAAsBvG,KAAKwG,qBACnM,CAIA,mBAAAA,GACExG,KAAK2F,MAAMrE,WACX,MAAM/F,EAAIyE,KAAK4F,QAAQpI,QACvBwC,KAAK2F,MAAM3E,IAAI,UAAW,KACxB,MAAMpF,EAAIoE,KAAKC,OAAOE,cACtB,GAAIvE,EAAG,CACL,MAAMC,EAAIL,EAAEsB,YAAY,CAAClB,IACzBoE,KAAKC,OAAOK,iBAAkBN,KAAK6F,UAAUY,cAAc7K,EAAGC,GAAK,KAAMmE,KAAKuG,oBAChF,GACChL,GACH,MAAMG,EAAIsE,KAAK4F,QAAQnI,QACvBuC,KAAK2F,MAAM3E,IAAI,UAAW,KACxB,MAAMpF,EAAIoE,KAAKC,OAAOE,cACtB,GAAIvE,EAAG,CACL,MAAMC,EAAIL,EAAEsB,YAAY,CAAClB,IACzBoE,KAAKC,OAAOK,iBAAkBN,KAAK6F,UAAUY,cAAc7K,EAAGC,GAAK,IACrE,CACAmE,KAAKC,OAAOM,mBAAoBP,KAAK6F,UAAUa,oBAAqB1G,KAAKuG,sBACxE7K,EACL,CAIA,kBAAA6K,GACE,MAAMhL,EAAIyE,KAAKC,OAAOG,YAAa1E,EAAIH,EAAEoL,OAAOC,MAAM,OAAQhL,EAAIJ,EAAEsB,YAAYpB,GAChFsE,KAAK6F,UAAUgB,iBAAiBtL,EAAGK,EACrC,CAIA,KAAA6E,GACET,KAAKC,OAAOQ,QAAST,KAAK2F,MAAMrE,WAAYtB,KAAKgG,YAAc,GAAIhG,KAAKuG,oBAC1E,CAKA,SAAAnG,GACE,OAAOJ,KAAKC,OAAOG,WACrB,CAKA,WAAAD,GACE,OAAOH,KAAKC,OAAOE,aACrB,CAKA,UAAA2G,GACE,MAAMpL,EAAIsE,KAAKC,OAAOG,YAAYuG,OAAOC,MAAM,OAC/C,OAAOpL,EAAEsB,YAAYpB,EACvB,CAKA,SAAAqL,GACE,OAAO/G,KAAK8F,OACd,CAKA,aAAAkB,GACE,OAAOhH,KAAK2F,MAAM9G,OACpB,CAKA,mBAAAoI,GACE,OAAOxM,EAAEmE,oBAAoBoB,KAAKgG,YACpC,CAMA,oBAAAkB,CAAqB3L,GACnB,OAAOd,EAAEiF,UAAUM,KAAKgG,YAAazK,EACvC,CAKA,iBAAA4L,GACE,MAAO,IAAInH,KAAKgG,YAClB,CAKA,sBAAAoB,GACE,MAAM7L,EAAId,EAAEgF,kBAAkBO,KAAKgG,aACnC,MAAO,CACL3I,IAAK5C,EAAEmE,oBAAoBrD,EAAE8B,KAC7BC,KAAM7C,EAAEmE,oBAAoBrD,EAAE+B,MAElC,EAEF,MAAMpD,EASJ,WAAA6F,CAAYxE,EAAGG,EAAGE,EAAGC,EAAI,CAAA,EAAIE,EAAI,IAC/BiE,KAAKC,OAAS1E,EAAGyE,KAAK2F,MAAQjK,EAAGsE,KAAK4F,QAAUhK,EAAGoE,KAAK6F,UAAYhK,EAAGmE,KAAKqH,UAAW,EAAIrH,KAAKsH,WAAY,EAAItH,KAAKuH,SAAU,EAAIvH,KAAKwH,SAAW,KAAMxH,KAAKyH,iBAAmB,KAAMzH,KAAK0H,iBAAkB,EAAI1H,KAAK2H,aAAc,EAAI3H,KAAK4H,WAAa7L,EAAE6L,YAAc,IAAK5H,KAAK6H,aAAe9L,EAAE8L,cAAgB,QACxT,CAIA,eAAAC,GACE,GAAI9H,KAAKqH,UAAW,EAAIrH,KAAK+H,qBAA0C,MAApB/H,KAAK4H,YAAsB5H,KAAKuH,SAAWvH,KAAKsH,UAAW,CAC5G,MAAM/L,EAA0B,aAAtByE,KAAK6H,aAA8B,IAAM,IACnD7H,KAAKyH,iBAAmBlM,EAAGyE,KAAK0H,iBAAkB,CACpD,CACA,IAAK1H,KAAKuH,QAAS,CACjB,MAAMhM,EAA0B,aAAtByE,KAAK6H,aAA8B,IAAM,IACnD7H,KAAKgI,kBAAkBzM,EACzB,CACF,CAIA,gBAAA0M,GACE,GAAIjI,KAAKsH,WAAY,EAAItH,KAAK+H,qBAA0C,MAApB/H,KAAK4H,YAAsB5H,KAAKuH,SAAWvH,KAAKqH,SAAU,CAC5G,MAAM9L,EAA0B,aAAtByE,KAAK6H,aAA8B,IAAM,IACnD7H,KAAKyH,iBAAmBlM,EAAGyE,KAAK0H,iBAAkB,CACpD,CACA,IAAK1H,KAAKuH,QAAS,CACjB,MAAMhM,EAA0B,aAAtByE,KAAK6H,aAA8B,IAAM,IACnD7H,KAAKgI,kBAAkBzM,EACzB,CACF,CAIA,iBAAA2M,GACElI,KAAKqH,UAAW,EAAIrH,KAAK+H,oBAC3B,CAIA,kBAAAI,GACEnI,KAAKsH,WAAY,EAAItH,KAAK+H,oBAC5B,CAKA,iBAAAC,CAAkBzM,GAChB,GAAIyE,KAAKuH,QAAS,OAClBvH,KAAKuH,SAAU,EAAIvH,KAAK2F,MAAMrE,WAAYtB,KAAKqH,UAAYrH,KAAKsH,YAActH,KAAK0H,iBAAkB,GACrG,MAAMhM,EAAU,MAANH,EAAYyE,KAAK4F,QAAQvI,IAAM2C,KAAK4F,QAAQtI,KACtD0C,KAAK6F,UAAUuC,iBAAiB7M,EAAGG,GAAIsE,KAAKC,OAAOI,WAAW9E,GAAIyE,KAAKwH,SAAWjM,EAAGyE,KAAK6F,UAAUQ,mBAAmBrG,KAAKC,OAAOE,eAAgBH,KAAKuG,qBAAsBvG,KAAK2F,MAAM3E,IAAI,cAAe,KAC1M,MAAMpF,EAAIoE,KAAKqH,UAAYrH,KAAKsH,UACZ,MAApBtH,KAAK4H,YAAsB5H,KAAK0H,kBAAoB1H,KAAKyH,mBAAqBzH,KAAKyH,iBAAyB,MAANlM,EAAY,IAAM,KAAMK,IAAMoE,KAAKyH,mBAAqBzH,KAAKyH,iBAAyB,MAANlM,EAAY,IAAM,MACvM8C,KAAKM,IAAI,EAAGjD,EAAI,IAAKsE,KAAK2F,MAAM3E,IAAI,aAAc,KACnDhB,KAAKuH,SAAU,EAAIvH,KAAK6F,UAAUwC,eAAe9M,GAAIyE,KAAKyH,kBAAyCzH,KAAKqH,UAAYrH,KAAKsH,UAA5CtH,KAAKsI,eAAyEtI,KAAKwG,uBAC/J9K,EAAIsE,KAAK4F,QAAQvI,IACtB,CAIA,YAAAiL,GACE,GAAItI,KAAKyH,iBAAkB,CACzB,MAAMlM,EAAIyE,KAAKyH,iBACfzH,KAAKyH,iBAAmB,KAAMzH,KAAKgI,kBAAkBzM,EACvD,MAAA,GAAWyE,KAAKqH,UAAYrH,KAAKsH,UAAW,CAC1C,MAAM/L,EAAsB,MAAlByE,KAAKwH,SAAmB,IAAM,IACxCxH,KAAKgI,kBAAkBzM,EACzB,MAAA,GAAWyE,KAAKqH,SAAU,CACxB,MAAM9L,EAA0B,aAAtByE,KAAK6H,aAA8B,IAAM,IACnD7H,KAAKgI,kBAAkBzM,EACzB,MAAA,GAAWyE,KAAKsH,UAAW,CACzB,MAAM/L,EAA0B,aAAtByE,KAAK6H,aAA8B,IAAM,IACnD7H,KAAKgI,kBAAkBzM,EACzB,CACF,CAIA,mBAAAiL,GACExG,KAAK2F,MAAMrE,WAAYtB,KAAK2F,MAAM3E,IAAI,UAAW,KAC/C,MAAMzF,EAAIyE,KAAKC,OAAOE,cACtB,GAAI5E,EAAG,CACL,MAAMG,EAAIF,EAAEsB,YAAY,CAACvB,IACzByE,KAAKC,OAAOK,iBAAkBN,KAAK6F,UAAUY,cAAclL,EAAGG,GAAK,KAAMsE,KAAKuG,oBAChF,GACCvG,KAAK4F,QAAQpI,SAAUwC,KAAK2F,MAAM3E,IAAI,UAAW,KAClD,MAAMzF,EAAIyE,KAAKC,OAAOE,cACtB,GAAI5E,EAAG,CACL,MAAMG,EAAIF,EAAEsB,YAAY,CAACvB,IACzByE,KAAKC,OAAOK,iBAAkBN,KAAK6F,UAAUY,cAAclL,EAAGG,GAAK,IACrE,CACAsE,KAAKC,OAAOM,mBAAoBP,KAAK6F,UAAUa,oBAAqB1G,KAAKuG,sBACxEvG,KAAK4F,QAAQnI,QAClB,CAIA,kBAAAsK,GACE,MAAMxM,EAAIyE,KAAKqH,UAAYrH,KAAKsH,UAChCtH,KAAK2H,cAAgBpM,IAAMyE,KAAK2H,YAAcpM,EAAGyE,KAAK6F,UAAU0C,kBAAkBhN,GACpF,CAIA,kBAAAgL,GACE,MAAMhL,EAAIyE,KAAKC,OAAOG,YAAa1E,EAAIH,EAAEoL,OAAOC,MAAM,OAAQhL,EAAIJ,EAAEsB,YAAYpB,GAChFsE,KAAK6F,UAAUgB,iBAAiBtL,EAAGK,EACrC,CAIA,KAAA6E,GACET,KAAKC,OAAOQ,QAAST,KAAK2F,MAAMrE,WAAYtB,KAAKuH,SAAU,EAAIvH,KAAKyH,iBAAmB,KAAMzH,KAAK0H,iBAAkB,EAAI1H,KAAKwH,SAAW,KAAMxH,KAAKuG,oBACrJ,CAKA,SAAAnG,GACE,OAAOJ,KAAKC,OAAOG,WACrB,CAKA,WAAAD,GACE,OAAOH,KAAKC,OAAOE,aACrB,CAKA,UAAA2G,GACE,MAAMpL,EAAIsE,KAAKC,OAAOG,YAAYuG,OAAOC,MAAM,OAC/C,OAAOpL,EAAEsB,YAAYpB,EACvB,CAKA,gBAAA8M,GACE,OAAOxI,KAAKqH,QACd,CAKA,iBAAAoB,GACE,OAAOzI,KAAKsH,SACd,CAKA,SAAAoB,GACE,OAAO1I,KAAKuH,OACd,CAKA,cAAAoB,GACE,OAAO3I,KAAK2H,WACd,CAKA,aAAAiB,CAAcrN,GACZyE,KAAK4H,WAAarM,CACpB,CAKA,eAAAsN,CAAgBtN,GACdyE,KAAK6H,aAAetM,CACtB,CAKA,aAAAuN,GACE,OAAO9I,KAAK4H,UACd,CAKA,eAAAmB,GACE,OAAO/I,KAAK6H,YACd,EAEG,MAACzN,EAAI,CACR,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEF,MAAMC,EAKJ,WAAA0F,CAAYxE,EAAI,GACdyE,KAAKgJ,cAAgB,EAAGhJ,KAAKgJ,cAAgB3K,KAAKM,IAAI,EAAGN,KAAKiB,IAAI,GAAI/D,GACxE,CAMA,wBAAO0N,CAAkB1N,GACvB,MAAMG,EAAI2C,KAAKM,IAAI,EAAGN,KAAKiB,IAAI,GAAI/D,IACnC,OAAOnB,EAAEwF,MAAM,EAAGlE,EAAI,EACxB,CAOA,2BAAOwN,CAAqB3N,EAAGG,EAAI,IACjC,MAAME,EAAIF,EAAEyN,WAAa,EAAGtN,EAAIH,EAAE0N,UAAY,GAAIrN,EAAIL,EAAEmG,KAAO,GAAI/F,EAAIuC,KAAKgL,MAAMxN,EAAIE,GAAS,EAAJH,IAASgB,EAAI,GACxG,IAAA,IAASH,EAAI,EAAGA,EAAIX,EAAGW,IAAK,CAC1B,IAAIP,EAAI,GACR,IAAA,IAAS1C,EAAI,EAAGA,EAAIoC,EAAGpC,IAAK,CAE1B0C,GADUX,EAAE8C,KAAKgL,MAAMhL,KAAKiL,SAAW/N,EAAEoB,QAE3C,CACAC,EAAEL,KAAKL,EACT,CACA,OAAOU,CACT,CAOA,2BAAO2M,CAAqBhO,EAAGG,EAAI,IACjC,MAAME,EAAIQ,MAAMC,KAAKd,GACrB,GAAIK,EAAEe,OAAS,EACb,MAAM,IAAIQ,MAAM,oBAClB,OAAO9C,EAAE6O,qBAAqBtN,EAAGF,EACnC,CAOA,wBAAO8N,CAAkBjO,EAAGG,GAC1B,IAAKA,EAAG,OAAO,EACf,MAAME,EAAIL,EAAEkO,QAAQ,MAAO,IAAK5N,EAAIH,EAAE+N,QAAQ,MAAO,IAAK1N,EAAIsC,KAAKM,IAAI/C,EAAEe,OAAQd,EAAEc,QACnF,GAAU,IAANZ,EAAS,OAAO,EACpB,IAAID,EAAI,EACR,IAAA,IAASc,EAAI,EAAGA,EAAIb,EAAGa,IACrBhB,EAAEgB,KAAOf,EAAEe,IAAMd,IACnB,OAAOA,EAAIC,EAAI,GACjB,CAMA,eAAO2N,CAASnO,GACd,OAAOA,GAAK,EACd,CAKA,gBAAAoO,GACE,OAAO3J,KAAKgJ,aACd,CAKA,gBAAAY,CAAiBrO,GACfyE,KAAKgJ,cAAgB3K,KAAKM,IAAI,EAAGN,KAAKiB,IAAI,GAAI/D,GAChD,CAKA,eAAAsO,GACE,OAAOxP,EAAE4O,kBAAkBjJ,KAAKgJ,cAClC,CAMA,gBAAAc,CAAiBvO,EAAI,IACnB,MAAMG,EAAIsE,KAAK6J,kBACf,OAAOxP,EAAE6O,qBAAqBxN,EAAGH,EACnC,CAKA,aAAAwO,GACE,OAAO/J,KAAKgJ,cAAgB,IAAMhJ,KAAKgJ,gBAAiBhJ,KAAKgJ,aAC/D,CAKA,cAAAgB,GACE,OAAOhK,KAAKgJ,cAAgB,GAAKhJ,KAAKgJ,gBAAiBhJ,KAAKgJ,aAC9D,CAKA,YAAAiB,GACE,OAA8B,KAAvBjK,KAAKgJ,aACd,CAKA,aAAAkB,GACE,OAA8B,IAAvBlK,KAAKgJ,aACd,CAKA,sBAAOmB,GACL,OAAO,EACT,CAKA,oBAAOC,GACL,OAAOhQ,EAAEuC,MACX,CAKA,kBAAO0N,GACL,MAAO,IAAIjQ,EACb;iBAGF;MAAMT,EAAI,CACR,QACA,QACA,QACA,SACA,WACA,OACA,UACA,UACA,SACA,YACA,WACA,UACA,QACA,aACA,QACA,UACA,YACA,WACA,UACA,aACA,WACA,YACA,YACA,OACA,aACA,WACA,SACA,OACA,WACA,OACA,QACA,WACA,OACA,WACA,SACA,QACA,YACA,UACA,WACA,OACA,YACA,YACA,QACA,OACA,MACA,YACA,SACA,UACA,YACA,YACA,YACA,OACA,WACA,QACA,WACA,WACA,UACA,YACA,SACA,cACA,YACA,YACA,WACA,QACA,YACA,YACA,WACA,YACA,QACA,UACA,UACA,YACA,YACA,YACA,WACA,aACA,WACA,WACA,WACA,UACA,UACA,WACA,UACA,aACA,OACA,QACA,QACA,OACA,YACA,SACA,UACA,YACA,WACA,WACA,QACA,SACA,OACA,UACA,WACA,SAGIQ,EAAI,CACR,OACA,OACA,MACA,OACA,MACA,OACA,MACA,OACA,QACA,OACA,OACA,MACA,MACA,MACA,OACA,QACA,SACA,OACA,MACA,KACA,OACA,OACA,OACA,QACA,OACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,QACA,QACA,SACA,SACA,SACA,UACA,SACA,UACA,UACA,SACA,QACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,WACA,UACA,WACA,SACA,SACA,SACA,SACA,QACA,QACA,UACA,MACA,OACA,UACA,WACA,SACA,QACA,QACA,UACA,SACA,SACA,UACA,QACA,OACA,QACA,UACA,QACA,OACA,SACA,SACA,SACA,SACA,SACA,MACA,MACA,OACA,MACA,MACA,QACA,MACA,MACA,OACA,QAGIJ,EAAI,CACR,UACA,SACA,UACA,UACA,WAEA,UACA,UACA,UACA,SACA,SAEA,WACA,UACA,YACA,UACA,WAIIuQ,EAAI,CACR,MACA,MA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"}