{"version":3,"file":"index-C4WCukPm.js","sources":["../../src/ui/views/MenuView.ts","../../src/ui/views/VerticalKeyView.ts","../../src/ui/views/HorizontalKeyView.ts","../../src/utils/flashcard-loader.ts","../../src/ui/views/FlashcardView.ts","../../src/ui/views/KochView.ts","../../src/ui/views/ListeningView.ts","../../src/utils/download-helper.ts","../../src/router/index.ts","../../src/main.ts"],"sourcesContent":["/**\n * メニュービュー\n */\n\nimport type { View } from '../../router';\n\n/**\n * メニュー項目の定義\n */\ninterface MenuItem {\n\tid: string;\n\ttitle: string;\n\tdescription: string;\n\troute: string;\n}\n\n/**\n * メニュービュークラス\n */\nexport class MenuView implements View {\n\tprivate menuItems: MenuItem[] = [\n\t\t{\n\t\t\tid: 'vertical',\n\t\t\ttitle: '縦振り電鍵練習',\n\t\t\tdescription: '上下に動かす電鍵（ストレートキー）の練習',\n\t\t\troute: 'vertical'\n\t\t},\n\t\t{\n\t\t\tid: 'horizontal',\n\t\t\ttitle: '横振り電鍵練習',\n\t\t\tdescription: '左右に動かす電鍵（パドル）の練習（Iambic A/B対応）',\n\t\t\troute: 'horizontal'\n\t\t},\n\t\t{\n\t\t\tid: 'flashcard',\n\t\t\ttitle: 'CW略語・Q符号',\n\t\t\tdescription: 'CW通信で使用される略語とQ符号を学習',\n\t\t\troute: 'flashcard'\n\t\t},\n\t\t{\n\t\t\tid: 'koch',\n\t\t\ttitle: 'コッホ法トレーニング',\n\t\t\tdescription: '段階的に文字を増やして学習する方式',\n\t\t\troute: 'koch'\n\t\t},\n\t\t{\n\t\t\tid: 'listening',\n\t\t\ttitle: 'モールス信号聞き取り練習',\n\t\t\tdescription: 'ランダムQSOや英文を聞いて練習',\n\t\t\troute: 'listening'\n\t\t}\n\t];\n\n\t/**\n\t * ビューをレンダリングする\n\t */\n\trender(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"menu-header\">\n\t\t\t\t\t<h1>モールス練習アプリ</h1>\n\t\t\t\t\t<p class=\"version\">v11 - タイミング評価版</p>\n\t\t\t\t</header>\n\n\t\t\t\t<main class=\"menu-main\">\n\t\t\t\t\t<div class=\"menu-grid\">\n\t\t\t\t\t\t${this.menuItems.map(item => this.renderMenuItem(item)).join('')}\n\t\t\t\t\t</div>\n\t\t\t\t</main>\n\n\t\t\t\t<footer class=\"menu-footer\">\n\t\t\t\t\t<p>&copy; 2025 モールス練習アプリ</p>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t`;\n\n\t\t//! イベントリスナーを設定。\n\t\tthis.attachEventListeners();\n\t}\n\n\t/**\n\t * メニュー項目を描画する\n\t */\n\tprivate renderMenuItem(item: MenuItem): string {\n\t\treturn `\n\t\t\t<div class=\"menu-item\" data-route=\"${item.route}\">\n\t\t\t\t<h2 class=\"menu-item-title\">${item.title}</h2>\n\t\t\t\t<p class=\"menu-item-description\">${item.description}</p>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\t/**\n\t * イベントリスナーを設定する\n\t */\n\tprivate attachEventListeners(): void {\n\t\tconst menuItems = document.querySelectorAll('.menu-item');\n\t\tmenuItems.forEach(item => {\n\t\t\titem.addEventListener('click', () => {\n\t\t\t\tconst route = item.getAttribute('data-route');\n\t\t\t\tif (route) {\n\t\t\t\t\twindow.location.hash = `#${route}`;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * ビューを破棄する\n\t */\n\tdestroy(): void {\n\t\t//! イベントリスナーは新しいHTMLで上書きされるため、特に処理不要。\n\t}\n}\n","/**\n * 縦振り電鍵練習ビュー\n */\n\nimport type { View } from '../../router';\nimport {\n\tVerticalKeyTrainer,\n\tMorseBuffer,\n\tTimerManager,\n\tTimingCalculator,\n\tAudioGenerator,\n\ttype TimingEvaluation,\n\ttype TimingStatistics\n} from 'morse-engine';\nimport { SettingsModal, ALL_SETTING_ITEMS, type SettingValues } from 'morse-engine';\n\n/**\n * 縦振り電鍵練習ビュークラス\n */\nexport class VerticalKeyView implements View {\n\tprivate trainer: VerticalKeyTrainer;\n\tprivate buffer: MorseBuffer;\n\tprivate timer: TimerManager;\n\tprivate audio: AudioGenerator;\n\tprivate isKeyPressed = false;\n\tprivate keyPressHandler: ((e: KeyboardEvent) => void) | null = null;\n\tprivate keyReleaseHandler: ((e: KeyboardEvent) => void) | null = null;\n\tprivate updateIntervalId: number | null = null;\n\tprivate currentWPM = 20;\n\tprivate keyCode = 'Space';\n\tprivate latestEvaluation: TimingEvaluation | null = null;\n\tprivate overallStats: TimingStatistics | null = null;\n\tprivate dotStats: TimingStatistics | null = null;\n\tprivate dashStats: TimingStatistics | null = null;\n\n\tconstructor() {\n\t\t//! 設定を読み込む。\n\t\tconst savedWPM = localStorage.getItem('verticalKeyWPM');\n\t\tif (savedWPM) {\n\t\t\tthis.currentWPM = parseInt(savedWPM, 10);\n\t\t}\n\n\t\tconst savedKeyCode = localStorage.getItem('verticalKeyCode');\n\t\tif (savedKeyCode) {\n\t\t\tthis.keyCode = savedKeyCode;\n\t\t}\n\n\t\t//! コアコンポーネントを初期化。\n\t\tthis.buffer = new MorseBuffer();\n\t\tthis.timer = new TimerManager();\n\t\tthis.audio = new AudioGenerator({\n\t\t\tfrequency: 700,\n\t\t\tvolume: 0.5,\n\t\t\twpm: this.currentWPM\n\t\t});\n\n\t\t//! タイミング計算。\n\t\tconst timings = TimingCalculator.calculate(this.currentWPM);\n\n\t\t//! トレーナーを初期化（コールバックで音声制御とタイミング評価）。\n\t\tthis.trainer = new VerticalKeyTrainer(\n\t\t\tthis.buffer,\n\t\t\tthis.timer,\n\t\t\ttimings,\n\t\t\t{\n\t\t\t\tonKeyPress: () => {\n\t\t\t\t\t//! キー押下時に音を鳴らす。\n\t\t\t\t\tthis.audio.startContinuousTone();\n\t\t\t\t},\n\t\t\t\tonKeyRelease: () => {\n\t\t\t\t\t//! キー解放時に音を止める。\n\t\t\t\t\tthis.audio.stopContinuousTone();\n\t\t\t\t},\n\t\t\t\tonTimingEvaluated: (evaluation: TimingEvaluation) => {\n\t\t\t\t\t//! タイミング評価結果を保存。\n\t\t\t\t\tthis.latestEvaluation = evaluation;\n\t\t\t\t\tthis.updateTimingStatistics();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * ビューをレンダリングする\n\t */\n\trender(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"settings-icon\" id=\"settingsIcon\">\n\t\t\t\t<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t<h1>縦振り電鍵練習</h1>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"key-button-container\">\n\t\t\t\t\t<button class=\"key-button\" id=\"morse-key\">\n\t\t\t\t\t\tKEY\n\t\t\t\t\t\t<span class=\"key-label\">(クリック/タップで送信)</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"practice-container\">\n\t\t\t\t\t<div class=\"display-area\">\n\t\t\t\t\t\t<div class=\"display-section\">\n\t\t\t\t\t\t\t<h3>モールス信号</h3>\n\t\t\t\t\t\t\t<div class=\"display-output morse-buffer\" id=\"morse-buffer\">（ここにモールス符号が表示されます）</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"display-section\">\n\t\t\t\t\t\t\t<h3>デコード結果</h3>\n\t\t\t\t\t\t\t<div class=\"display-output\" id=\"decoded-text\">（ここにデコードされた文字が表示されます）</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"action-area\">\n\t\t\t\t\t\t<button class=\"btn btn-large btn-danger\" id=\"clear-btn\">クリア</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"status-area\">\n\t\t\t\t\t\t<div class=\"status-item\">\n\t\t\t\t\t\t\t<span class=\"label\">現在の速度</span>\n\t\t\t\t\t\t\t<span class=\"value\" id=\"current-wpm\">${this.currentWPM}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"status-item\" id=\"key-status\">\n\t\t\t\t\t\t\t<span class=\"label\">キー状態</span>\n\t\t\t\t\t\t\t<span class=\"value\">解放</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"status-item\">\n\t\t\t\t\t\t\t<span class=\"label\">入力文字数</span>\n\t\t\t\t\t\t\t<span class=\"value\" id=\"char-count\">0</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"timing-evaluation-area\">\n\t\t\t\t\t\t<h3>タイミング評価</h3>\n\t\t\t\t\t\t<div class=\"evaluation-panel\">\n\t\t\t\t\t\t\t<div class=\"latest-evaluation\">\n\t\t\t\t\t\t\t\t<h4>最新の入力</h4>\n\t\t\t\t\t\t\t\t<div id=\"latest-evaluation-content\" class=\"evaluation-content\">\n\t\t\t\t\t\t\t\t\t（入力待ち）\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"statistics-panel\">\n\t\t\t\t\t\t\t\t<h4>全体統計</h4>\n\t\t\t\t\t\t\t\t<div id=\"overall-stats-content\" class=\"stats-content\">\n\t\t\t\t\t\t\t\t\t（統計データなし）\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"element-stats-panel\">\n\t\t\t\t\t\t\t\t<div class=\"dot-stats\">\n\t\t\t\t\t\t\t\t\t<h4>短点 (・) 統計</h4>\n\t\t\t\t\t\t\t\t\t<div id=\"dot-stats-content\" class=\"stats-content\">\n\t\t\t\t\t\t\t\t\t\t（データなし）\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"dash-stats\">\n\t\t\t\t\t\t\t\t\t<h4>長点 (ー) 統計</h4>\n\t\t\t\t\t\t\t\t\t<div id=\"dash-stats-content\" class=\"stats-content\">\n\t\t\t\t\t\t\t\t\t\t（データなし）\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t\t<h3>使い方</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>スペースキーまたは画面のボタンを押している間、モールス信号が送信されます</li>\n\t\t\t\t\t\t\t<li>短く押すと「・」(dit)、長く押すと「ー」(dah)になります</li>\n\t\t\t\t\t\t\t<li>文字間は自動的に判定されます</li>\n\t\t\t\t\t\t\t<li>WPM（Words Per Minute）で速度を調整できます</li>\n\t\t\t\t\t\t\t<li>画面右上の⚙アイコンから音量・周波数・速度を調整できます</li>\n\t\t\t\t\t\t\t<li>音声が鳴らない場合は、一度ボタンをクリックしてください（ブラウザのオーディオポリシー）</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\t//! イベントリスナーを設定。\n\t\tthis.attachEventListeners();\n\t\t//! 定期更新を開始。\n\t\tthis.startUpdate();\n\t}\n\n\t/**\n\t * イベントリスナーを設定する\n\t */\n\tprivate attachEventListeners(): void {\n\t\t//! 戻るボタン。\n\t\tconst backBtn = document.querySelector('.back-btn');\n\t\tbackBtn?.addEventListener('click', () => {\n\t\t\twindow.location.hash = '#menu';\n\t\t});\n\n\t\t//! 設定アイコン。\n\t\tdocument.getElementById('settingsIcon')?.addEventListener('click', () => {\n\t\t\tthis.openSettingsModal();\n\t\t});\n\n\t\t//! クリアボタン。\n\t\tconst clearBtn = document.getElementById('clear-btn');\n\t\tclearBtn?.addEventListener('click', () => {\n\t\t\tthis.trainer.clear();\n\t\t\tthis.updateDisplay();\n\t\t});\n\n\t\t//! キーボードイベント（設定されたキー）。\n\t\tthis.keyPressHandler = (e: KeyboardEvent) => {\n\t\t\tif (e.code === this.keyCode && !e.repeat) {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (!this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyDown();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.keyReleaseHandler = (e: KeyboardEvent) => {\n\t\t\tif (e.code === this.keyCode) {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyUp();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener('keydown', this.keyPressHandler);\n\t\twindow.addEventListener('keyup', this.keyReleaseHandler);\n\n\t\t//! ボタンイベント（マウス/タッチ）。\n\t\tconst keyButton = document.getElementById('morse-key');\n\t\tif (keyButton) {\n\t\t\t//! マウスイベント。\n\t\t\tkeyButton.addEventListener('mousedown', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (!this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyDown();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tkeyButton.addEventListener('mouseup', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyUp();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tkeyButton.addEventListener('mouseleave', () => {\n\t\t\t\tif (this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyUp();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//! タッチイベント。\n\t\t\tkeyButton.addEventListener('touchstart', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (!this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyDown();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tkeyButton.addEventListener('touchend', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyUp();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tkeyButton.addEventListener('touchcancel', () => {\n\t\t\t\tif (this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyUp();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * キー押下処理\n\t */\n\tprivate handleKeyDown(): void {\n\t\tthis.isKeyPressed = true;\n\t\tthis.trainer.keyPress();\n\t\tthis.updateKeyStatus(true);\n\n\t\t//! ボタンの見た目を更新。\n\t\tconst keyButton = document.getElementById('morse-key');\n\t\tif (keyButton) {\n\t\t\tkeyButton.classList.add('pressed');\n\t\t}\n\t}\n\n\t/**\n\t * キー解放処理\n\t */\n\tprivate handleKeyUp(): void {\n\t\tthis.isKeyPressed = false;\n\t\tthis.trainer.keyRelease();\n\t\tthis.updateKeyStatus(false);\n\n\t\t//! ボタンの見た目を更新。\n\t\tconst keyButton = document.getElementById('morse-key');\n\t\tif (keyButton) {\n\t\t\tkeyButton.classList.remove('pressed');\n\t\t}\n\t}\n\n\t/**\n\t * 定期更新を開始する\n\t */\n\tprivate startUpdate(): void {\n\t\t//! 100msごとに画面を更新。\n\t\tthis.updateIntervalId = window.setInterval(() => {\n\t\t\tthis.updateDisplay();\n\t\t}, 100);\n\t}\n\n\t/**\n\t * 表示を更新する\n\t */\n\tprivate updateDisplay(): void {\n\t\tconst morseBuffer = document.getElementById('morse-buffer');\n\t\tconst decodedText = document.getElementById('decoded-text');\n\t\tconst charCount = document.getElementById('char-count');\n\n\t\tif (morseBuffer) {\n\t\t\tconst buffer = this.trainer.getBuffer();\n\t\t\tconst sequence = this.trainer.getSequence();\n\t\t\tconst fullDisplay = sequence ? `${buffer} ${sequence}` : buffer;\n\t\t\tmorseBuffer.textContent = fullDisplay || '（ここにモールス符号が表示されます）';\n\t\t}\n\n\t\tif (decodedText) {\n\t\t\tconst text = this.trainer.getDecoded();\n\t\t\tdecodedText.textContent = text || '（ここにデコードされた文字が表示されます）';\n\t\t}\n\n\t\tif (charCount) {\n\t\t\tconst text = this.trainer.getDecoded();\n\t\t\tcharCount.textContent = text.length.toString();\n\t\t}\n\n\t\t//! タイミング評価表示を更新。\n\t\tthis.updateTimingDisplay();\n\t}\n\n\t/**\n\t * タイミング統計情報を更新する\n\t */\n\tprivate updateTimingStatistics(): void {\n\t\tthis.overallStats = this.trainer.getTimingStatistics();\n\t\tconst elementStats = this.trainer.getStatisticsByElement();\n\t\tthis.dotStats = elementStats.dot;\n\t\tthis.dashStats = elementStats.dash;\n\t}\n\n\t/**\n\t * タイミング評価表示を更新する\n\t */\n\tprivate updateTimingDisplay(): void {\n\t\t//! 最新評価を表示。\n\t\tconst latestContent = document.getElementById('latest-evaluation-content');\n\t\tif (latestContent && this.latestEvaluation) {\n\t\t\tconst eval_ = this.latestEvaluation;\n\t\t\tconst element = eval_.record.element === '.' ? '短点 (・)' : '長点 (ー)';\n\t\t\tconst accuracy = eval_.accuracy.toFixed(1);\n\t\t\tconst accuracyClass = this.getAccuracyClass(eval_.accuracy);\n\n\t\t\t//! 棒グラフの幅計算（8短点分を100%とする固定スケール）。\n\t\t\tconst timings = TimingCalculator.calculate(this.currentWPM);\n\t\t\tconst dotDuration = timings.dot;\n\t\t\tconst maxDuration = dotDuration * 8; // 8短点分を100%とする\n\t\t\tconst expected = eval_.record.expectedDuration;\n\t\t\tconst actual = eval_.record.actualDuration;\n\t\t\tconst expectedPercent = (expected / maxDuration) * 100;\n\t\t\tconst actualPercent = (actual / maxDuration) * 100;\n\n\t\t\t//! 誤差の方向（長い/短い）を判定。\n\t\t\tconst diff = actual - expected;\n\t\t\tconst diffClass = diff > 0 ? 'longer' : diff < 0 ? 'shorter' : 'perfect';\n\t\t\tconst diffText = diff > 0 ? `+${diff}ms (長い)` : diff < 0 ? `${diff}ms (短い)` : '完璧';\n\n\t\t\tlatestContent.innerHTML = `\n\t\t\t\t<div class=\"eval-item\">\n\t\t\t\t\t<span class=\"eval-label\">要素:</span>\n\t\t\t\t\t<span class=\"eval-value\">${element}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"timing-chart\">\n\t\t\t\t\t<div class=\"chart-row\">\n\t\t\t\t\t\t<div class=\"chart-label\">理論値:</div>\n\t\t\t\t\t\t<div class=\"chart-bar-container\">\n\t\t\t\t\t\t\t<div class=\"chart-bar expected\" style=\"width: ${expectedPercent}%\">\n\t\t\t\t\t\t\t\t<span class=\"chart-value\">${expected}ms</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"chart-row\">\n\t\t\t\t\t\t<div class=\"chart-label\">実測値:</div>\n\t\t\t\t\t\t<div class=\"chart-bar-container\">\n\t\t\t\t\t\t\t<div class=\"chart-bar actual ${accuracyClass}\" style=\"width: ${actualPercent}%\">\n\t\t\t\t\t\t\t\t<span class=\"chart-value\">${actual}ms</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"chart-scale\">\n\t\t\t\t\t\t<span>0ms</span>\n\t\t\t\t\t\t<span>${Math.round(dotDuration * 4)}ms</span>\n\t\t\t\t\t\t<span>${Math.round(maxDuration)}ms</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"eval-item\">\n\t\t\t\t\t<span class=\"eval-label\">精度:</span>\n\t\t\t\t\t<span class=\"eval-value accuracy-${accuracyClass}\">${accuracy}%</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"eval-item\">\n\t\t\t\t\t<span class=\"eval-label\">誤差:</span>\n\t\t\t\t\t<span class=\"eval-value timing-diff-${diffClass}\">${diffText}</span>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\t//! 全体統計を表示。\n\t\tconst overallContent = document.getElementById('overall-stats-content');\n\t\tif (overallContent && this.overallStats && this.overallStats.count > 0) {\n\t\t\tconst stats = this.overallStats;\n\t\t\tconst accuracyClass = this.getAccuracyClass(stats.averageAccuracy);\n\n\t\t\toverallContent.innerHTML = `\n\t\t\t\t<div class=\"stat-item\">\n\t\t\t\t\t<span class=\"stat-label\">入力数:</span>\n\t\t\t\t\t<span class=\"stat-value\">${stats.count}回</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"stat-item\">\n\t\t\t\t\t<span class=\"stat-label\">平均精度:</span>\n\t\t\t\t\t<span class=\"stat-value accuracy-${accuracyClass}\">${stats.averageAccuracy.toFixed(1)} ± ${stats.standardDeviation.toFixed(1)}%</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"stat-item\">\n\t\t\t\t\t<span class=\"stat-label\">最高精度:</span>\n\t\t\t\t\t<span class=\"stat-value\">${stats.maxAccuracy.toFixed(1)}%</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"stat-item\">\n\t\t\t\t\t<span class=\"stat-label\">最低精度:</span>\n\t\t\t\t\t<span class=\"stat-value\">${stats.minAccuracy.toFixed(1)}%</span>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\t//! 短点統計を表示。\n\t\tconst dotContent = document.getElementById('dot-stats-content');\n\t\tif (dotContent && this.dotStats && this.dotStats.count > 0) {\n\t\t\tconst stats = this.dotStats;\n\t\t\tconst accuracyClass = this.getAccuracyClass(stats.averageAccuracy);\n\n\t\t\tdotContent.innerHTML = `\n\t\t\t\t<div class=\"stat-item\">\n\t\t\t\t\t<span class=\"stat-label\">入力数:</span>\n\t\t\t\t\t<span class=\"stat-value\">${stats.count}回</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"stat-item\">\n\t\t\t\t\t<span class=\"stat-label\">平均精度:</span>\n\t\t\t\t\t<span class=\"stat-value accuracy-${accuracyClass}\">${stats.averageAccuracy.toFixed(1)} ± ${stats.standardDeviation.toFixed(1)}%</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"stat-item\">\n\t\t\t\t\t<span class=\"stat-label\">平均誤差:</span>\n\t\t\t\t\t<span class=\"stat-value\">${stats.averageAbsoluteError.toFixed(1)}ms</span>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\t//! 長点統計を表示。\n\t\tconst dashContent = document.getElementById('dash-stats-content');\n\t\tif (dashContent && this.dashStats && this.dashStats.count > 0) {\n\t\t\tconst stats = this.dashStats;\n\t\t\tconst accuracyClass = this.getAccuracyClass(stats.averageAccuracy);\n\n\t\t\tdashContent.innerHTML = `\n\t\t\t\t<div class=\"stat-item\">\n\t\t\t\t\t<span class=\"stat-label\">入力数:</span>\n\t\t\t\t\t<span class=\"stat-value\">${stats.count}回</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"stat-item\">\n\t\t\t\t\t<span class=\"stat-label\">平均精度:</span>\n\t\t\t\t\t<span class=\"stat-value accuracy-${accuracyClass}\">${stats.averageAccuracy.toFixed(1)} ± ${stats.standardDeviation.toFixed(1)}%</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"stat-item\">\n\t\t\t\t\t<span class=\"stat-label\">平均誤差:</span>\n\t\t\t\t\t<span class=\"stat-value\">${stats.averageAbsoluteError.toFixed(1)}ms</span>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\t}\n\n\t/**\n\t * 精度に応じたCSSクラス名を取得する\n\t */\n\tprivate getAccuracyClass(accuracy: number): string {\n\t\tif (accuracy >= 90) return 'excellent';\n\t\tif (accuracy >= 70) return 'good';\n\t\tif (accuracy >= 50) return 'fair';\n\t\treturn 'poor';\n\t}\n\n\t/**\n\t * キー状態表示を更新する\n\t */\n\tprivate updateKeyStatus(isPressed: boolean): void {\n\t\tconst keyStatus = document.getElementById('key-status');\n\t\tif (keyStatus) {\n\t\t\tconst valueSpan = keyStatus.querySelector('.value');\n\t\t\tif (valueSpan) {\n\t\t\t\tvalueSpan.textContent = isPressed ? '押下中' : '解放';\n\t\t\t}\n\t\t\tif (isPressed) {\n\t\t\t\tkeyStatus.classList.add('active');\n\t\t\t} else {\n\t\t\t\tkeyStatus.classList.remove('active');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * 設定モーダルを開く\n\t */\n\tprivate openSettingsModal(): void {\n\t\t//! 現在の設定値を取得。\n\t\tconst currentValues: SettingValues = {\n\t\t\tvolume: Math.round(this.audio.getVolume() * 100),\n\t\t\tfrequency: this.audio.getFrequency(),\n\t\t\twpm: this.currentWPM,\n\t\t\tkeyCode: this.keyCode\n\t\t};\n\n\t\t//! 設定変更前の値を保存（キャンセル時の復元用）。\n\t\tconst savedSettings = {\n\t\t\tvolume: this.audio.getVolume(),\n\t\t\tfrequency: this.audio.getFrequency(),\n\t\t\twpm: this.currentWPM,\n\t\t\tkeyCode: this.keyCode\n\t\t};\n\n\t\t//! SettingsModalを作成。\n\t\tconst modal = new SettingsModal(\n\t\t\t'vertical-key-settings-modal',\n\t\t\tALL_SETTING_ITEMS,\n\t\t\tcurrentValues,\n\t\t\t{\n\t\t\t\tonSave: (values: SettingValues) => {\n\t\t\t\t\t//! 設定を保存。\n\t\t\t\t\tthis.audio.setVolume((values.volume as number) / 100);\n\t\t\t\t\tthis.audio.setFrequency(values.frequency as number);\n\t\t\t\t\tthis.audio.setWPM(values.wpm as number);\n\t\t\t\t\tthis.currentWPM = values.wpm as number;\n\t\t\t\t\tthis.keyCode = values.keyCode as string;\n\n\t\t\t\t\t//! localStorageに保存。\n\t\t\t\t\tlocalStorage.setItem('verticalKeyWPM', this.currentWPM.toString());\n\t\t\t\t\tlocalStorage.setItem('verticalKeyCode', this.keyCode);\n\n\t\t\t\t\t//! タイミングを再計算してトレーナーを再初期化。\n\t\t\t\t\tconst timings = TimingCalculator.calculate(this.currentWPM);\n\t\t\t\t\tthis.trainer = new VerticalKeyTrainer(\n\t\t\t\t\t\tthis.buffer,\n\t\t\t\t\t\tthis.timer,\n\t\t\t\t\t\ttimings,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tonKeyPress: () => {\n\t\t\t\t\t\t\t\tthis.audio.startContinuousTone();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonKeyRelease: () => {\n\t\t\t\t\t\t\t\tthis.audio.stopContinuousTone();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonTimingEvaluated: (evaluation: TimingEvaluation) => {\n\t\t\t\t\t\t\t\tthis.latestEvaluation = evaluation;\n\t\t\t\t\t\t\t\tthis.updateTimingStatistics();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\t//! 現在のWPM表示を更新。\n\t\t\t\t\tconst currentWpmDisplay = document.getElementById('current-wpm');\n\t\t\t\t\tif (currentWpmDisplay) currentWpmDisplay.textContent = this.currentWPM.toString();\n\t\t\t\t},\n\t\t\t\tonCancel: () => {\n\t\t\t\t\t//! 設定を元に戻す。\n\t\t\t\t\tthis.audio.setVolume(savedSettings.volume);\n\t\t\t\t\tthis.audio.setFrequency(savedSettings.frequency);\n\t\t\t\t\tthis.audio.setWPM(savedSettings.wpm);\n\t\t\t\t\tthis.currentWPM = savedSettings.wpm;\n\t\t\t\t\tthis.keyCode = savedSettings.keyCode;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t//! モーダルを表示。\n\t\tmodal.show('vertical-key');\n\t}\n\n\t/**\n\t * ビューを破棄する\n\t */\n\tdestroy(): void {\n\t\t//! イベントリスナーを削除。\n\t\tif (this.keyPressHandler) {\n\t\t\twindow.removeEventListener('keydown', this.keyPressHandler);\n\t\t\tthis.keyPressHandler = null;\n\t\t}\n\t\tif (this.keyReleaseHandler) {\n\t\t\twindow.removeEventListener('keyup', this.keyReleaseHandler);\n\t\t\tthis.keyReleaseHandler = null;\n\t\t}\n\n\t\t//! 定期更新を停止。\n\t\tif (this.updateIntervalId !== null) {\n\t\t\tclearInterval(this.updateIntervalId);\n\t\t\tthis.updateIntervalId = null;\n\t\t}\n\n\t\t//! 音声を停止。\n\t\tthis.audio.stopContinuousTone();\n\n\t\t//! トレーナーをクリア。\n\t\tthis.trainer.clear();\n\t}\n}\n","/**\n * 横振り電鍵練習ビュー\n */\n\nimport type { View } from '../../router';\nimport {\n\tHorizontalKeyTrainer,\n\tMorseBuffer,\n\tTimerManager,\n\tTimingCalculator,\n\tAudioGenerator,\n\ttype IambicMode,\n\ttype PaddleLayout,\n\ttype MorseTimings,\n\ttype WordTimingData\n} from 'morse-engine';\nimport { SettingsModal, ALL_SETTING_ITEMS, type SettingValues } from 'morse-engine';\n\n/**\n * 横振り電鍵練習ビュークラス\n */\nexport class HorizontalKeyView implements View {\n\tprivate trainer!: HorizontalKeyTrainer;\n\tprivate buffer: MorseBuffer;\n\tprivate timer: TimerManager;\n\tprivate audio: AudioGenerator;\n\tprivate timings!: MorseTimings;\n\tprivate leftPressed = false;\n\tprivate rightPressed = false;\n\tprivate updateIntervalId: number | null = null;\n\tprivate currentWPM = 20;\n\tprivate iambicMode: IambicMode = 'B';\n\tprivate paddleLayout: PaddleLayout = 'normal';\n\tprivate leftKeyCode = 'KeyJ';\n\tprivate rightKeyCode = 'KeyK';\n\n\t// イベントハンドラーの参照を保持\n\tprivate keyPressHandler: ((e: KeyboardEvent) => void) | null = null;\n\tprivate keyReleaseHandler: ((e: KeyboardEvent) => void) | null = null;\n\n\tconstructor() {\n\t\t//! 設定を読み込む。\n\t\tconst savedWPM = localStorage.getItem('horizontalKeyWPM');\n\t\tif (savedWPM) {\n\t\t\tthis.currentWPM = parseInt(savedWPM, 10);\n\t\t}\n\n\t\tconst savedIambicMode = localStorage.getItem('horizontalKeyIambicMode');\n\t\tif (savedIambicMode === 'A' || savedIambicMode === 'B') {\n\t\t\tthis.iambicMode = savedIambicMode;\n\t\t}\n\n\t\tconst savedPaddleLayout = localStorage.getItem('horizontalKeyPaddleLayout');\n\t\tif (savedPaddleLayout === 'normal' || savedPaddleLayout === 'reversed') {\n\t\t\tthis.paddleLayout = savedPaddleLayout;\n\t\t}\n\n\t\tconst savedLeftKeyCode = localStorage.getItem('horizontalKeyLeftCode');\n\t\tif (savedLeftKeyCode) {\n\t\t\tthis.leftKeyCode = savedLeftKeyCode;\n\t\t}\n\n\t\tconst savedRightKeyCode = localStorage.getItem('horizontalKeyRightCode');\n\t\tif (savedRightKeyCode) {\n\t\t\tthis.rightKeyCode = savedRightKeyCode;\n\t\t}\n\n\t\t//! コアコンポーネントを初期化。\n\t\tthis.buffer = new MorseBuffer();\n\t\tthis.timer = new TimerManager();\n\t\tthis.audio = new AudioGenerator({\n\t\t\tfrequency: 700,\n\t\t\tvolume: 0.5,\n\t\t\twpm: this.currentWPM\n\t\t});\n\n\t\t//! トレーナーを初期化。\n\t\tthis.initializeTrainer();\n\t}\n\n\t/**\n\t * トレーナーを初期化する\n\t */\n\tprivate initializeTrainer(): void {\n\t\tthis.timings = TimingCalculator.calculate(this.currentWPM);\n\n\t\tthis.trainer = new HorizontalKeyTrainer(\n\t\t\tthis.buffer,\n\t\t\tthis.timer,\n\t\t\tthis.timings,\n\t\t\t{\n\t\t\t\tonElementStart: (_element: '.' | '-', duration: number) => {\n\t\t\t\t\t//! 要素送信開始時に指定時間だけ音を鳴らす。\n\t\t\t\t\t// scheduleToneに0を渡すと現在時刻から再生される\n\t\t\t\t\tthis.audio.scheduleTone(0, duration);\n\t\t\t\t},\n\t\t\t\tonSpacingEvaluated: () => {\n\t\t\t\t\t//! スペーシング評価が完了したら画面を更新。\n\t\t\t\t\tthis.updateDisplay();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tiambicMode: this.iambicMode,\n\t\t\t\tpaddleLayout: this.paddleLayout\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * ビューをレンダリングする\n\t */\n\trender(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"settings-icon\" id=\"settingsIcon\">\n\t\t\t\t<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t<h1>横振り電鍵練習</h1>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"paddle-container\">\n\t\t\t\t\t<button class=\"paddle-button dit\" id=\"left-paddle\">\n\t\t\t\t\t\tDIT\n\t\t\t\t\t\t<span class=\"paddle-label\">(短点)</span>\n\t\t\t\t\t\t<span class=\"paddle-key\">J キー</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button class=\"paddle-button dah\" id=\"right-paddle\">\n\t\t\t\t\t\tDAH\n\t\t\t\t\t\t<span class=\"paddle-label\">(長点)</span>\n\t\t\t\t\t\t<span class=\"paddle-key\">K キー</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"practice-container\">\n\t\t\t\t\t<div class=\"display-area\">\n\t\t\t\t\t\t<div class=\"display-section\">\n\t\t\t\t\t\t\t<h3>モールス信号</h3>\n\t\t\t\t\t\t\t<div class=\"display-output morse-buffer\" id=\"morse-buffer\">（ここにモールス符号が表示されます）</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"display-section\">\n\t\t\t\t\t\t\t<h3>デコード結果</h3>\n\t\t\t\t\t\t\t<div class=\"display-output\" id=\"decoded-text\">（ここにデコードされた文字が表示されます）</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"action-area\">\n\t\t\t\t\t\t<button class=\"btn btn-large btn-danger\" id=\"clear-btn\">クリア</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"status-area\">\n\t\t\t\t\t\t<div class=\"status-item\">\n\t\t\t\t\t\t\t<span class=\"label\">現在の速度</span>\n\t\t\t\t\t\t\t<span class=\"value\" id=\"current-wpm\">${this.currentWPM}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"status-item\">\n\t\t\t\t\t\t\t<span class=\"label\">Iambicモード</span>\n\t\t\t\t\t\t\t<span class=\"value\" id=\"current-iambic-mode\">${this.iambicMode}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"status-item\">\n\t\t\t\t\t\t\t<span class=\"label\">入力文字数</span>\n\t\t\t\t\t\t\t<span class=\"value\" id=\"char-count\">0</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"timing-diagram-section\">\n\t\t\t\t\t\t<h3>タイミング図（直前の1文字）</h3>\n\t\t\t\t\t\t<div id=\"timing-diagram-content\" class=\"timing-diagram-content\">\n\t\t\t\t\t\t\t（文字が確定すると表示されます）\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"timing-diagram-section timing-evaluation-section\">\n\t\t\t\t\t\t<h3>スペーシング評価</h3>\n\t\t\t\t\t\t<div class=\"timing-stats-grid\">\n\t\t\t\t\t\t\t<div class=\"timing-stat-card\">\n\t\t\t\t\t\t\t\t<div class=\"timing-stat-label\">平均精度</div>\n\t\t\t\t\t\t\t\t<div class=\"timing-stat-value\" id=\"timing-avg-accuracy\">--%</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"timing-stat-card\">\n\t\t\t\t\t\t\t\t<div class=\"timing-stat-label\">平均誤差</div>\n\t\t\t\t\t\t\t\t<div class=\"timing-stat-value\" id=\"timing-avg-error\">--ms</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"timing-stat-card\">\n\t\t\t\t\t\t\t\t<div class=\"timing-stat-label\">評価数</div>\n\t\t\t\t\t\t\t\t<div class=\"timing-stat-value\" id=\"timing-count\">0</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"timing-element-stats\">\n\t\t\t\t\t\t\t<div class=\"timing-element-stat\">\n\t\t\t\t\t\t\t\t<h4>文字間</h4>\n\t\t\t\t\t\t\t\t<div class=\"timing-element-detail\">\n\t\t\t\t\t\t\t\t\t<span>期待値: <span id=\"timing-char-expected\">--ms</span></span>\n\t\t\t\t\t\t\t\t\t<span>精度: <span id=\"timing-char-accuracy\">--%</span></span>\n\t\t\t\t\t\t\t\t\t<span>誤差: <span id=\"timing-char-error\">--ms</span></span>\n\t\t\t\t\t\t\t\t\t<span>回数: <span id=\"timing-char-count\">0</span></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"timing-element-stat\">\n\t\t\t\t\t\t\t\t<h4>単語間</h4>\n\t\t\t\t\t\t\t\t<div class=\"timing-element-detail\">\n\t\t\t\t\t\t\t\t\t<span>期待値: <span id=\"timing-word-expected\">--ms</span></span>\n\t\t\t\t\t\t\t\t\t<span>精度: <span id=\"timing-word-accuracy\">--%</span></span>\n\t\t\t\t\t\t\t\t\t<span>誤差: <span id=\"timing-word-error\">--ms</span></span>\n\t\t\t\t\t\t\t\t\t<span>回数: <span id=\"timing-word-count\">0</span></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t\t<h3>使い方</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>左パドル（J）: 短点（・）/ 右パドル（K）: 長点（ー）</li>\n\t\t\t\t\t\t\t<li>両方同時押しで自動交互送信（Iambic）</li>\n\t\t\t\t\t\t\t<li>Iambic Bモード: スクイーズ後1要素追加送信</li>\n\t\t\t\t\t\t\t<li>画面右上の⚙アイコンから設定（WPM、Iambicモード、パドルレイアウト、音量・周波数）を変更できます</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\t//! イベントリスナーを設定。\n\t\tthis.attachEventListeners();\n\t\t//! 定期更新を開始。\n\t\tthis.startUpdate();\n\t}\n\n\t/**\n\t * イベントリスナーを設定する\n\t */\n\tprivate attachEventListeners(): void {\n\t\t//! 戻るボタン。\n\t\tconst backBtn = document.querySelector('.back-btn');\n\t\tbackBtn?.addEventListener('click', () => {\n\t\t\twindow.location.hash = '#menu';\n\t\t});\n\n\t\t//! 設定アイコン。\n\t\tdocument.getElementById('settingsIcon')?.addEventListener('click', () => {\n\t\t\tthis.openSettingsModal();\n\t\t});\n\n\t\t//! クリアボタン。\n\t\tconst clearBtn = document.getElementById('clear-btn');\n\t\tclearBtn?.addEventListener('click', () => {\n\t\t\tthis.trainer.clear();\n\t\t\tthis.updateDisplay();\n\t\t});\n\n\t\t//! キーボードイベント（設定されたキー）。\n\t\tthis.keyPressHandler = (e: KeyboardEvent) => {\n\t\t\tif (e.repeat) return;\n\n\t\t\tif (e.code === this.leftKeyCode) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleLeftPaddlePress();\n\t\t\t} else if (e.code === this.rightKeyCode) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleRightPaddlePress();\n\t\t\t}\n\t\t};\n\n\t\tthis.keyReleaseHandler = (e: KeyboardEvent) => {\n\t\t\tif (e.code === this.leftKeyCode) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleLeftPaddleRelease();\n\t\t\t} else if (e.code === this.rightKeyCode) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleRightPaddleRelease();\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener('keydown', this.keyPressHandler);\n\t\twindow.addEventListener('keyup', this.keyReleaseHandler);\n\n\t\t//! ボタンイベント（左パドル）。\n\t\tconst leftPaddle = document.getElementById('left-paddle');\n\t\tif (leftPaddle) {\n\t\t\tleftPaddle.addEventListener('mousedown', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleLeftPaddlePress();\n\t\t\t});\n\t\t\tleftPaddle.addEventListener('mouseup', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleLeftPaddleRelease();\n\t\t\t});\n\t\t\tleftPaddle.addEventListener('mouseleave', () => {\n\t\t\t\tif (this.leftPressed) this.handleLeftPaddleRelease();\n\t\t\t});\n\t\t\tleftPaddle.addEventListener('touchstart', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleLeftPaddlePress();\n\t\t\t});\n\t\t\tleftPaddle.addEventListener('touchend', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleLeftPaddleRelease();\n\t\t\t});\n\t\t\tleftPaddle.addEventListener('touchcancel', () => {\n\t\t\t\tif (this.leftPressed) this.handleLeftPaddleRelease();\n\t\t\t});\n\t\t}\n\n\t\t//! ボタンイベント（右パドル）。\n\t\tconst rightPaddle = document.getElementById('right-paddle');\n\t\tif (rightPaddle) {\n\t\t\trightPaddle.addEventListener('mousedown', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleRightPaddlePress();\n\t\t\t});\n\t\t\trightPaddle.addEventListener('mouseup', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleRightPaddleRelease();\n\t\t\t});\n\t\t\trightPaddle.addEventListener('mouseleave', () => {\n\t\t\t\tif (this.rightPressed) this.handleRightPaddleRelease();\n\t\t\t});\n\t\t\trightPaddle.addEventListener('touchstart', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleRightPaddlePress();\n\t\t\t});\n\t\t\trightPaddle.addEventListener('touchend', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleRightPaddleRelease();\n\t\t\t});\n\t\t\trightPaddle.addEventListener('touchcancel', () => {\n\t\t\t\tif (this.rightPressed) this.handleRightPaddleRelease();\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * 左パドル押下処理\n\t */\n\tprivate handleLeftPaddlePress(): void {\n\t\tif (this.leftPressed) return;\n\t\tthis.leftPressed = true;\n\t\tthis.trainer.leftPaddlePress();\n\n\t\tconst leftPaddle = document.getElementById('left-paddle');\n\t\tif (leftPaddle) leftPaddle.classList.add('pressed');\n\t}\n\n\t/**\n\t * 左パドル解放処理\n\t */\n\tprivate handleLeftPaddleRelease(): void {\n\t\tif (!this.leftPressed) return;\n\t\tthis.leftPressed = false;\n\t\tthis.trainer.leftPaddleRelease();\n\n\t\tconst leftPaddle = document.getElementById('left-paddle');\n\t\tif (leftPaddle) leftPaddle.classList.remove('pressed');\n\t}\n\n\t/**\n\t * 右パドル押下処理\n\t */\n\tprivate handleRightPaddlePress(): void {\n\t\tif (this.rightPressed) return;\n\t\tthis.rightPressed = true;\n\t\tthis.trainer.rightPaddlePress();\n\n\t\tconst rightPaddle = document.getElementById('right-paddle');\n\t\tif (rightPaddle) rightPaddle.classList.add('pressed');\n\t}\n\n\t/**\n\t * 右パドル解放処理\n\t */\n\tprivate handleRightPaddleRelease(): void {\n\t\tif (!this.rightPressed) return;\n\t\tthis.rightPressed = false;\n\t\tthis.trainer.rightPaddleRelease();\n\n\t\tconst rightPaddle = document.getElementById('right-paddle');\n\t\tif (rightPaddle) rightPaddle.classList.remove('pressed');\n\t}\n\n\t/**\n\t * パドルラベルを更新する\n\t */\n\tprivate updatePaddleLabels(): void {\n\t\tconst leftPaddle = document.getElementById('left-paddle');\n\t\tconst rightPaddle = document.getElementById('right-paddle');\n\n\t\tif (this.paddleLayout === 'normal') {\n\t\t\tif (leftPaddle) {\n\t\t\t\tleftPaddle.className = 'paddle-button dit';\n\t\t\t\tleftPaddle.innerHTML = `\n\t\t\t\t\tDIT\n\t\t\t\t\t<span class=\"paddle-label\">(短点)</span>\n\t\t\t\t\t<span class=\"paddle-key\">J キー</span>\n\t\t\t\t`;\n\t\t\t}\n\t\t\tif (rightPaddle) {\n\t\t\t\trightPaddle.className = 'paddle-button dah';\n\t\t\t\trightPaddle.innerHTML = `\n\t\t\t\t\tDAH\n\t\t\t\t\t<span class=\"paddle-label\">(長点)</span>\n\t\t\t\t\t<span class=\"paddle-key\">K キー</span>\n\t\t\t\t`;\n\t\t\t}\n\t\t} else {\n\t\t\tif (leftPaddle) {\n\t\t\t\tleftPaddle.className = 'paddle-button dah';\n\t\t\t\tleftPaddle.innerHTML = `\n\t\t\t\t\tDAH\n\t\t\t\t\t<span class=\"paddle-label\">(長点)</span>\n\t\t\t\t\t<span class=\"paddle-key\">J キー</span>\n\t\t\t\t`;\n\t\t\t}\n\t\t\tif (rightPaddle) {\n\t\t\t\trightPaddle.className = 'paddle-button dit';\n\t\t\t\trightPaddle.innerHTML = `\n\t\t\t\t\tDIT\n\t\t\t\t\t<span class=\"paddle-label\">(短点)</span>\n\t\t\t\t\t<span class=\"paddle-key\">K キー</span>\n\t\t\t\t`;\n\t\t\t}\n\t\t}\n\n\t\t//! イベントリスナーを再設定。\n\t\tthis.attachEventListeners();\n\t}\n\n\t/**\n\t * 定期更新を開始する\n\t */\n\tprivate startUpdate(): void {\n\t\t//! 100msごとに画面を更新。\n\t\tthis.updateIntervalId = window.setInterval(() => {\n\t\t\tthis.updateDisplay();\n\t\t}, 100);\n\t}\n\n\t/**\n\t * 表示を更新する\n\t */\n\tprivate updateDisplay(): void {\n\t\tconst morseBuffer = document.getElementById('morse-buffer');\n\t\tconst decodedText = document.getElementById('decoded-text');\n\t\tconst charCount = document.getElementById('char-count');\n\n\t\tif (morseBuffer) {\n\t\t\tconst buffer = this.trainer.getBuffer();\n\t\t\tconst sequence = this.trainer.getSequence();\n\t\t\tconst fullDisplay = sequence ? `${buffer} ${sequence}` : buffer;\n\t\t\tmorseBuffer.textContent = fullDisplay || '（ここにモールス符号が表示されます）';\n\t\t}\n\n\t\tif (decodedText) {\n\t\t\tconst text = this.trainer.getDecoded();\n\t\t\tdecodedText.textContent = text || '（ここにデコードされた文字が表示されます）';\n\t\t}\n\n\t\tif (charCount) {\n\t\t\tconst text = this.trainer.getDecoded();\n\t\t\tcharCount.textContent = text.length.toString();\n\t\t}\n\n\t\t//! スペーシング評価統計を更新。\n\t\tconst stats = this.trainer.getSpacingStatistics();\n\t\tconst spacingStats = this.trainer.getStatisticsBySpacingType();\n\n\t\tconst avgAccuracyEl = document.getElementById('timing-avg-accuracy');\n\t\tconst avgErrorEl = document.getElementById('timing-avg-error');\n\t\tconst countEl = document.getElementById('timing-count');\n\n\t\tif (avgAccuracyEl) {\n\t\t\tavgAccuracyEl.textContent = stats.count > 0\n\t\t\t\t? `${stats.averageAccuracy.toFixed(1)} ± ${stats.standardDeviation.toFixed(1)}%`\n\t\t\t\t: '--%';\n\t\t}\n\n\t\tif (avgErrorEl) {\n\t\t\tavgErrorEl.textContent = stats.count > 0\n\t\t\t\t? `${Math.round(stats.averageAbsoluteError)}ms`\n\t\t\t\t: '--ms';\n\t\t}\n\n\t\tif (countEl) {\n\t\t\tcountEl.textContent = stats.count.toString();\n\t\t}\n\n\t\t//! 文字間スペース統計。\n\t\tconst charExpectedEl = document.getElementById('timing-char-expected');\n\t\tconst charAccuracyEl = document.getElementById('timing-char-accuracy');\n\t\tconst charErrorEl = document.getElementById('timing-char-error');\n\t\tconst charCountEl = document.getElementById('timing-char-count');\n\n\t\tif (charExpectedEl) {\n\t\t\tcharExpectedEl.textContent = `${Math.round(this.timings.charGap)}ms`;\n\t\t}\n\n\t\tif (charAccuracyEl) {\n\t\t\tcharAccuracyEl.textContent = spacingStats.character.count > 0\n\t\t\t\t? `${spacingStats.character.averageAccuracy.toFixed(1)} ± ${spacingStats.character.standardDeviation.toFixed(1)}%`\n\t\t\t\t: '--%';\n\t\t}\n\n\t\tif (charErrorEl) {\n\t\t\tcharErrorEl.textContent = spacingStats.character.count > 0\n\t\t\t\t? `${Math.round(spacingStats.character.averageAbsoluteError)}ms`\n\t\t\t\t: '--ms';\n\t\t}\n\n\t\tif (charCountEl) {\n\t\t\tcharCountEl.textContent = spacingStats.character.count.toString();\n\t\t}\n\n\t\t//! 単語間スペース統計。\n\t\tconst wordExpectedEl = document.getElementById('timing-word-expected');\n\t\tconst wordAccuracyEl = document.getElementById('timing-word-accuracy');\n\t\tconst wordErrorEl = document.getElementById('timing-word-error');\n\t\tconst wordCountEl = document.getElementById('timing-word-count');\n\n\t\tif (wordExpectedEl) {\n\t\t\twordExpectedEl.textContent = `${Math.round(this.timings.wordGap)}ms`;\n\t\t}\n\n\t\tif (wordAccuracyEl) {\n\t\t\twordAccuracyEl.textContent = spacingStats.word.count > 0\n\t\t\t\t? `${spacingStats.word.averageAccuracy.toFixed(1)} ± ${spacingStats.word.standardDeviation.toFixed(1)}%`\n\t\t\t\t: '--%';\n\t\t}\n\n\t\tif (wordErrorEl) {\n\t\t\twordErrorEl.textContent = spacingStats.word.count > 0\n\t\t\t\t? `${Math.round(spacingStats.word.averageAbsoluteError)}ms`\n\t\t\t\t: '--ms';\n\t\t}\n\n\t\tif (wordCountEl) {\n\t\t\twordCountEl.textContent = spacingStats.word.count.toString();\n\t\t}\n\n\t\t//! タイミング図を更新。\n\t\tthis.updateTimingDiagram();\n\t}\n\n\t/**\n\t * タイミング図を更新する\n\t */\n\tprivate updateTimingDiagram(): void {\n\t\tconst wordData = this.trainer.getLastWordTimingData();\n\t\tconst container = document.getElementById('timing-diagram-content');\n\n\t\tif (!container) return;\n\n\t\tif (!wordData) {\n\t\t\tcontainer.innerHTML = '（文字が確定すると表示されます）';\n\t\t\treturn;\n\t\t}\n\n\t\t//! タイミング図HTMLを生成。\n\t\tconst html = this.generateTimingDiagramHTML(wordData);\n\t\tcontainer.innerHTML = html;\n\t}\n\n\t/**\n\t * タイミング図のHTMLを生成する\n\t */\n\tprivate generateTimingDiagramHTML(wordData: WordTimingData): string {\n\t\t//! タイミングチャート（PlantUML風）を生成。\n\t\tconst timingChart = this.generateTimingChart(wordData);\n\n\t\treturn `\n\t\t\t<div class=\"timing-diagram-header\">\n\t\t\t\t<span class=\"timing-diagram-char\">${wordData.decodedChar}</span>\n\t\t\t\t<span class=\"timing-diagram-morse\">${wordData.morseCode}</span>\n\t\t\t</div>\n\t\t\t${timingChart}\n\t\t`;\n\t}\n\n\t/**\n\t * タイミングチャート（PlantUML風）を生成する\n\t */\n\tprivate generateTimingChart(wordData: WordTimingData): string {\n\t\tif (wordData.paddleInputs.length === 0) {\n\t\t\treturn '<div class=\"timing-chart-empty\">（パドル入力データなし）</div>';\n\t\t}\n\n\t\t//! パドル入力イベントを時刻順にソート。\n\t\tconst sortedPaddleInputs = [...wordData.paddleInputs].sort((a, b) => a.timestamp - b.timestamp);\n\n\t\t//! 時間範囲を決定（最初のイベントから最後のイベントまで）。\n\t\tconst allTimestamps = [\n\t\t\t...sortedPaddleInputs.map(e => e.timestamp),\n\t\t\t...wordData.elements.map(e => e.startTime),\n\t\t\t...wordData.elements.map(e => e.endTime),\n\t\t\t...wordData.squeezeIntervals.flatMap(s => [s.startTime, s.endTime])\n\t\t];\n\t\tconst startTime = Math.min(...allTimestamps);\n\t\tconst endTime = Math.max(...allTimestamps);\n\t\tconst totalTime = endTime - startTime;\n\n\t\t//! 3本の信号ラインを生成。\n\t\tconst ditInputLine = this.generatePaddleSignalLine('left', wordData, startTime, totalTime);\n\t\tconst dahInputLine = this.generatePaddleSignalLine('right', wordData, startTime, totalTime);\n\t\tconst outputLine = this.generateOutputSignalLine(wordData, startTime, totalTime);\n\n\t\t//! スクイーズ区間のハイライトを生成。\n\t\tconst squeezeHighlights = wordData.squeezeIntervals.map(interval => {\n\t\t\tconst offsetPercent = ((interval.startTime - startTime) / totalTime) * 100;\n\t\t\tconst widthPercent = ((interval.endTime - interval.startTime) / totalTime) * 100;\n\t\t\treturn `<div class=\"squeeze-highlight\" style=\"left: ${offsetPercent}%; width: ${widthPercent}%\"></div>`;\n\t\t}).join('');\n\n\t\t//! パドル入力がない期間（両方のパドルが解放されている期間）を抽出。\n\t\tconst paddleGaps: { startTime: number; endTime: number }[] = [];\n\t\tlet leftDown = false;\n\t\tlet rightDown = false;\n\t\tlet gapStartTime: number | null = null;\n\n\t\tfor (const event of sortedPaddleInputs) {\n\t\t\tconst prevBothReleased = !leftDown && !rightDown;\n\n\t\t\tif (event.paddle === 'left') {\n\t\t\t\tleftDown = (event.state === 'press');\n\t\t\t} else {\n\t\t\t\trightDown = (event.state === 'press');\n\t\t\t}\n\n\t\t\tconst currentBothReleased = !leftDown && !rightDown;\n\n\t\t\tif (prevBothReleased && !currentBothReleased) {\n\t\t\t\t//! ギャップ終了（どちらかのパドルが押された）。\n\t\t\t\tif (gapStartTime !== null) {\n\t\t\t\t\tpaddleGaps.push({\n\t\t\t\t\t\tstartTime: gapStartTime,\n\t\t\t\t\t\tendTime: event.timestamp\n\t\t\t\t\t});\n\t\t\t\t\tgapStartTime = null;\n\t\t\t\t}\n\t\t\t} else if (!prevBothReleased && currentBothReleased) {\n\t\t\t\t//! ギャップ開始（両方のパドルが解放された）。\n\t\t\t\tgapStartTime = event.timestamp;\n\t\t\t}\n\t\t}\n\n\t\t//! ギャップのハイライトを生成。\n\t\tconst gapHighlights = paddleGaps.map(gap => {\n\t\t\tconst offsetPercent = ((gap.startTime - startTime) / totalTime) * 100;\n\t\t\tconst widthPercent = ((gap.endTime - gap.startTime) / totalTime) * 100;\n\t\t\treturn `<div class=\"gap-highlight\" style=\"left: ${offsetPercent}%; width: ${widthPercent}%\"></div>`;\n\t\t}).join('');\n\n\t\t//! 時間軸を生成。\n\t\tconst timeAxis = this.generateTimeAxis(totalTime);\n\n\t\t//! デバッグ情報を生成。\n\t\tconst debugInfo = this.generateDebugInfo(wordData, startTime, paddleGaps);\n\n\t\treturn `\n\t\t\t<div class=\"timing-chart-section\">\n\t\t\t\t<h4>タイミングチャート</h4>\n\t\t\t\t<div class=\"timing-chart-container\">\n\t\t\t\t\t<div class=\"timing-chart-signals\">\n\t\t\t\t\t\t<div class=\"squeeze-highlights-layer\">\n\t\t\t\t\t\t\t${squeezeHighlights}\n\t\t\t\t\t\t\t${gapHighlights}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t${ditInputLine}\n\t\t\t\t\t\t${dahInputLine}\n\t\t\t\t\t\t${outputLine}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"timing-chart-axis\">${timeAxis}</div>\n\t\t\t\t</div>\n\t\t\t\t${debugInfo}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\t/**\n\t * パドル信号ラインを生成する\n\t */\n\tprivate generatePaddleSignalLine(\n\t\tpaddle: 'left' | 'right',\n\t\twordData: WordTimingData,\n\t\tstartTime: number,\n\t\ttotalTime: number\n\t): string {\n\t\tconst label = paddle === 'left' ? 'Dit入力' : 'Dash入力';\n\t\t//! 該当パドルのイベントを抽出して時刻順にソート。\n\t\tconst events = wordData.paddleInputs\n\t\t\t.filter(e => e.paddle === paddle)\n\t\t\t.sort((a, b) => a.timestamp - b.timestamp);\n\n\t\t//! 信号の状態変化を時系列で追跡。\n\t\tlet isHigh = false;\n\t\tconst segments: { start: number; end: number; high: boolean }[] = [];\n\t\tlet lastTime = startTime;\n\n\t\tfor (const event of events) {\n\t\t\tif (event.timestamp > lastTime) {\n\t\t\t\tsegments.push({\n\t\t\t\t\tstart: lastTime,\n\t\t\t\t\tend: event.timestamp,\n\t\t\t\t\thigh: isHigh,\n\t\t\t\t});\n\t\t\t}\n\t\t\tisHigh = (event.state === 'press');\n\t\t\tlastTime = event.timestamp;\n\t\t}\n\n\t\t// 最後のセグメント\n\t\tsegments.push({\n\t\t\tstart: lastTime,\n\t\t\tend: startTime + totalTime,\n\t\t\thigh: isHigh,\n\t\t});\n\n\t\t//! セグメントをHTMLに変換。\n\t\tconst segmentsHTML = segments.map(seg => {\n\t\t\tconst offsetPercent = ((seg.start - startTime) / totalTime) * 100;\n\t\t\tconst widthPercent = ((seg.end - seg.start) / totalTime) * 100;\n\t\t\tconst heightClass = seg.high ? 'signal-high' : 'signal-low';\n\t\t\treturn `<div class=\"signal-segment ${heightClass}\" style=\"left: ${offsetPercent}%; width: ${widthPercent}%\"></div>`;\n\t\t}).join('');\n\n\t\treturn `\n\t\t\t<div class=\"timing-chart-signal\">\n\t\t\t\t<div class=\"signal-label\">${label}</div>\n\t\t\t\t<div class=\"signal-timeline\">${segmentsHTML}</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\t/**\n\t * 出力信号ラインを生成する\n\t */\n\tprivate generateOutputSignalLine(\n\t\twordData: WordTimingData,\n\t\tstartTime: number,\n\t\ttotalTime: number\n\t): string {\n\t\t//! 要素の送信期間をセグメントとして生成（時刻順にソート）。\n\t\tconst segments: { start: number; end: number; element: '.' | '-' }[] = [];\n\n\t\tfor (const element of wordData.elements) {\n\t\t\tsegments.push({\n\t\t\t\tstart: element.startTime,\n\t\t\t\tend: element.endTime,\n\t\t\t\telement: element.element,\n\t\t\t});\n\t\t}\n\n\t\t//! 開始時刻順にソート。\n\t\tsegments.sort((a, b) => a.start - b.start);\n\n\t\t//! セグメントをHTMLに変換。\n\t\tlet lastEnd = startTime;\n\t\tconst segmentsHTML: string[] = [];\n\n\t\tfor (const seg of segments) {\n\t\t\t// ギャップ（Low）\n\t\t\tif (seg.start > lastEnd) {\n\t\t\t\tconst offsetPercent = ((lastEnd - startTime) / totalTime) * 100;\n\t\t\t\tconst widthPercent = ((seg.start - lastEnd) / totalTime) * 100;\n\t\t\t\tsegmentsHTML.push(\n\t\t\t\t\t`<div class=\"signal-segment signal-low\" style=\"left: ${offsetPercent}%; width: ${widthPercent}%\"></div>`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// 要素（High）\n\t\t\tconst offsetPercent = ((seg.start - startTime) / totalTime) * 100;\n\t\t\tconst widthPercent = ((seg.end - seg.start) / totalTime) * 100;\n\t\t\tconst elementClass = seg.element === '.' ? 'output-dit' : 'output-dah';\n\t\t\tsegmentsHTML.push(\n\t\t\t\t`<div class=\"signal-segment signal-high ${elementClass}\" style=\"left: ${offsetPercent}%; width: ${widthPercent}%\">\n\t\t\t\t\t<span class=\"element-label\">${seg.element}</span>\n\t\t\t\t</div>`\n\t\t\t);\n\n\t\t\tlastEnd = seg.end;\n\t\t}\n\n\t\t// 最後のギャップ\n\t\tif (lastEnd < startTime + totalTime) {\n\t\t\tconst offsetPercent = ((lastEnd - startTime) / totalTime) * 100;\n\t\t\tconst widthPercent = ((startTime + totalTime - lastEnd) / totalTime) * 100;\n\t\t\tsegmentsHTML.push(\n\t\t\t\t`<div class=\"signal-segment signal-low\" style=\"left: ${offsetPercent}%; width: ${widthPercent}%\"></div>`\n\t\t\t);\n\t\t}\n\n\t\treturn `\n\t\t\t<div class=\"timing-chart-signal\">\n\t\t\t\t<div class=\"signal-label\">出力</div>\n\t\t\t\t<div class=\"signal-timeline\">${segmentsHTML.join('')}</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\t/**\n\t * 時間軸を生成する\n\t */\n\tprivate generateTimeAxis(totalTime: number): string {\n\t\tconst step = totalTime / 4;\n\t\treturn `\n\t\t\t<span class=\"axis-tick\" style=\"left: 0%\">0ms</span>\n\t\t\t<span class=\"axis-tick\" style=\"left: 25%\">${Math.round(step)}ms</span>\n\t\t\t<span class=\"axis-tick\" style=\"left: 50%\">${Math.round(step * 2)}ms</span>\n\t\t\t<span class=\"axis-tick\" style=\"left: 75%\">${Math.round(step * 3)}ms</span>\n\t\t\t<span class=\"axis-tick\" style=\"left: 100%\">${Math.round(totalTime)}ms</span>\n\t\t`;\n\t}\n\n\t/**\n\t * デバッグ情報を生成する\n\t */\n\tprivate generateDebugInfo(\n\t\twordData: WordTimingData,\n\t\tstartTime: number,\n\t\tpaddleGaps: { startTime: number; endTime: number }[]\n\t): string {\n\t\t//! パドル入力イベントをソートして整理。\n\t\tconst sortedInputs = [...wordData.paddleInputs].sort((a, b) => a.timestamp - b.timestamp);\n\n\t\t//! イベントリストを生成。\n\t\tconst eventLines = sortedInputs.map(event => {\n\t\t\tconst relativeTime = event.timestamp - startTime;\n\t\t\tconst paddleLabel = event.paddle === 'left' ? 'Dit' : 'Dash';\n\t\t\tconst stateLabel = event.state === 'press' ? '押下' : '解放';\n\t\t\treturn `${relativeTime.toFixed(0)}ms: ${paddleLabel}${stateLabel}`;\n\t\t});\n\n\t\t//! スクイーズ区間リストを生成。\n\t\tconst squeezeLines = wordData.squeezeIntervals.map(interval => {\n\t\t\tconst startRelative = interval.startTime - startTime;\n\t\t\tconst endRelative = interval.endTime - startTime;\n\t\t\tconst duration = interval.endTime - interval.startTime;\n\t\t\treturn `Squeeze ON: ${startRelative.toFixed(0)}ms, OFF: ${endRelative.toFixed(0)}ms (${duration.toFixed(0)}ms)`;\n\t\t});\n\n\t\t//! 無入力期間（ギャップ）リストを生成。\n\t\tconst gapLines = paddleGaps.map(gap => {\n\t\t\tconst startRelative = gap.startTime - startTime;\n\t\t\tconst endRelative = gap.endTime - startTime;\n\t\t\tconst duration = gap.endTime - gap.startTime;\n\t\t\treturn `Gap ON: ${startRelative.toFixed(0)}ms, OFF: ${endRelative.toFixed(0)}ms (${duration.toFixed(0)}ms)`;\n\t\t});\n\n\t\treturn `\n\t\t\t<div class=\"timing-debug-info\">\n\t\t\t\t<div class=\"debug-section\">\n\t\t\t\t\t<h5>パドル入力イベント（相対時刻）</h5>\n\t\t\t\t\t<div class=\"debug-events\">\n\t\t\t\t\t\t${eventLines.length > 0 ? eventLines.join('<br>') : '（イベントなし）'}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"debug-section\">\n\t\t\t\t\t<h5>スクイーズ区間</h5>\n\t\t\t\t\t<div class=\"debug-squeezes\">\n\t\t\t\t\t\t${squeezeLines.length > 0 ? squeezeLines.join('<br>') : '（スクイーズなし）'}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"debug-section\">\n\t\t\t\t\t<h5>無入力期間</h5>\n\t\t\t\t\t<div class=\"debug-gaps\">\n\t\t\t\t\t\t${gapLines.length > 0 ? gapLines.join('<br>') : '（ギャップなし）'}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\t/**\n\t * 設定モーダルを開く\n\t */\n\tprivate openSettingsModal(): void {\n\t\t//! 現在の設定値を取得。\n\t\tconst currentValues: SettingValues = {\n\t\t\tvolume: Math.round(this.audio.getVolume() * 100),\n\t\t\tfrequency: this.audio.getFrequency(),\n\t\t\twpm: this.currentWPM,\n\t\t\tiambicMode: this.iambicMode,\n\t\t\tpaddleLayout: this.paddleLayout,\n\t\t\tleftKeyCode: this.leftKeyCode,\n\t\t\trightKeyCode: this.rightKeyCode\n\t\t};\n\n\t\t//! 設定変更前の値を保存（キャンセル時の復元用）。\n\t\tconst savedSettings = {\n\t\t\tvolume: this.audio.getVolume(),\n\t\t\tfrequency: this.audio.getFrequency(),\n\t\t\twpm: this.currentWPM,\n\t\t\tiambicMode: this.iambicMode,\n\t\t\tpaddleLayout: this.paddleLayout,\n\t\t\tleftKeyCode: this.leftKeyCode,\n\t\t\trightKeyCode: this.rightKeyCode\n\t\t};\n\n\t\t//! SettingsModalを作成。\n\t\tconst modal = new SettingsModal(\n\t\t\t'horizontal-key-settings-modal',\n\t\t\tALL_SETTING_ITEMS,\n\t\t\tcurrentValues,\n\t\t\t{\n\t\t\t\tonSave: (values: SettingValues) => {\n\t\t\t\t\t//! 設定を保存。\n\t\t\t\t\tthis.audio.setVolume((values.volume as number) / 100);\n\t\t\t\t\tthis.audio.setFrequency(values.frequency as number);\n\t\t\t\t\tthis.audio.setWPM(values.wpm as number);\n\t\t\t\t\tthis.currentWPM = values.wpm as number;\n\t\t\t\t\tthis.iambicMode = values.iambicMode as IambicMode;\n\t\t\t\t\tthis.paddleLayout = values.paddleLayout as PaddleLayout;\n\t\t\t\t\tthis.leftKeyCode = values.leftKeyCode as string;\n\t\t\t\t\tthis.rightKeyCode = values.rightKeyCode as string;\n\n\t\t\t\t\t//! localStorageに保存。\n\t\t\t\t\tlocalStorage.setItem('horizontalKeyWPM', this.currentWPM.toString());\n\t\t\t\t\tlocalStorage.setItem('horizontalKeyIambicMode', this.iambicMode);\n\t\t\t\t\tlocalStorage.setItem('horizontalKeyPaddleLayout', this.paddleLayout);\n\t\t\t\t\tlocalStorage.setItem('horizontalKeyLeftCode', this.leftKeyCode);\n\t\t\t\t\tlocalStorage.setItem('horizontalKeyRightCode', this.rightKeyCode);\n\n\t\t\t\t\t//! 現在のWPM表示を更新。\n\t\t\t\t\tconst currentWpmDisplay = document.getElementById('current-wpm');\n\t\t\t\t\tif (currentWpmDisplay) currentWpmDisplay.textContent = this.currentWPM.toString();\n\n\t\t\t\t\t//! 現在のIambicモード表示を更新。\n\t\t\t\t\tconst currentIambicModeDisplay = document.getElementById('current-iambic-mode');\n\t\t\t\t\tif (currentIambicModeDisplay) currentIambicModeDisplay.textContent = this.iambicMode;\n\n\t\t\t\t\t//! パドルレイアウトに応じてラベルを更新。\n\t\t\t\t\tthis.updatePaddleLabels();\n\n\t\t\t\t\t//! トレーナーを再初期化。\n\t\t\t\t\tthis.initializeTrainer();\n\t\t\t\t},\n\t\t\t\tonCancel: () => {\n\t\t\t\t\t//! 設定を元に戻す。\n\t\t\t\t\tthis.audio.setVolume(savedSettings.volume);\n\t\t\t\t\tthis.audio.setFrequency(savedSettings.frequency);\n\t\t\t\t\tthis.audio.setWPM(savedSettings.wpm);\n\t\t\t\t\tthis.currentWPM = savedSettings.wpm;\n\t\t\t\t\tthis.iambicMode = savedSettings.iambicMode;\n\t\t\t\t\tthis.paddleLayout = savedSettings.paddleLayout;\n\t\t\t\t\tthis.leftKeyCode = savedSettings.leftKeyCode;\n\t\t\t\t\tthis.rightKeyCode = savedSettings.rightKeyCode;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t//! モーダルを表示。\n\t\tmodal.show('horizontal-key');\n\t}\n\n\t/**\n\t * ビューを破棄する\n\t */\n\tdestroy(): void {\n\t\t//! イベントリスナーを削除。\n\t\tif (this.keyPressHandler) {\n\t\t\twindow.removeEventListener('keydown', this.keyPressHandler);\n\t\t\tthis.keyPressHandler = null;\n\t\t}\n\t\tif (this.keyReleaseHandler) {\n\t\t\twindow.removeEventListener('keyup', this.keyReleaseHandler);\n\t\t\tthis.keyReleaseHandler = null;\n\t\t}\n\n\t\t//! 定期更新を停止。\n\t\tif (this.updateIntervalId !== null) {\n\t\t\tclearInterval(this.updateIntervalId);\n\t\t\tthis.updateIntervalId = null;\n\t\t}\n\n\t\t//! トレーナーをクリア。\n\t\tthis.trainer.clear();\n\t}\n}\n","/**\n * フラッシュカードTSVローダー\n */\n\nimport type { FlashcardEntry } from 'morse-engine';\n\n/**\n * TSVファイルからフラッシュカードデータをロードする\n * @param url - TSVファイルのURL\n * @returns FlashcardEntryの配列\n */\nexport async function loadFlashcardData(url: string): Promise<FlashcardEntry[]> {\n\t//! TSVファイルを取得。\n\tconst response = await fetch(url);\n\tif (!response.ok) {\n\t\tthrow new Error(`Failed to load flashcard data: ${response.statusText}`);\n\t}\n\n\tconst text = await response.text();\n\treturn parseTSV(text);\n}\n\n/**\n * TSVテキストをパースしてFlashcardEntry配列に変換する\n * @param text - TSVテキスト\n * @returns FlashcardEntryの配列\n */\nfunction parseTSV(text: string): FlashcardEntry[] {\n\t//! 行に分割。\n\tconst lines = text.split('\\n').filter(line => line.trim());\n\tif (lines.length === 0) return [];\n\n\t//! 先頭行はヘッダーなのでスキップ。\n\tconst dataLines = lines.slice(1);\n\n\treturn dataLines.map((line, index) => {\n\t\t//! タブで分割。\n\t\tconst columns = line.split('\\t');\n\n\t\t//! 最低限6列（タグ、頻度、略語、英文、和訳、説明）必要。\n\t\tif (columns.length < 6) {\n\t\t\t//! 開発環境でのみ警告を出力。\n\t\t\tif (import.meta.env.DEV) {\n\t\t\t\tconsole.warn(`Line ${index + 2} has insufficient columns, skipping`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tconst entry: FlashcardEntry = {\n\t\t\ttags: columns[0].trim(),\n\t\t\tfrequency: parseInt(columns[1].trim(), 10) || 1,\n\t\t\tabbreviation: columns[2].trim(),\n\t\t\tenglish: columns[3].trim(),\n\t\t\tjapanese: columns[4].trim(),\n\t\t\tdescription: columns[5]?.trim(),\n\t\t\texample: columns[6]?.trim()\n\t\t};\n\n\t\treturn entry;\n\t}).filter((entry): entry is FlashcardEntry => entry !== null);\n}\n","/**\n * フラッシュカードビュー\n * CW略語・Q符号学習\n */\n\nimport type { View } from '../../router';\nimport {\n\tFlashcardTrainer,\n\tFlashcardState,\n\tAudioGenerator,\n\tMorseCodec,\n\ttype FlashcardEntry,\n\ttype ExamQuestion,\n\ttype ExamResult,\n\ttype QuestionType,\n\ttype LearnQuestionType,\n\ttype Progress,\n\ttype SortColumn,\n\ttype SortDirection,\n\ttype DisplayMode\n} from 'morse-engine';\nimport { loadFlashcardData } from '../../utils/flashcard-loader';\nimport { SettingsModal, ALL_SETTING_ITEMS, type SettingValues } from 'morse-engine';\n\n/**\n * 画面状態（ローディングと結果表示用）\n */\ntype ViewState = 'loading' | 'browse' | 'learn' | 'exam' | 'exam-result';\n\n/**\n * フラッシュカードビュークラス\n */\nexport class FlashcardView implements View {\n\tprivate allEntries: FlashcardEntry[] = [];\n\tprivate filteredEntries: FlashcardEntry[] = [];\n\tprivate currentState: ViewState = 'loading';\n\n\t// フィルター関連\n\tprivate selectedTags: Set<string> = new Set();\n\tprivate selectedFrequencies: Set<number> = new Set([5]);\n\tprivate searchQuery = '';\n\n\t// 一覧表示関連\n\tprivate displayMode: DisplayMode = 'card';\n\tprivate sortColumn: SortColumn = 'abbreviation';\n\tprivate sortDirection: SortDirection = 'asc';\n\n\t// 学習モード関連\n\tprivate learnQuestionType: LearnQuestionType = 'abbr-to-meaning';\n\tprivate learnCards: FlashcardEntry[] = [];\n\tprivate currentLearnIndex = 0;\n\tprivate isFlipped = false;\n\tprivate reviewMode = false;\n\tprivate progress: Progress = {\n\t\tknown: new Set(),\n\t\tunknown: new Set()\n\t};\n\n\t// 試験関連\n\tprivate questionType: QuestionType = 'abbr-to-meaning';\n\tprivate questionCount: number | 'all' = 10;\n\tprivate questions: ExamQuestion[] = [];\n\tprivate currentQuestionIndex = 0;\n\tprivate results: ExamResult[] = [];\n\n\t// 音声関連\n\tprivate audio: AudioGenerator;\n\tprivate currentlyPlaying: string | null = null;\n\n\tconstructor() {\n\t\tthis.audio = new AudioGenerator({\n\t\t\tfrequency: 700,\n\t\t\tvolume: 0.5,\n\t\t\twpm: 20\n\t\t});\n\t\t//! ライブラリから状態を読み込む。\n\t\tthis.progress = FlashcardState.loadProgress();\n\t\tconst filters = FlashcardState.loadFilters();\n\t\tthis.selectedTags = filters.selectedTags;\n\t\tthis.selectedFrequencies = filters.selectedFrequencies;\n\t\tthis.searchQuery = filters.searchQuery;\n\n\t\tconst viewState = FlashcardState.loadViewState();\n\t\tthis.displayMode = viewState.displayMode;\n\t\tthis.sortColumn = viewState.sortColumn;\n\t\tthis.sortDirection = viewState.sortDirection;\n\t\tthis.learnQuestionType = viewState.learnQuestionType;\n\t\tthis.questionType = viewState.examQuestionType as QuestionType;\n\t}\n\n\t/**\n\t * 進捗データを保存する\n\t */\n\tprivate saveProgress(): void {\n\t\tFlashcardState.saveProgress(this.progress);\n\t}\n\n\t/**\n\t * 進捗データをクリアする\n\t */\n\tprivate clearProgress(): void {\n\t\tthis.progress = { known: new Set(), unknown: new Set() };\n\t\tFlashcardState.clearProgress();\n\t}\n\n\t/**\n\t * フィルター状態を保存する\n\t */\n\tprivate saveFilters(): void {\n\t\tFlashcardState.saveFilters({\n\t\t\tselectedTags: this.selectedTags,\n\t\t\tselectedFrequencies: this.selectedFrequencies,\n\t\t\tsearchQuery: this.searchQuery\n\t\t});\n\t}\n\n\tasync render(): Promise<void> {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tif (this.currentState === 'loading') {\n\t\t\t//! ローディング画面を表示。\n\t\t\tapp.innerHTML = `\n\t\t\t\t<div class=\"container\">\n\t\t\t\t\t<header class=\"header\">\n\t\t\t\t\t\t<h1>CW略語・Q符号学習</h1>\n\t\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t</header>\n\t\t\t\t\t<div class=\"loading-container\">\n\t\t\t\t\t\t<p>フラッシュカードデータを読み込み中...</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tconst backBtn = document.querySelector('.back-btn');\n\t\t\tbackBtn?.addEventListener('click', () => {\n\t\t\t\twindow.location.hash = '#menu';\n\t\t\t});\n\n\t\t\t//! データをロード。\n\t\t\ttry {\n\t\t\t\tthis.allEntries = await loadFlashcardData('/flashcard.tsv');\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\t//! データロード完了後、保存されていたviewModeを復元。\n\t\t\t\tconst viewState = FlashcardState.loadViewState();\n\t\t\t\tthis.currentState = viewState.viewMode;\n\t\t\t\tthis.render();\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Failed to load flashcard data:', error);\n\t\t\t\tapp.innerHTML = `\n\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t<header class=\"header\">\n\t\t\t\t\t\t\t<h1>CW略語・Q符号学習</h1>\n\t\t\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<div class=\"error-container\">\n\t\t\t\t\t\t\t<p>データの読み込みに失敗しました。</p>\n\t\t\t\t\t\t\t<p>エラー: ${error}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t`;\n\t\t\t}\n\t\t} else if (this.currentState === 'browse') {\n\t\t\tthis.renderBrowseMode();\n\t\t} else if (this.currentState === 'learn') {\n\t\t\tthis.renderLearnMode();\n\t\t} else if (this.currentState === 'exam') {\n\t\t\tthis.renderExamMode();\n\t\t} else if (this.currentState === 'exam-result') {\n\t\t\tthis.renderExamResultMode();\n\t\t}\n\t}\n\n\t/**\n\t * 共通のフィルターセクションHTMLを生成\n\t */\n\tprivate renderFilterSection(): string {\n\t\tconst allTags = FlashcardTrainer.getAllTags(this.allEntries);\n\n\t\treturn `\n\t\t\t<div class=\"filter-section\">\n\t\t\t\t<h3>フィルター設定</h3>\n\n\t\t\t\t<div class=\"filter-group\">\n\t\t\t\t\t<label>タグで絞り込み</label>\n\t\t\t\t\t<div class=\"tag-filter\" id=\"tag-filter\">\n\t\t\t\t\t\t${allTags.map(tag => `\n\t\t\t\t\t\t\t<label class=\"tag-checkbox\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" value=\"${tag}\" ${this.selectedTags.has(tag) ? 'checked' : ''}>\n\t\t\t\t\t\t\t\t<span>${tag}</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t`).join('')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"filter-group\">\n\t\t\t\t\t<label>使用頻度で絞り込み（1=低頻度、5=高頻度）</label>\n\t\t\t\t\t<div class=\"frequency-filter\" id=\"frequency-filter\">\n\t\t\t\t\t\t${[5, 4, 3, 2, 1].map(freq => `\n\t\t\t\t\t\t\t<label class=\"frequency-checkbox\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" value=\"${freq}\" ${this.selectedFrequencies.has(freq) ? 'checked' : ''}>\n\t\t\t\t\t\t\t\t<span>★${freq}</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t`).join('')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"filter-group\">\n\t\t\t\t\t<label for=\"search-input\">検索（略語・意味・タグ）</label>\n\t\t\t\t\t<input type=\"text\" id=\"search-input\" class=\"search-input\" placeholder=\"例: QTH, location, Q符号\" value=\"${this.searchQuery}\">\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"filter-stats\">\n\t\t\t\t\t<span>該当: <strong id=\"filtered-count\">${this.filteredEntries.length}</strong> 件</span>\n\t\t\t\t\t<span>全体: <strong>${this.allEntries.length}</strong> 件</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\t/**\n\t * 一覧モード（browse）をレンダリング\n\t */\n\tprivate renderBrowseMode(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"settings-icon\" id=\"settingsIcon\">\n\t\t\t\t<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t<h1>CW略語・Q符号学習</h1>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"tabs\">\n\t\t\t\t\t<button class=\"tab-button active\" data-tab=\"browse\">一覧</button>\n\t\t\t\t\t<button class=\"tab-button\" data-tab=\"learn\">学習モード</button>\n\t\t\t\t\t<button class=\"tab-button\" data-tab=\"exam\">試験モード</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"flashcard-container\">\n\t\t\t\t\t${this.renderFilterSection()}\n\n\t\t\t\t\t<div class=\"entries-section\" id=\"entries-section\">\n\t\t\t\t\t\t<!-- ここに一覧が表示される -->\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t\t<h3>使い方</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>タグ、使用頻度、検索で略語を絞り込めます</li>\n\t\t\t\t\t\t\t<li>略語カードをクリックするとモールス信号を再生できます</li>\n\t\t\t\t\t\t\t<li>カード表示とリスト表示を切り替えられます</li>\n\t\t\t\t\t\t\t<li>「学習モード」タブでフラッシュカード学習ができます</li>\n\t\t\t\t\t\t\t<li>「試験モード」タブで理解度テストができます</li>\n\t\t\t\t\t\t\t<li>画面右上の⚙アイコンから音量・周波数・速度を調整できます</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.renderEntries();\n\t\tthis.attachBrowseModeListeners();\n\t}\n\n\t/**\n\t * エントリー一覧を表示\n\t */\n\tprivate renderEntries(): void {\n\t\tconst container = document.getElementById('entries-section');\n\t\tif (!container) return;\n\n\t\tif (this.displayMode === 'card') {\n\t\t\tthis.renderCardView(container);\n\t\t} else {\n\t\t\tthis.renderListView(container);\n\t\t}\n\t}\n\n\t/**\n\t * カード表示\n\t */\n\tprivate renderCardView(container: HTMLElement): void {\n\t\tcontainer.innerHTML = `\n\t\t\t<div class=\"entries-header\">\n\t\t\t\t<h3>略語一覧 (${this.filteredEntries.length}件)</h3>\n\t\t\t\t<button id=\"toggle-display-btn\" class=\"toggle-display-btn\">📋 リスト表示</button>\n\t\t\t</div>\n\t\t\t<div class=\"entries-grid\">\n\t\t\t\t${this.filteredEntries.map(entry => `\n\t\t\t\t\t<div class=\"entry-card ${this.currentlyPlaying === entry.abbreviation ? 'playing' : ''}\" data-abbr=\"${entry.abbreviation}\">\n\t\t\t\t\t\t<div class=\"entry-header\">\n\t\t\t\t\t\t\t<div class=\"entry-abbr\">${this.formatAbbreviation(entry.abbreviation)}</div>\n\t\t\t\t\t\t\t<div class=\"entry-frequency\" title=\"使用頻度: ${entry.frequency}/5\">${'★'.repeat(entry.frequency)}${'☆'.repeat(5 - entry.frequency)}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"entry-english\">${entry.english}</div>\n\t\t\t\t\t\t<div class=\"entry-japanese\">${entry.japanese}</div>\n\t\t\t\t\t\t${entry.description ? `<div class=\"entry-description\">${entry.description}</div>` : ''}\n\t\t\t\t\t\t${entry.example ? `<div class=\"entry-example\">例: ${entry.example}</div>` : ''}\n\t\t\t\t\t\t<div class=\"entry-tags\">${entry.tags}</div>\n\t\t\t\t\t</div>\n\t\t\t\t`).join('')}\n\t\t\t</div>\n\t\t`;\n\n\t\t//! カードクリックでモールス再生。\n\t\tcontainer.querySelectorAll('.entry-card').forEach(card => {\n\t\t\tcard.addEventListener('click', () => {\n\t\t\t\tconst abbr = card.getAttribute('data-abbr');\n\t\t\t\tif (abbr) this.playMorse(abbr);\n\t\t\t});\n\t\t});\n\n\t\t//! 表示モード切り替えボタン。\n\t\tconst toggleBtn = document.getElementById('toggle-display-btn');\n\t\tif (toggleBtn) {\n\t\t\ttoggleBtn.addEventListener('click', () => {\n\t\t\t\tthis.displayMode = 'list';\n\t\t\t\tFlashcardState.saveDisplayMode(this.displayMode);\n\t\t\t\tthis.renderEntries();\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * リスト表示\n\t */\n\tprivate renderListView(container: HTMLElement): void {\n\t\tcontainer.innerHTML = `\n\t\t\t<div class=\"entries-header\">\n\t\t\t\t<h3>略語一覧 (${this.filteredEntries.length}件)</h3>\n\t\t\t\t<button id=\"toggle-display-btn\" class=\"toggle-display-btn\">🃏 カード表示</button>\n\t\t\t</div>\n\t\t\t<div class=\"list-table-container\">\n\t\t\t\t<table class=\"list-table\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th class=\"sortable\" data-column=\"abbreviation\">略語${this.getSortIndicator('abbreviation')}</th>\n\t\t\t\t\t\t\t<th class=\"sortable\" data-column=\"english\">英文${this.getSortIndicator('english')}</th>\n\t\t\t\t\t\t\t<th class=\"sortable\" data-column=\"japanese\">和訳${this.getSortIndicator('japanese')}</th>\n\t\t\t\t\t\t\t<th class=\"sortable\" data-column=\"frequency\">頻度${this.getSortIndicator('frequency')}</th>\n\t\t\t\t\t\t\t<th class=\"sortable\" data-column=\"tags\">タグ${this.getSortIndicator('tags')}</th>\n\t\t\t\t\t\t\t<th>説明</th>\n\t\t\t\t\t\t\t<th>具体例</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t${this.filteredEntries.map(entry => `\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td class=\"list-abbr\">\n\t\t\t\t\t\t\t\t\t<button class=\"abbr-play-btn ${this.currentlyPlaying === entry.abbreviation ? 'playing' : ''}\" data-abbr=\"${entry.abbreviation}\">\n\t\t\t\t\t\t\t\t\t\t${this.formatAbbreviation(entry.abbreviation)}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>${entry.english}</td>\n\t\t\t\t\t\t\t\t<td>${entry.japanese}</td>\n\t\t\t\t\t\t\t\t<td title=\"使用頻度: ${entry.frequency}/5\">${'★'.repeat(entry.frequency)}${'☆'.repeat(5 - entry.frequency)}</td>\n\t\t\t\t\t\t\t\t<td>${entry.tags}</td>\n\t\t\t\t\t\t\t\t<td>${entry.description || ''}</td>\n\t\t\t\t\t\t\t\t<td>${entry.example || ''}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t`).join('')}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t`;\n\n\t\t//! ソートヘッダーのイベントリスナー。\n\t\tconst sortHeaders = container.querySelectorAll('th.sortable');\n\t\tsortHeaders.forEach(header => {\n\t\t\theader.addEventListener('click', () => {\n\t\t\t\tconst column = header.getAttribute('data-column') as SortColumn;\n\t\t\t\tif (column) this.toggleSort(column);\n\t\t\t});\n\t\t});\n\n\t\t//! 略語再生ボタンのイベントリスナー。\n\t\tconst playButtons = container.querySelectorAll('.abbr-play-btn');\n\t\tplayButtons.forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst abbr = btn.getAttribute('data-abbr');\n\t\t\t\tif (abbr) this.playMorse(abbr);\n\t\t\t});\n\t\t});\n\n\t\t//! 表示モード切り替えボタン。\n\t\tconst toggleBtn = document.getElementById('toggle-display-btn');\n\t\tif (toggleBtn) {\n\t\t\ttoggleBtn.addEventListener('click', () => {\n\t\t\t\tthis.displayMode = 'card';\n\t\t\t\tFlashcardState.saveDisplayMode(this.displayMode);\n\t\t\t\tthis.renderEntries();\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * 学習モードをレンダリング\n\t */\n\tprivate renderLearnMode(): void {\n\t\tif (this.learnCards.length === 0) {\n\t\t\t//! セットアップ画面を表示。\n\t\t\tthis.renderLearnSetup();\n\t\t} else {\n\t\t\t//! 学習カードを表示。\n\t\t\tthis.renderLearnCard();\n\t\t}\n\t}\n\n\t/**\n\t * 学習モードセットアップ画面\n\t */\n\tprivate renderLearnSetup(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\t//! カード枚数を計算。\n\t\tlet cardCount = this.filteredEntries.length;\n\t\tif (this.reviewMode) {\n\t\t\tcardCount = this.filteredEntries.filter(e =>\n\t\t\t\tthis.progress.unknown.has(e.abbreviation)\n\t\t\t).length;\n\t\t}\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"settings-icon\" id=\"settingsIcon\">\n\t\t\t\t<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t<h1>CW略語・Q符号学習</h1>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"tabs\">\n\t\t\t\t\t<button class=\"tab-button\" data-tab=\"browse\">一覧</button>\n\t\t\t\t\t<button class=\"tab-button active\" data-tab=\"learn\">学習モード</button>\n\t\t\t\t\t<button class=\"tab-button\" data-tab=\"exam\">試験モード</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"flashcard-container\">\n\t\t\t\t\t${this.renderFilterSection()}\n\n\t\t\t\t\t<div class=\"learn-setup-section\">\n\t\t\t\t\t\t<h3>学習設定</h3>\n\n\t\t\t\t\t\t<div class=\"filter-group\">\n\t\t\t\t\t\t\t<label>モード</label>\n\t\t\t\t\t\t\t<div class=\"mode-buttons\">\n\t\t\t\t\t\t\t\t<button class=\"mode-btn ${this.reviewMode ? 'active' : ''}\" id=\"review-mode-btn\">\n\t\t\t\t\t\t\t\t\t復習モード（わからないカードのみ: ${this.progress.unknown.size}件）\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"filter-group\">\n\t\t\t\t\t\t\t<label>出題形式</label>\n\t\t\t\t\t\t\t<div class=\"question-type-buttons\">\n\t\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.learnQuestionType === 'abbr-to-meaning' ? 'active' : ''}\" data-type=\"abbr-to-meaning\">略語→意味（基本）</button>\n\t\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.learnQuestionType === 'meaning-to-abbr' ? 'active' : ''}\" data-type=\"meaning-to-abbr\">意味→略語（応用）</button>\n\t\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.learnQuestionType === 'morse-to-abbr' ? 'active' : ''}\" data-type=\"morse-to-abbr\">モールス音→略語（実践）</button>\n\t\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.learnQuestionType === 'morse-to-meaning' ? 'active' : ''}\" data-type=\"morse-to-meaning\">モールス音→意味（実践）</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"filter-stats\">\n\t\t\t\t\t\t\t<span>学習可能: <strong>${cardCount}</strong> 枚</span>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"action-area\">\n\t\t\t\t\t\t\t<button class=\"btn btn-large btn-primary\" id=\"start-learn-btn\" ${cardCount === 0 ? 'disabled' : ''}>学習開始</button>\n\t\t\t\t\t\t\t<button class=\"btn btn-large btn-secondary\" id=\"clear-progress-btn\">進捗をリセット</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t\t<h3>使い方</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>フィルターで学習する略語を絞り込みます</li>\n\t\t\t\t\t\t\t<li>出題形式を選択します（略語→意味、意味→略語、モールス音からの解読）</li>\n\t\t\t\t\t\t\t<li>カードをクリックで裏返し、「わかる」「わからない」で進捗を記録</li>\n\t\t\t\t\t\t\t<li>復習モードで「わからない」カードのみを学習できます</li>\n\t\t\t\t\t\t\t<li>学習進捗はブラウザに自動保存されます</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachCommonListeners();\n\t\tthis.attachLearnSetupListeners();\n\t}\n\n\t/**\n\t * 学習セットアップのイベントリスナー\n\t */\n\tprivate attachLearnSetupListeners(): void {\n\t\t//! タグフィルター。\n\t\tconst tagFilter = document.getElementById('tag-filter');\n\t\ttagFilter?.addEventListener('change', (e) => {\n\t\t\tconst target = e.target as HTMLInputElement;\n\t\t\tif (target.type === 'checkbox') {\n\t\t\t\tif (target.checked) {\n\t\t\t\t\tthis.selectedTags.add(target.value);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedTags.delete(target.value);\n\t\t\t\t}\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\tthis.renderLearnSetup();\n\t\t\t}\n\t\t});\n\n\t\t//! 使用頻度フィルター。\n\t\tconst frequencyFilter = document.getElementById('frequency-filter');\n\t\tfrequencyFilter?.addEventListener('change', (e) => {\n\t\t\tconst target = e.target as HTMLInputElement;\n\t\t\tif (target.type === 'checkbox') {\n\t\t\t\tconst freq = parseInt(target.value, 10);\n\t\t\t\tif (target.checked) {\n\t\t\t\t\tthis.selectedFrequencies.add(freq);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedFrequencies.delete(freq);\n\t\t\t\t}\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\tthis.renderLearnSetup();\n\t\t\t}\n\t\t});\n\n\t\t//! 検索。\n\t\tconst searchInput = document.getElementById('learn-search-input') as HTMLInputElement;\n\t\tsearchInput?.addEventListener('input', () => {\n\t\t\tthis.searchQuery = searchInput.value;\n\t\t\tthis.updateFilteredEntries();\n\t\t\tthis.renderLearnSetup();\n\t\t});\n\n\t\t//! 復習モードボタン。\n\t\tconst reviewModeBtn = document.getElementById('review-mode-btn');\n\t\treviewModeBtn?.addEventListener('click', () => {\n\t\t\tthis.reviewMode = !this.reviewMode;\n\t\t\tthis.renderLearnSetup();\n\t\t});\n\n\t\t//! 出題形式ボタン。\n\t\tconst questionTypeBtns = document.querySelectorAll('.question-type-btn');\n\t\tquestionTypeBtns.forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst type = btn.getAttribute('data-type') as LearnQuestionType;\n\t\t\t\tif (type) {\n\t\t\t\t\tthis.learnQuestionType = type;\n\t\t\t\t\tFlashcardState.saveLearnQuestionType(this.learnQuestionType);\n\t\t\t\t\tthis.renderLearnSetup();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! 学習開始ボタン。\n\t\tconst startLearnBtn = document.getElementById('start-learn-btn');\n\t\tstartLearnBtn?.addEventListener('click', () => {\n\t\t\tthis.startLearn();\n\t\t});\n\n\t\t//! 進捗リセットボタン。\n\t\tconst clearProgressBtn = document.getElementById('clear-progress-btn');\n\t\tclearProgressBtn?.addEventListener('click', () => {\n\t\t\tif (confirm('学習進捗をリセットしますか？')) {\n\t\t\t\tthis.clearProgress();\n\t\t\t\tthis.renderLearnSetup();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * 学習を開始\n\t */\n\tprivate startLearn(): void {\n\t\t//! フィルタリング済みのエントリーから学習カードを作成。\n\t\tlet cards = [...this.filteredEntries];\n\n\t\tif (this.reviewMode) {\n\t\t\t//! 復習モード: わからないカードのみ。\n\t\t\tcards = cards.filter(e => this.progress.unknown.has(e.abbreviation));\n\t\t}\n\n\t\tif (cards.length === 0) {\n\t\t\talert('学習可能なカードがありません。');\n\t\t\treturn;\n\t\t}\n\n\t\t//! シャッフル。\n\t\tcards = cards.sort(() => Math.random() - 0.5);\n\n\t\tthis.learnCards = cards;\n\t\tthis.currentLearnIndex = 0;\n\t\tthis.isFlipped = false;\n\t\tthis.renderLearnCard();\n\t}\n\n\t/**\n\t * 学習カードを表示\n\t */\n\tprivate renderLearnCard(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tconst card = this.learnCards[this.currentLearnIndex];\n\t\tconst currentNum = this.currentLearnIndex + 1;\n\t\tconst totalNum = this.learnCards.length;\n\n\t\t//! 問題と正解のコンテンツを生成。\n\t\tlet frontContent = '';\n\t\tlet backContent = '';\n\n\t\tswitch (this.learnQuestionType) {\n\t\t\tcase 'abbr-to-meaning':\n\t\t\t\tfrontContent = `\n\t\t\t\t\t<div class=\"card-label\">略語</div>\n\t\t\t\t\t<div class=\"card-content-abbr\">${this.formatAbbreviation(card.abbreviation)}</div>\n\t\t\t\t`;\n\t\t\t\tbackContent = `\n\t\t\t\t\t<div class=\"card-label\">意味</div>\n\t\t\t\t\t<div class=\"card-content-text\">${card.english}</div>\n\t\t\t\t\t<div class=\"card-content-text\">${card.japanese}</div>\n\t\t\t\t`;\n\t\t\t\tbreak;\n\t\t\tcase 'meaning-to-abbr':\n\t\t\t\tfrontContent = `\n\t\t\t\t\t<div class=\"card-label\">意味</div>\n\t\t\t\t\t<div class=\"card-content-text\">${card.english}</div>\n\t\t\t\t\t<div class=\"card-content-text\">${card.japanese}</div>\n\t\t\t\t`;\n\t\t\t\tbackContent = `\n\t\t\t\t\t<div class=\"card-label\">略語</div>\n\t\t\t\t\t<div class=\"card-content-abbr\">${this.formatAbbreviation(card.abbreviation)}</div>\n\t\t\t\t`;\n\t\t\t\tbreak;\n\t\t\tcase 'morse-to-abbr':\n\t\t\t\tfrontContent = `\n\t\t\t\t\t<div class=\"card-label\">モールス音を聞いて略語を答えてください</div>\n\t\t\t\t\t<button class=\"play-morse-btn\" id=\"play-morse-btn\">🔊 モールス再生</button>\n\t\t\t\t`;\n\t\t\t\tbackContent = `\n\t\t\t\t\t<div class=\"card-label\">略語</div>\n\t\t\t\t\t<div class=\"card-content-abbr\">${this.formatAbbreviation(card.abbreviation)}</div>\n\t\t\t\t`;\n\t\t\t\tbreak;\n\t\t\tcase 'morse-to-meaning':\n\t\t\t\tfrontContent = `\n\t\t\t\t\t<div class=\"card-label\">モールス音を聞いて意味を答えてください</div>\n\t\t\t\t\t<button class=\"play-morse-btn\" id=\"play-morse-btn\">🔊 モールス再生</button>\n\t\t\t\t`;\n\t\t\t\tbackContent = `\n\t\t\t\t\t<div class=\"card-label\">意味</div>\n\t\t\t\t\t<div class=\"card-content-abbr\">${this.formatAbbreviation(card.abbreviation)}</div>\n\t\t\t\t\t<div class=\"card-content-text\">${card.english}</div>\n\t\t\t\t\t<div class=\"card-content-text\">${card.japanese}</div>\n\t\t\t\t`;\n\t\t\t\tbreak;\n\t\t}\n\n\t\t//! 判定ボタンのHTML。\n\t\tconst isKnown = this.progress.known.has(card.abbreviation);\n\t\tconst isUnknown = this.progress.unknown.has(card.abbreviation);\n\t\tconst judgmentButtons = `\n\t\t\t<div class=\"judgment-controls\">\n\t\t\t\t<button id=\"mark-unknown-btn\" class=\"judgment-button unknown ${isUnknown ? 'active' : ''}\">\n\t\t\t\t\t× わからない\n\t\t\t\t</button>\n\t\t\t\t<button id=\"mark-known-btn\" class=\"judgment-button known ${isKnown ? 'active' : ''}\">\n\t\t\t\t\t○ わかる\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t`;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"container learning-view\">\n\t\t\t\t<div class=\"learning-header\">\n\t\t\t\t\t<button id=\"back-to-setup-btn\" class=\"back-btn\">← 設定に戻る</button>\n\t\t\t\t\t<div class=\"progress-indicator\">${currentNum} / ${totalNum}</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"card-container\">\n\t\t\t\t\t<div class=\"flashcard ${this.isFlipped ? 'flipped' : ''}\" id=\"flashcard\">\n\t\t\t\t\t\t<div class=\"card-front\">\n\t\t\t\t\t\t\t${frontContent}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"card-back\">\n\t\t\t\t\t\t\t${backContent}\n\t\t\t\t\t\t\t${card.description ? `<div class=\"card-description\">${card.description}</div>` : ''}\n\t\t\t\t\t\t\t${card.example ? `<div class=\"card-example\">例: ${card.example}</div>` : ''}\n\t\t\t\t\t\t\t<div class=\"card-tags\">${card.tags} / ${'★'.repeat(card.frequency)}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"card-controls\">\n\t\t\t\t\t<button id=\"flip-card-btn\" class=\"control-button\">\n\t\t\t\t\t\t${this.isFlipped ? '問題に戻る' : '正解を確認する'} (Space)\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t${this.isFlipped ? judgmentButtons : ''}\n\n\t\t\t\t<div class=\"navigation-controls\">\n\t\t\t\t\t<button id=\"prev-card-btn\" class=\"nav-button\" ${this.currentLearnIndex === 0 ? 'disabled' : ''}>\n\t\t\t\t\t\t← 前のカード\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"next-card-btn\" class=\"nav-button\" ${this.currentLearnIndex >= this.learnCards.length - 1 ? 'disabled' : ''}>\n\t\t\t\t\t\t次のカード →\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachLearnCardListeners();\n\t}\n\n\t/**\n\t * 学習カードのイベントリスナー\n\t */\n\tprivate attachLearnCardListeners(): void {\n\t\t//! 設定に戻るボタン。\n\t\tconst backToSetupBtn = document.getElementById('back-to-setup-btn');\n\t\tbackToSetupBtn?.addEventListener('click', () => {\n\t\t\tthis.learnCards = [];\n\t\t\tthis.currentLearnIndex = 0;\n\t\t\tthis.isFlipped = false;\n\t\t\tthis.renderLearnSetup();\n\t\t});\n\n\t\t//! フリップボタン。\n\t\tconst flipCardBtn = document.getElementById('flip-card-btn');\n\t\tflipCardBtn?.addEventListener('click', () => {\n\t\t\tthis.isFlipped = !this.isFlipped;\n\t\t\tthis.renderLearnCard();\n\t\t});\n\n\t\t//! スペースキーでフリップ。\n\t\tconst spaceHandler = (e: KeyboardEvent) => {\n\t\t\tif (e.code === 'Space' && e.target === document.body) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.isFlipped = !this.isFlipped;\n\t\t\t\tthis.renderLearnCard();\n\t\t\t}\n\t\t};\n\t\tdocument.addEventListener('keydown', spaceHandler);\n\n\t\t//! モールス再生ボタン。\n\t\tconst playMorseBtn = document.getElementById('play-morse-btn');\n\t\tif (playMorseBtn) {\n\t\t\tplayMorseBtn.addEventListener('click', () => {\n\t\t\t\tconst card = this.learnCards[this.currentLearnIndex];\n\t\t\t\tthis.playMorse(card.abbreviation);\n\t\t\t});\n\t\t}\n\n\t\t//! 判定ボタン（わからない）。\n\t\tconst markUnknownBtn = document.getElementById('mark-unknown-btn');\n\t\tmarkUnknownBtn?.addEventListener('click', () => {\n\t\t\tconst card = this.learnCards[this.currentLearnIndex];\n\t\t\tthis.progress.unknown.add(card.abbreviation);\n\t\t\tthis.progress.known.delete(card.abbreviation);\n\t\t\tthis.saveProgress();\n\t\t\tthis.moveToNextCard();\n\t\t});\n\n\t\t//! 判定ボタン（わかる）。\n\t\tconst markKnownBtn = document.getElementById('mark-known-btn');\n\t\tmarkKnownBtn?.addEventListener('click', () => {\n\t\t\tconst card = this.learnCards[this.currentLearnIndex];\n\t\t\tthis.progress.known.add(card.abbreviation);\n\t\t\tthis.progress.unknown.delete(card.abbreviation);\n\t\t\tthis.saveProgress();\n\t\t\tthis.moveToNextCard();\n\t\t});\n\n\t\t//! 前のカードボタン。\n\t\tconst prevCardBtn = document.getElementById('prev-card-btn');\n\t\tprevCardBtn?.addEventListener('click', () => {\n\t\t\tif (this.currentLearnIndex > 0) {\n\t\t\t\tthis.currentLearnIndex--;\n\t\t\t\tthis.isFlipped = false;\n\t\t\t\tthis.renderLearnCard();\n\t\t\t}\n\t\t});\n\n\t\t//! 次のカードボタン。\n\t\tconst nextCardBtn = document.getElementById('next-card-btn');\n\t\tnextCardBtn?.addEventListener('click', () => {\n\t\t\tif (this.currentLearnIndex < this.learnCards.length - 1) {\n\t\t\t\tthis.currentLearnIndex++;\n\t\t\t\tthis.isFlipped = false;\n\t\t\t\tthis.renderLearnCard();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * 次のカードに移動する（判定ボタンクリック時の自動遷移用）\n\t */\n\tprivate moveToNextCard(): void {\n\t\tif (this.currentLearnIndex < this.learnCards.length - 1) {\n\t\t\t//! 次のカードがあれば移動。\n\t\t\tthis.currentLearnIndex++;\n\t\t\tthis.isFlipped = false;\n\t\t\tthis.renderLearnCard();\n\t\t} else {\n\t\t\t//! 最後のカードの場合は学習完了。\n\t\t\talert('学習完了しました！');\n\t\t\tthis.learnCards = [];\n\t\t\tthis.currentLearnIndex = 0;\n\t\t\tthis.isFlipped = false;\n\t\t\tthis.renderLearnSetup();\n\t\t}\n\t}\n\n\t/**\n\t * 試験モードをレンダリング\n\t */\n\tprivate renderExamMode(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tif (this.questions.length === 0) {\n\t\t\t// 試験設定画面\n\t\t\tthis.renderExamSetup();\n\t\t} else {\n\t\t\t// 試験実施画面\n\t\t\tthis.renderExamQuestion();\n\t\t}\n\t}\n\n\t/**\n\t * 試験設定画面\n\t */\n\tprivate renderExamSetup(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"settings-icon\" id=\"settingsIcon\">\n\t\t\t\t<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t<h1>CW略語・Q符号学習</h1>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"tabs\">\n\t\t\t\t\t<button class=\"tab-button\" data-tab=\"browse\">一覧</button>\n\t\t\t\t\t<button class=\"tab-button\" data-tab=\"learn\">学習モード</button>\n\t\t\t\t\t<button class=\"tab-button active\" data-tab=\"exam\">試験モード</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"flashcard-container\">\n\t\t\t\t\t${this.renderFilterSection()}\n\n\t\t\t\t\t<div class=\"exam-setup-section\">\n\t\t\t\t\t\t<h3>出題形式</h3>\n\t\t\t\t\t\t<div class=\"question-type-buttons\">\n\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.questionType === 'abbr-to-meaning' ? 'active' : ''}\" data-type=\"abbr-to-meaning\">略語→意味（基礎）</button>\n\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.questionType === 'meaning-to-abbr' ? 'active' : ''}\" data-type=\"meaning-to-abbr\">意味→略語（応用）</button>\n\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.questionType === 'morse-to-abbr' ? 'active' : ''}\" data-type=\"morse-to-abbr\">モールス音→略語（実践）</button>\n\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.questionType === 'morse-to-meaning' ? 'active' : ''}\" data-type=\"morse-to-meaning\">モールス音→意味（実践）</button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<h3>問題数</h3>\n\t\t\t\t\t\t<div class=\"question-count-buttons\">\n\t\t\t\t\t\t\t<button class=\"question-count-btn ${this.questionCount === 5 ? 'active' : ''}\" data-count=\"5\">5問</button>\n\t\t\t\t\t\t\t<button class=\"question-count-btn ${this.questionCount === 10 ? 'active' : ''}\" data-count=\"10\">10問</button>\n\t\t\t\t\t\t\t<button class=\"question-count-btn ${this.questionCount === 20 ? 'active' : ''}\" data-count=\"20\">20問</button>\n\t\t\t\t\t\t\t<button class=\"question-count-btn ${this.questionCount === 50 ? 'active' : ''}\" data-count=\"50\">50問</button>\n\t\t\t\t\t\t\t<button class=\"question-count-btn ${this.questionCount === 'all' ? 'active' : ''}\" data-count=\"all\">全問</button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"action-area\">\n\t\t\t\t\t\t\t<button class=\"btn btn-large btn-primary\" id=\"start-exam-btn\">試験開始</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t\t<h3>使い方</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>フィルターで出題範囲を絞り込みます</li>\n\t\t\t\t\t\t\t<li>出題形式を選択します（略語→意味、意味→略語、モールス音から）</li>\n\t\t\t\t\t\t\t<li>問題数を選択します（5問〜全問）</li>\n\t\t\t\t\t\t\t<li>4つの選択肢から正解を選びます</li>\n\t\t\t\t\t\t\t<li>80%以上で合格です</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachExamSetupListeners();\n\t}\n\n\t/**\n\t * 試験問題画面\n\t */\n\tprivate renderExamQuestion(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tconst question = this.questions[this.currentQuestionIndex];\n\t\tconst progress = this.currentQuestionIndex + 1;\n\t\tconst total = this.questions.length;\n\n\t\tlet questionText = '';\n\t\tswitch (question.type) {\n\t\t\tcase 'abbr-to-meaning':\n\t\t\t\tquestionText = `次の略語の意味は？<br><strong class=\"question-text\">${question.entry.abbreviation}</strong>`;\n\t\t\t\tbreak;\n\t\t\tcase 'meaning-to-abbr':\n\t\t\t\tquestionText = `次の意味を表す略語は？<br><strong class=\"question-text\">${question.entry.english} / ${question.entry.japanese}</strong>`;\n\t\t\t\tbreak;\n\t\t\tcase 'morse-to-abbr':\n\t\t\t\tquestionText = `モールス音を聞いて、対応する略語は？<br><button id=\"replay-morse-btn\" class=\"btn btn-secondary\">🔊 もう一度再生</button>`;\n\t\t\t\tbreak;\n\t\t\tcase 'morse-to-meaning':\n\t\t\t\tquestionText = `モールス音を聞いて、対応する意味は？<br><button id=\"replay-morse-btn\" class=\"btn btn-secondary\">🔊 もう一度再生</button>`;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<h1>CW略語・Q符号学習 - 試験中</h1>\n\t\t\t\t\t<button class=\"back-btn\">中断</button>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"exam-container\">\n\t\t\t\t\t<div class=\"exam-progress\">\n\t\t\t\t\t\t<span>問題 <strong>${progress}</strong> / ${total}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"question-area\">\n\t\t\t\t\t\t<p class=\"question\">${questionText}</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"choices-area\">\n\t\t\t\t\t\t${question.choices.map((choice, index) => `\n\t\t\t\t\t\t\t<button class=\"choice-btn\" data-choice=\"${choice}\">\n\t\t\t\t\t\t\t\t${index + 1}. ${choice}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t`).join('')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachExamQuestionListeners();\n\n\t\t//! モールス音が必要な場合は自動再生。\n\t\tif (question.type === 'morse-to-abbr' || question.type === 'morse-to-meaning') {\n\t\t\tsetTimeout(() => this.playMorse(question.entry.abbreviation), 500);\n\t\t}\n\t}\n\n\t/**\n\t * 試験結果画面\n\t */\n\tprivate renderExamResultMode(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tconst score = FlashcardTrainer.calculateScore(this.results);\n\t\tconst isPassed = FlashcardTrainer.isPassed(score.percentage);\n\t\tconst wrongAnswers = FlashcardTrainer.getWrongAnswers(this.results);\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<h1>CW略語・Q符号学習 - 結果</h1>\n\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"result-container\">\n\t\t\t\t\t<div class=\"score-area ${isPassed ? 'passed' : 'failed'}\">\n\t\t\t\t\t\t<h2>${isPassed ? '合格！' : '不合格'}</h2>\n\t\t\t\t\t\t<div class=\"score-display\">\n\t\t\t\t\t\t\t<span class=\"score-percentage\">${score.percentage}%</span>\n\t\t\t\t\t\t\t<span class=\"score-detail\">${score.correct} / ${score.total} 問正解</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t${wrongAnswers.length > 0 ? `\n\t\t\t\t\t\t<div class=\"wrong-answers-section\">\n\t\t\t\t\t\t\t<h3>間違えた問題（${wrongAnswers.length}件）</h3>\n\t\t\t\t\t\t\t<div class=\"wrong-answers-list\">\n\t\t\t\t\t\t\t\t${this.results.filter(r => !r.isCorrect).map(result => `\n\t\t\t\t\t\t\t\t\t<div class=\"wrong-answer-item\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"wrong-answer-question\">\n\t\t\t\t\t\t\t\t\t\t\t<strong>${result.question.entry.abbreviation}</strong>\n\t\t\t\t\t\t\t\t\t\t\t<span>${result.question.entry.english} / ${result.question.entry.japanese}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"wrong-answer-detail\">\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"wrong-label\">あなたの回答:</span>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"wrong-user-answer\">${result.userAnswer}</span>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"correct-label\">正解:</span>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"correct-answer\">${result.question.correctAnswer}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t${result.question.entry.description ? `\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"wrong-answer-description\">\n\t\t\t\t\t\t\t\t\t\t\t\t${result.question.entry.description}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t` : ''}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t`).join('')}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t` : `\n\t\t\t\t\t\t<div class=\"perfect-score\">\n\t\t\t\t\t\t\t<p>すべて正解しました！</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`}\n\n\t\t\t\t\t<div class=\"action-area\">\n\t\t\t\t\t\t<button class=\"btn btn-primary btn-large\" id=\"retry-btn\">もう一度</button>\n\t\t\t\t\t\t<button class=\"btn btn-secondary btn-large\" id=\"back-to-setup-btn\">設定に戻る</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachResultListeners();\n\t}\n\n\t/**\n\t * browseモードのイベントリスナーを設定\n\t */\n\tprivate attachBrowseModeListeners(): void {\n\t\tthis.attachCommonListeners();\n\n\t\t//! タグフィルター。\n\t\tconst tagFilter = document.getElementById('tag-filter');\n\t\ttagFilter?.addEventListener('change', (e) => {\n\t\t\tconst target = e.target as HTMLInputElement;\n\t\t\tif (target.type === 'checkbox') {\n\t\t\t\tif (target.checked) {\n\t\t\t\t\tthis.selectedTags.add(target.value);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedTags.delete(target.value);\n\t\t\t\t}\n\t\t\t\tthis.saveFilters();\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\tthis.updateFilteredCount();\n\t\t\t\tthis.renderEntries();\n\t\t\t}\n\t\t});\n\n\t\t//! 使用頻度フィルター。\n\t\tconst frequencyFilter = document.getElementById('frequency-filter');\n\t\tfrequencyFilter?.addEventListener('change', (e) => {\n\t\t\tconst target = e.target as HTMLInputElement;\n\t\t\tif (target.type === 'checkbox') {\n\t\t\t\tconst freq = parseInt(target.value, 10);\n\t\t\t\tif (target.checked) {\n\t\t\t\t\tthis.selectedFrequencies.add(freq);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedFrequencies.delete(freq);\n\t\t\t\t}\n\t\t\t\tthis.saveFilters();\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\tthis.updateFilteredCount();\n\t\t\t\tthis.renderEntries();\n\t\t\t}\n\t\t});\n\n\t\t//! 検索。\n\t\tconst searchInput = document.getElementById('search-input') as HTMLInputElement;\n\t\tsearchInput?.addEventListener('input', () => {\n\t\t\tthis.searchQuery = searchInput.value;\n\t\t\tthis.saveFilters();\n\t\t\tthis.updateFilteredEntries();\n\t\t\tthis.updateFilteredCount();\n\t\t\tthis.renderEntries();\n\t\t});\n\t}\n\n\t/**\n\t * 試験設定のイベントリスナーを設定\n\t */\n\tprivate attachExamSetupListeners(): void {\n\t\tthis.attachCommonListeners();\n\n\t\t//! タグフィルター。\n\t\tconst tagFilter = document.getElementById('tag-filter');\n\t\ttagFilter?.addEventListener('change', (e) => {\n\t\t\tconst target = e.target as HTMLInputElement;\n\t\t\tif (target.type === 'checkbox') {\n\t\t\t\tif (target.checked) {\n\t\t\t\t\tthis.selectedTags.add(target.value);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedTags.delete(target.value);\n\t\t\t\t}\n\t\t\t\tthis.saveFilters();\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\tthis.updateFilteredCount();\n\t\t\t}\n\t\t});\n\n\t\t//! 使用頻度フィルター。\n\t\tconst frequencyFilter = document.getElementById('frequency-filter');\n\t\tfrequencyFilter?.addEventListener('change', (e) => {\n\t\t\tconst target = e.target as HTMLInputElement;\n\t\t\tif (target.type === 'checkbox') {\n\t\t\t\tconst freq = parseInt(target.value, 10);\n\t\t\t\tif (target.checked) {\n\t\t\t\t\tthis.selectedFrequencies.add(freq);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedFrequencies.delete(freq);\n\t\t\t\t}\n\t\t\t\tthis.saveFilters();\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\tthis.updateFilteredCount();\n\t\t\t}\n\t\t});\n\n\t\t//! 検索。\n\t\tconst searchInput = document.getElementById('search-input') as HTMLInputElement;\n\t\tsearchInput?.addEventListener('input', () => {\n\t\t\tthis.searchQuery = searchInput.value;\n\t\t\tthis.saveFilters();\n\t\t\tthis.updateFilteredEntries();\n\t\t\tthis.updateFilteredCount();\n\t\t});\n\n\t\t//! 出題形式ボタン。\n\t\tconst questionTypeBtns = document.querySelectorAll('.question-type-btn');\n\t\tquestionTypeBtns.forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst type = btn.getAttribute('data-type') as QuestionType;\n\t\t\t\tif (type) {\n\t\t\t\t\tthis.questionType = type;\n\t\t\t\t\tFlashcardState.saveExamQuestionType(this.questionType as LearnQuestionType);\n\t\t\t\t\tthis.renderExamSetup();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! 問題数ボタン。\n\t\tconst questionCountBtns = document.querySelectorAll('.question-count-btn');\n\t\tquestionCountBtns.forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst count = btn.getAttribute('data-count');\n\t\t\t\tif (count) {\n\t\t\t\t\tthis.questionCount = count === 'all' ? 'all' : parseInt(count, 10);\n\t\t\t\t\tthis.renderExamSetup();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! 試験開始ボタン。\n\t\tconst startExamBtn = document.getElementById('start-exam-btn');\n\t\tstartExamBtn?.addEventListener('click', () => {\n\t\t\tthis.startExam();\n\t\t});\n\t}\n\n\t/**\n\t * 試験問題のイベントリスナーを設定\n\t */\n\tprivate attachExamQuestionListeners(): void {\n\t\t//! 中断ボタン。\n\t\tconst backBtn = document.querySelector('.back-btn');\n\t\tbackBtn?.addEventListener('click', () => {\n\t\t\tif (confirm('試験を中断してメニューに戻りますか？')) {\n\t\t\t\twindow.location.hash = '#menu';\n\t\t\t}\n\t\t});\n\n\t\t//! モールス再生ボタン。\n\t\tconst replayBtn = document.getElementById('replay-morse-btn');\n\t\tif (replayBtn) {\n\t\t\tconst question = this.questions[this.currentQuestionIndex];\n\t\t\treplayBtn.addEventListener('click', () => {\n\t\t\t\tthis.playMorse(question.entry.abbreviation);\n\t\t\t});\n\t\t}\n\n\t\t//! 選択肢ボタン。\n\t\tconst choiceBtns = document.querySelectorAll('.choice-btn');\n\t\tchoiceBtns.forEach(btn => {\n\t\t\tbtn.addEventListener('click', (e) => {\n\t\t\t\tconst target = e.currentTarget as HTMLButtonElement;\n\t\t\t\tconst userAnswer = target.dataset.choice || '';\n\t\t\t\tthis.handleAnswer(userAnswer);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * 結果画面のイベントリスナーを設定\n\t */\n\tprivate attachResultListeners(): void {\n\t\t//! 戻るボタン。\n\t\tconst backBtn = document.querySelector('.back-btn');\n\t\tbackBtn?.addEventListener('click', () => {\n\t\t\twindow.location.hash = '#menu';\n\t\t});\n\n\t\t//! もう一度ボタン。\n\t\tconst retryBtn = document.getElementById('retry-btn');\n\t\tretryBtn?.addEventListener('click', () => {\n\t\t\tthis.questions = [];\n\t\t\tthis.results = [];\n\t\t\tthis.currentQuestionIndex = 0;\n\t\t\tthis.currentState = 'exam';\n\t\t\tthis.render();\n\t\t});\n\n\t\t//! 設定に戻るボタン。\n\t\tconst backToSetupBtn = document.getElementById('back-to-setup-btn');\n\t\tbackToSetupBtn?.addEventListener('click', () => {\n\t\t\tthis.questions = [];\n\t\t\tthis.results = [];\n\t\t\tthis.currentQuestionIndex = 0;\n\t\t\tthis.currentState = 'exam';\n\t\t\tthis.render();\n\t\t});\n\t}\n\n\t/**\n\t * 共通のイベントリスナーを設定（タブ切り替えなど）\n\t */\n\tprivate attachCommonListeners(): void {\n\t\t//! 戻るボタン。\n\t\tconst backBtn = document.querySelector('.back-btn');\n\t\tbackBtn?.addEventListener('click', () => {\n\t\t\twindow.location.hash = '#menu';\n\t\t});\n\n\t\t//! 設定アイコン。\n\t\tdocument.getElementById('settingsIcon')?.addEventListener('click', () => {\n\t\t\tthis.openSettingsModal();\n\t\t});\n\n\t\t//! タブ切り替え。\n\t\tconst tabButtons = document.querySelectorAll('.tab-button');\n\t\ttabButtons.forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst tab = btn.getAttribute('data-tab');\n\t\t\t\tif (tab === 'browse') {\n\t\t\t\t\tthis.currentState = 'browse';\n\t\t\t\t\tFlashcardState.saveViewMode('browse');\n\t\t\t\t\tthis.render();\n\t\t\t\t} else if (tab === 'learn') {\n\t\t\t\t\tthis.currentState = 'learn';\n\t\t\t\t\tFlashcardState.saveViewMode('learn');\n\t\t\t\t\tthis.render();\n\t\t\t\t} else if (tab === 'exam') {\n\t\t\t\t\tthis.questions = [];\n\t\t\t\t\tthis.results = [];\n\t\t\t\t\tthis.currentQuestionIndex = 0;\n\t\t\t\t\tthis.currentState = 'exam';\n\t\t\t\t\tFlashcardState.saveViewMode('exam');\n\t\t\t\t\tthis.render();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * フィルター適用後のエントリー数を更新\n\t */\n\tprivate updateFilteredCount(): void {\n\t\tconst filteredCountElem = document.getElementById('filtered-count');\n\t\tif (filteredCountElem) {\n\t\t\tfilteredCountElem.textContent = this.filteredEntries.length.toString();\n\t\t}\n\n\t\t//! 問題数の最大値も更新（試験モードの場合）。\n\t\tconst questionCountInput = document.getElementById('question-count') as HTMLInputElement;\n\t\tif (questionCountInput) {\n\t\t\tquestionCountInput.max = this.filteredEntries.length.toString();\n\t\t\tif (parseInt(questionCountInput.value, 10) > this.filteredEntries.length) {\n\t\t\t\tquestionCountInput.value = this.filteredEntries.length.toString();\n\t\t\t\tthis.questionCount = this.filteredEntries.length;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * フィルタリングされたエントリーを更新\n\t */\n\tprivate updateFilteredEntries(): void {\n\t\tlet entries = this.allEntries;\n\n\t\t//! タグでフィルタリング。\n\t\tentries = FlashcardTrainer.filterByTags(entries, this.selectedTags);\n\n\t\t//! 使用頻度でフィルタリング。\n\t\tentries = FlashcardTrainer.filterByFrequencies(entries, this.selectedFrequencies);\n\n\t\t//! 検索クエリでフィルタリング。\n\t\tentries = FlashcardTrainer.filterByQuery(entries, this.searchQuery);\n\n\t\t//! ソート適用。\n\t\tthis.filteredEntries = this.sortEntries(entries);\n\t}\n\n\t/**\n\t * エントリーをソート\n\t */\n\tprivate sortEntries(entries: FlashcardEntry[]): FlashcardEntry[] {\n\t\tconst ascending = this.sortDirection === 'asc';\n\n\t\tswitch (this.sortColumn) {\n\t\t\tcase 'abbreviation':\n\t\t\t\treturn FlashcardTrainer.sortByAbbreviation(entries, ascending);\n\t\t\tcase 'english':\n\t\t\t\treturn FlashcardTrainer.sortByEnglish(entries, ascending);\n\t\t\tcase 'japanese':\n\t\t\t\treturn FlashcardTrainer.sortByJapanese(entries, ascending);\n\t\t\tcase 'frequency':\n\t\t\t\treturn FlashcardTrainer.sortByFrequency(entries, ascending);\n\t\t\tcase 'tags':\n\t\t\t\treturn FlashcardTrainer.sortByTags(entries, ascending);\n\t\t\tdefault:\n\t\t\t\treturn entries;\n\t\t}\n\t}\n\n\t/**\n\t * ソートを切り替え\n\t */\n\tprivate toggleSort(column: SortColumn): void {\n\t\tif (this.sortColumn === column) {\n\t\t\t//! 同じ列なら方向を反転。\n\t\t\tthis.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n\t\t} else {\n\t\t\t//! 異なる列なら昇順で開始。\n\t\t\tthis.sortColumn = column;\n\t\t\tthis.sortDirection = 'asc';\n\t\t}\n\t\t//! ソート状態を保存。\n\t\tFlashcardState.saveSortState(this.sortColumn, this.sortDirection);\n\t\tthis.updateFilteredEntries();\n\t\tthis.renderEntries();\n\t}\n\n\t/**\n\t * ソートインジケーターを取得\n\t */\n\tprivate getSortIndicator(column: SortColumn): string {\n\t\tif (this.sortColumn !== column) return '';\n\t\treturn this.sortDirection === 'asc' ? ' ▲' : ' ▼';\n\t}\n\n\t/**\n\t * 略語をフォーマット（プロサインをオーバーラインで表示）\n\t */\n\tprivate formatAbbreviation(abbr: string): string {\n\t\tconst prosignMatch = abbr.match(/^\\[([A-Z]+)\\]$/);\n\t\tif (prosignMatch) {\n\t\t\treturn `<span class=\"prosign\">${prosignMatch[1]}</span>`;\n\t\t}\n\t\treturn abbr;\n\t}\n\n\t/**\n\t * モールス符号を再生\n\t */\n\tprivate async playMorse(text: string): Promise<void> {\n\t\ttry {\n\t\t\t//! 既に再生中の場合は停止。\n\t\t\tif (this.currentlyPlaying === text) {\n\t\t\t\tthis.audio.stopContinuousTone();\n\t\t\t\tthis.currentlyPlaying = null;\n\t\t\t\tthis.renderEntries();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//! 別のものが再生中なら停止。\n\t\t\tif (this.currentlyPlaying) {\n\t\t\t\tthis.audio.stopContinuousTone();\n\t\t\t}\n\n\t\t\tthis.currentlyPlaying = text;\n\t\t\tthis.renderEntries();\n\n\t\t\t//! モールス符号に変換。\n\t\t\tconst morseSequence = MorseCodec.textToMorse(text);\n\t\t\tif (morseSequence) {\n\t\t\t\t//! シンプルな再生実装（scheduleToneを使用）。\n\t\t\t\tfor (const char of morseSequence) {\n\t\t\t\t\tif (char === '.') {\n\t\t\t\t\t\tthis.audio.scheduleTone(0, 60);  // 短点\n\t\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 120));\n\t\t\t\t\t} else if (char === '-') {\n\t\t\t\t\t\tthis.audio.scheduleTone(0, 180);  // 長点\n\t\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 240));\n\t\t\t\t\t} else if (char === ' ') {\n\t\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 60));  // 要素間スペース\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.currentlyPlaying = null;\n\t\t\tthis.renderEntries();\n\t\t} catch (error) {\n\t\t\tconsole.error('モールス再生エラー:', error);\n\t\t\tthis.currentlyPlaying = null;\n\t\t\tthis.renderEntries();\n\t\t}\n\t}\n\n\t/**\n\t * 試験を開始\n\t */\n\tprivate startExam(): void {\n\t\tif (this.filteredEntries.length === 0) {\n\t\t\talert('該当するエントリーがありません。フィルターを調整してください。');\n\t\t\treturn;\n\t\t}\n\n\t\tconst count = this.questionCount === 'all' ? this.filteredEntries.length : this.questionCount;\n\t\tconst actualCount = Math.min(count, this.filteredEntries.length);\n\t\tif (actualCount === 0) {\n\t\t\talert('問題数を1以上に設定してください。');\n\t\t\treturn;\n\t\t}\n\n\t\t//! 問題を生成。\n\t\tthis.questions = FlashcardTrainer.generateExamQuestions(\n\t\t\tthis.filteredEntries,\n\t\t\tthis.questionType,\n\t\t\tactualCount\n\t\t);\n\n\t\tthis.currentQuestionIndex = 0;\n\t\tthis.results = [];\n\t\tthis.render();\n\t}\n\n\t/**\n\t * 回答を処理\n\t */\n\tprivate handleAnswer(userAnswer: string): void {\n\t\tconst question = this.questions[this.currentQuestionIndex];\n\t\tconst isCorrect = FlashcardTrainer.checkAnswer(question, userAnswer);\n\n\t\t//! 結果を記録。\n\t\tthis.results.push({\n\t\t\tquestion,\n\t\t\tuserAnswer,\n\t\t\tisCorrect\n\t\t});\n\n\t\t//! 次の問題に進むか結果表示。\n\t\tthis.currentQuestionIndex++;\n\t\tif (this.currentQuestionIndex < this.questions.length) {\n\t\t\tthis.render();\n\t\t} else {\n\t\t\tthis.currentState = 'exam-result';\n\t\t\tthis.render();\n\t\t}\n\t}\n\n\t/**\n\t * 設定モーダルを開く\n\t */\n\tprivate openSettingsModal(): void {\n\t\t//! 現在の設定値を取得（0-100の範囲に変換）。\n\t\tconst currentValues: SettingValues = {\n\t\t\tvolume: Math.round(this.audio.getVolume() * 100),\n\t\t\tfrequency: this.audio.getFrequency(),\n\t\t\twpm: this.audio.getWPM()\n\t\t};\n\n\t\t//! 設定変更前の値を保存（キャンセル時の復元用）。\n\t\tconst savedSettings = {\n\t\t\tvolume: this.audio.getVolume(),\n\t\t\tfrequency: this.audio.getFrequency(),\n\t\t\twpm: this.audio.getWPM()\n\t\t};\n\n\t\t//! SettingsModalを作成。\n\t\tconst modal = new SettingsModal(\n\t\t\t'flashcard-settings-modal',\n\t\t\tALL_SETTING_ITEMS,\n\t\t\tcurrentValues,\n\t\t\t{\n\t\t\t\tonSave: (values: SettingValues) => {\n\t\t\t\t\t//! 設定を保存。\n\t\t\t\t\tthis.audio.setVolume((values.volume as number) / 100);\n\t\t\t\t\tthis.audio.setFrequency(values.frequency as number);\n\t\t\t\t\tthis.audio.setWPM(values.wpm as number);\n\t\t\t\t},\n\t\t\t\tonCancel: () => {\n\t\t\t\t\t//! 設定を元に戻す。\n\t\t\t\t\tthis.audio.setVolume(savedSettings.volume);\n\t\t\t\t\tthis.audio.setFrequency(savedSettings.frequency);\n\t\t\t\t\tthis.audio.setWPM(savedSettings.wpm);\n\t\t\t\t},\n\t\t\t\tonTestPlay: async () => {\n\t\t\t\t\t//! テスト再生。\n\t\t\t\t\tawait this.playMorse('CQ');\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t//! モーダルを表示。\n\t\tmodal.show('flashcard');\n\t}\n\n\t/**\n\t * ビューを破棄\n\t */\n\tdestroy(): void {\n\t\t//! 音声を停止。\n\t\tif (this.currentlyPlaying) {\n\t\t\tthis.audio.stopContinuousTone();\n\t\t}\n\t}\n}\n","/**\n * コッホ法トレーニングビュー\n */\n\nimport type { View } from '../../router';\nimport {\n\tKochTrainer,\n\tKOCH_SEQUENCE,\n\tAudioGenerator,\n\tMorseCodec,\n\ttype PracticeSettings\n} from 'morse-engine';\nimport { SettingsModal, ALL_SETTING_ITEMS, type SettingValues } from 'morse-engine';\n\ntype ViewMode = 'learning' | 'custom';\n\ninterface LessonState {\n\tcurrentLesson: number;\n\tisPlaying: boolean;\n\tuserInput: string;\n\tcorrectAnswer: string;\n\tgroups: string[];\n\tcurrentGroupIndex: number;\n}\n\ninterface CustomState {\n\tselectedChars: Set<string>;\n\tisCustomRunning: boolean;\n\tcustomUserInput: string;\n\tcustomCorrectAnswer: string;\n\tcustomGroups: string[];\n\tcustomCurrentGroupIndex: number;\n\tcustomIsPlaying: boolean;\n}\n\ninterface KochSettings {\n\tcharacterSpeed: number;\n\teffectiveSpeed: number;\n\tfrequency: number;\n\tvolume: number;\n\tpracticeDuration: number;\n\tgroupSize: number;\n\tshowInput: boolean;\n}\n\nconst DEFAULT_SETTINGS: KochSettings = {\n\tcharacterSpeed: 20,\n\teffectiveSpeed: 15,\n\tfrequency: 700,\n\tvolume: 0.7,\n\tpracticeDuration: 60,\n\tgroupSize: 5,\n\tshowInput: true\n};\n\n/**\n * コッホ法トレーニングビュークラス\n */\nexport class KochView implements View {\n\tprivate audio: AudioGenerator;\n\tprivate viewMode: ViewMode = 'learning';\n\tprivate settings: KochSettings = { ...DEFAULT_SETTINGS };\n\n\tprivate state: LessonState = {\n\t\tcurrentLesson: 1,\n\t\tisPlaying: false,\n\t\tuserInput: '',\n\t\tcorrectAnswer: '',\n\t\tgroups: [],\n\t\tcurrentGroupIndex: 0,\n\t};\n\n\tprivate customState: CustomState = {\n\t\tselectedChars: new Set(),\n\t\tisCustomRunning: false,\n\t\tcustomUserInput: '',\n\t\tcustomCorrectAnswer: '',\n\t\tcustomGroups: [],\n\t\tcustomCurrentGroupIndex: 0,\n\t\tcustomIsPlaying: false,\n\t};\n\n\tconstructor() {\n\t\t//! 設定を読み込む。\n\t\tthis.loadSettings();\n\t\tthis.loadProgress();\n\t\tthis.loadViewMode();\n\t\tthis.loadSelectedChars();\n\n\t\t//! AudioGeneratorを初期化。\n\t\tthis.audio = new AudioGenerator({\n\t\t\tfrequency: this.settings.frequency,\n\t\t\tvolume: this.settings.volume,\n\t\t\twpm: this.settings.characterSpeed,\n\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t});\n\t}\n\n\t//! ========== 設定管理 ==========\n\n\tprivate loadSettings(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.koch.settings');\n\t\t\tif (saved) {\n\t\t\t\tthis.settings = { ...DEFAULT_SETTINGS, ...JSON.parse(saved) };\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load settings:', error);\n\t\t}\n\t}\n\n\tprivate saveSettings(): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem('v10.koch.settings', JSON.stringify(this.settings));\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save settings:', error);\n\t\t}\n\t}\n\n\tprivate loadProgress(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.koch.currentLesson');\n\t\t\tif (saved) {\n\t\t\t\tthis.state.currentLesson = parseInt(saved, 10);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load progress:', error);\n\t\t}\n\t}\n\n\tprivate saveProgress(): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem('v10.koch.currentLesson', this.state.currentLesson.toString());\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save progress:', error);\n\t\t}\n\t}\n\n\tprivate loadViewMode(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.koch.viewMode') as ViewMode | null;\n\t\t\tif (saved && ['learning', 'custom'].includes(saved)) {\n\t\t\t\tthis.viewMode = saved;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load view mode:', error);\n\t\t}\n\t}\n\n\tprivate saveViewMode(): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem('v10.koch.viewMode', this.viewMode);\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save view mode:', error);\n\t\t}\n\t}\n\n\tprivate loadSelectedChars(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.koch.selectedChars');\n\t\t\tif (saved) {\n\t\t\t\tconst chars = JSON.parse(saved) as string[];\n\t\t\t\tthis.customState.selectedChars = new Set(chars);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load selected chars:', error);\n\t\t}\n\t}\n\n\tprivate saveSelectedChars(): void {\n\t\ttry {\n\t\t\tconst chars = Array.from(this.customState.selectedChars);\n\t\t\tlocalStorage.setItem('v10.koch.selectedChars', JSON.stringify(chars));\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save selected chars:', error);\n\t\t}\n\t}\n\n\t//! ========== レッスン管理 ==========\n\n\tprivate async startLesson(): Promise<void> {\n\t\tconst chars = KochTrainer.getCharsForLesson(this.state.currentLesson);\n\t\tconst practiceSettings: PracticeSettings = {\n\t\t\tgroupSize: this.settings.groupSize,\n\t\t\tduration: this.settings.practiceDuration,\n\t\t\twpm: this.settings.characterSpeed\n\t\t};\n\t\tthis.state.groups = KochTrainer.generateRandomGroups(chars, practiceSettings);\n\t\tthis.state.currentGroupIndex = 0;\n\t\tthis.state.userInput = '';\n\t\tthis.state.correctAnswer = this.state.groups.join('');\n\t\tthis.state.isPlaying = false;\n\n\t\t//! AudioGeneratorの設定を更新。\n\t\tthis.audio.updateSettings({\n\t\t\tfrequency: this.settings.frequency,\n\t\t\tvolume: this.settings.volume,\n\t\t\twpm: this.settings.characterSpeed,\n\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t});\n\n\t\tthis.renderPractice();\n\t}\n\n\tprivate async playMorse(): Promise<void> {\n\t\tif (this.state.isPlaying) return;\n\n\t\tthis.state.isPlaying = true;\n\t\tthis.state.currentGroupIndex = 0;\n\t\tthis.updateProgress();\n\t\tthis.updatePlaybackButtons();\n\n\t\t//! モールス信号を再生。\n\t\tfor (let i = 0; i < this.state.groups.length && this.state.isPlaying; i++) {\n\t\t\tconst group = this.state.groups[i];\n\t\t\tconst morse = MorseCodec.textToMorse(group);\n\t\t\tawait this.audio.playMorseString(morse + ' /');\n\n\t\t\tthis.state.currentGroupIndex = i + 1;\n\t\t\tthis.updateProgress();\n\t\t}\n\n\t\tthis.state.isPlaying = false;\n\t\tthis.updatePlaybackButtons();\n\t\tif (this.state.currentGroupIndex >= this.state.groups.length) {\n\t\t\tthis.showResult();\n\t\t}\n\t}\n\n\tprivate pauseMorse(): void {\n\t\tthis.state.isPlaying = false;\n\t\tthis.audio.stopPlaying();\n\t\tthis.updatePlaybackButtons();\n\t}\n\n\tprivate stopLesson(): void {\n\t\tthis.state.isPlaying = false;\n\t\tthis.audio.stopPlaying();\n\t\tthis.render();\n\t}\n\n\tprivate showResult(): void {\n\t\tconst accuracy = KochTrainer.calculateAccuracy(this.state.correctAnswer, this.state.userInput);\n\t\tconst passed = accuracy >= 90;\n\n\t\tconst resultContainer = document.getElementById('resultContainer');\n\t\tif (!resultContainer) return;\n\n\t\tresultContainer.innerHTML = `\n\t\t\t<div class=\"result ${passed ? 'passed' : 'failed'}\">\n\t\t\t\t<h2>${passed ? '合格！' : '不合格'}</h2>\n\t\t\t\t<div class=\"accuracy\">正答率: ${accuracy.toFixed(1)}%</div>\n\t\t\t\t<div class=\"comparison\">\n\t\t\t\t\t<div>送信: ${this.state.correctAnswer}</div>\n\t\t\t\t\t<div>入力: ${this.state.userInput || '（未入力）'}</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"actions\">\n\t\t\t\t\t${passed ? `<button class=\"btn primary\" id=\"nextLessonBtn\">次のレッスンへ</button>` : ''}\n\t\t\t\t\t<button class=\"btn\" id=\"retryBtn\">もう一度</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tif (passed && this.state.currentLesson < 40) {\n\t\t\tthis.state.currentLesson++;\n\t\t\tthis.saveProgress();\n\n\t\t\tdocument.getElementById('nextLessonBtn')?.addEventListener('click', () => {\n\t\t\t\tthis.render();\n\t\t\t});\n\t\t}\n\n\t\tdocument.getElementById('retryBtn')?.addEventListener('click', () => {\n\t\t\tthis.render();\n\t\t});\n\t}\n\n\tprivate updateProgress(): void {\n\t\tconst progressEl = document.getElementById('lessonProgress');\n\t\tconst progressBar = document.getElementById('progressBar');\n\n\t\tif (progressEl && progressBar) {\n\t\t\tconst percent = (this.state.currentGroupIndex / this.state.groups.length) * 100;\n\t\t\tprogressEl.textContent = `進行: ${this.state.currentGroupIndex}/${this.state.groups.length} (${percent.toFixed(0)}%)`;\n\t\t\tprogressBar.style.width = `${percent}%`;\n\t\t}\n\n\t\tthis.updatePlaybackButtons();\n\t}\n\n\tprivate updatePlaybackButtons(): void {\n\t\tconst playBtn = document.getElementById('playBtn') as HTMLButtonElement;\n\t\tconst pauseBtn = document.getElementById('pauseBtn') as HTMLButtonElement;\n\n\t\tif (playBtn && pauseBtn) {\n\t\t\tif (this.state.isPlaying) {\n\t\t\t\tplayBtn.disabled = true;\n\t\t\t\tpauseBtn.disabled = false;\n\t\t\t} else {\n\t\t\t\tplayBtn.disabled = false;\n\t\t\t\tpauseBtn.disabled = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t//! ========== カスタムモード管理 ==========\n\n\tprivate async startCustom(): Promise<void> {\n\t\tconst chars = Array.from(this.customState.selectedChars);\n\t\tconst practiceSettings: PracticeSettings = {\n\t\t\tgroupSize: this.settings.groupSize,\n\t\t\tduration: this.settings.practiceDuration,\n\t\t\twpm: this.settings.characterSpeed\n\t\t};\n\t\tthis.customState.customGroups = KochTrainer.generateRandomGroups(chars, practiceSettings);\n\t\tthis.customState.customCurrentGroupIndex = 0;\n\t\tthis.customState.customUserInput = '';\n\t\tthis.customState.customCorrectAnswer = this.customState.customGroups.join('');\n\t\tthis.customState.customIsPlaying = false;\n\t\tthis.customState.isCustomRunning = true;\n\n\t\t//! AudioGeneratorの設定を更新。\n\t\tthis.audio.updateSettings({\n\t\t\tfrequency: this.settings.frequency,\n\t\t\tvolume: this.settings.volume,\n\t\t\twpm: this.settings.characterSpeed,\n\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t});\n\n\t\tthis.render();\n\t\tthis.renderCustomPractice();\n\t}\n\n\tprivate async playCustomMorse(): Promise<void> {\n\t\tif (this.customState.customIsPlaying) return;\n\n\t\tthis.customState.customIsPlaying = true;\n\t\tthis.customState.customCurrentGroupIndex = 0;\n\t\tthis.updateCustomProgress();\n\t\tthis.updateCustomPlaybackButtons();\n\n\t\t//! モールス信号を再生。\n\t\tfor (let i = 0; i < this.customState.customGroups.length && this.customState.customIsPlaying; i++) {\n\t\t\tconst group = this.customState.customGroups[i];\n\t\t\tconst morse = MorseCodec.textToMorse(group);\n\t\t\tawait this.audio.playMorseString(morse + ' /');\n\n\t\t\tthis.customState.customCurrentGroupIndex = i + 1;\n\t\t\tthis.updateCustomProgress();\n\t\t}\n\n\t\tthis.customState.customIsPlaying = false;\n\t\tthis.updateCustomPlaybackButtons();\n\t}\n\n\tprivate pauseCustomMorse(): void {\n\t\tthis.customState.customIsPlaying = false;\n\t\tthis.audio.stopPlaying();\n\t\tthis.updateCustomPlaybackButtons();\n\t}\n\n\tprivate stopCustom(): void {\n\t\tthis.customState.customIsPlaying = false;\n\t\tthis.audio.stopPlaying();\n\t\tthis.customState.isCustomRunning = false;\n\t\tthis.render();\n\t}\n\n\tprivate updateCustomProgress(): void {\n\t\tconst progressEl = document.getElementById('customProgress');\n\t\tconst progressBar = document.getElementById('customProgressBar');\n\n\t\tif (progressEl && progressBar) {\n\t\t\tconst percent = (this.customState.customCurrentGroupIndex / this.customState.customGroups.length) * 100;\n\t\t\tprogressEl.textContent = `進行: ${this.customState.customCurrentGroupIndex}/${this.customState.customGroups.length} (${percent.toFixed(0)}%)`;\n\t\t\tprogressBar.style.width = `${percent}%`;\n\t\t}\n\n\t\tthis.updateCustomPlaybackButtons();\n\t}\n\n\tprivate updateCustomPlaybackButtons(): void {\n\t\tconst playBtn = document.getElementById('customPlayBtn') as HTMLButtonElement;\n\t\tconst pauseBtn = document.getElementById('customPauseBtn') as HTMLButtonElement;\n\n\t\tif (playBtn && pauseBtn) {\n\t\t\tif (this.customState.customIsPlaying) {\n\t\t\t\tplayBtn.disabled = true;\n\t\t\t\tpauseBtn.disabled = false;\n\t\t\t} else {\n\t\t\t\tplayBtn.disabled = false;\n\t\t\t\tpauseBtn.disabled = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate showCustomResult(): void {\n\t\tconst resultContainer = document.getElementById('customResultContainer');\n\t\tif (!resultContainer) return;\n\n\t\t//! lib側の関数を使用して正答率を計算。\n\t\tconst accuracy = KochTrainer.calculateAccuracy(\n\t\t\tthis.customState.customCorrectAnswer,\n\t\t\tthis.customState.customUserInput\n\t\t);\n\n\t\tconst userAnswer = this.customState.customUserInput.replace(/\\s+/g, '');\n\t\tconst correctAnswer = this.customState.customCorrectAnswer.replace(/\\s+/g, '');\n\n\t\tresultContainer.innerHTML = `\n\t\t\t<div class=\"result\">\n\t\t\t\t<h2>練習結果</h2>\n\t\t\t\t<div class=\"accuracy\">正答率: ${accuracy}%</div>\n\t\t\t\t<div class=\"comparison\">\n\t\t\t\t\t<div>送信: ${correctAnswer}</div>\n\t\t\t\t\t<div>あなたの入力: ${userAnswer}</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"actions\">\n\t\t\t\t\t<button id=\"retryCustomBtn\" class=\"btn\">もう一度</button>\n\t\t\t\t\t<button id=\"backToCustomMenuBtn\" class=\"btn primary\">戻る</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tdocument.getElementById('retryCustomBtn')?.addEventListener('click', () => {\n\t\t\tthis.customState.isCustomRunning = false;\n\t\t\tthis.render();\n\t\t\tthis.startCustom();\n\t\t});\n\n\t\tdocument.getElementById('backToCustomMenuBtn')?.addEventListener('click', () => {\n\t\t\tthis.customState.isCustomRunning = false;\n\t\t\tthis.render();\n\t\t});\n\t}\n\n\t//! ========== 設定モーダル ==========\n\n\tprivate showSettings(): void {\n\t\t//! 現在の設定値を取得（volumeを0-100の範囲に変換）。\n\t\tconst currentValues: SettingValues = {\n\t\t\tvolume: Math.round(this.settings.volume * 100),\n\t\t\tfrequency: this.settings.frequency,\n\t\t\twpm: this.settings.characterSpeed,\n\t\t\tcharacterSpeed: this.settings.characterSpeed,\n\t\t\teffectiveSpeed: this.settings.effectiveSpeed,\n\t\t\tpracticeDuration: this.settings.practiceDuration,\n\t\t\tgroupSize: this.settings.groupSize,\n\t\t\tshowInput: this.settings.showInput\n\t\t};\n\n\t\t//! 設定変更前の値を保存（キャンセル時の復元用）。\n\t\tconst savedSettings = { ...this.settings };\n\n\t\t//! SettingsModalを作成。\n\t\tconst modal = new SettingsModal(\n\t\t\t'koch-settings-modal',\n\t\t\tALL_SETTING_ITEMS,\n\t\t\tcurrentValues,\n\t\t\t{\n\t\t\t\tonSave: (values: SettingValues) => {\n\t\t\t\t\t//! 実効速度は文字速度を上限とする。\n\t\t\t\t\tlet effSpeed = values.effectiveSpeed as number;\n\t\t\t\t\tconst charSpeed = values.characterSpeed as number;\n\t\t\t\t\tif (effSpeed > charSpeed) {\n\t\t\t\t\t\teffSpeed = charSpeed;\n\t\t\t\t\t}\n\n\t\t\t\t\t//! 設定を保存。\n\t\t\t\t\tthis.settings.characterSpeed = charSpeed;\n\t\t\t\t\tthis.settings.effectiveSpeed = effSpeed;\n\t\t\t\t\tthis.settings.frequency = values.frequency as number;\n\t\t\t\t\tthis.settings.volume = (values.volume as number) / 100;\n\t\t\t\t\tthis.settings.practiceDuration = values.practiceDuration as number;\n\t\t\t\t\tthis.settings.groupSize = values.groupSize as number;\n\t\t\t\t\tthis.settings.showInput = values.showInput as boolean;\n\n\t\t\t\t\tthis.saveSettings();\n\n\t\t\t\t\t//! AudioGeneratorを更新。\n\t\t\t\t\tthis.audio.updateSettings({\n\t\t\t\t\t\tfrequency: this.settings.frequency,\n\t\t\t\t\t\tvolume: this.settings.volume,\n\t\t\t\t\t\twpm: this.settings.characterSpeed,\n\t\t\t\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t\t\t\t});\n\n\t\t\t\t\t//! 練習中の場合、表示を更新。\n\t\t\t\t\tif (this.state.groups.length > 0) {\n\t\t\t\t\t\tthis.renderPractice();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonCancel: () => {\n\t\t\t\t\t//! 設定を元に戻す。\n\t\t\t\t\tthis.settings = { ...savedSettings };\n\t\t\t\t\tthis.audio.updateSettings({\n\t\t\t\t\t\tfrequency: savedSettings.frequency,\n\t\t\t\t\t\tvolume: savedSettings.volume,\n\t\t\t\t\t\twpm: savedSettings.characterSpeed,\n\t\t\t\t\t\teffectiveWpm: savedSettings.effectiveSpeed\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t//! モーダルを表示。\n\t\tmodal.show('koch');\n\t}\n\n\t//! ========== レンダリング ==========\n\n\trender(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"settings-icon\" id=\"settingsIcon\">\n\t\t\t\t<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<button class=\"back-btn\" id=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t<h1>コッホ法トレーニング</h1>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"tabs\">\n\t\t\t\t\t<button class=\"tab-button ${this.viewMode === 'learning' ? 'active' : ''}\" data-tab=\"learning\">基本学習</button>\n\t\t\t\t\t<button class=\"tab-button ${this.viewMode === 'custom' ? 'active' : ''}\" data-tab=\"custom\">任意文字列練習</button>\n\t\t\t\t</div>\n\n\t\t\t\t${this.renderModeContent()}\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachEventListeners();\n\t}\n\n\tprivate renderModeContent(): string {\n\t\tswitch (this.viewMode) {\n\t\t\tcase 'learning':\n\t\t\t\treturn this.renderLearningMode();\n\t\t\tcase 'custom':\n\t\t\t\treturn this.renderCustomMode();\n\t\t\tdefault:\n\t\t\t\treturn this.renderLearningMode();\n\t\t}\n\t}\n\n\tprivate renderLearningMode(): string {\n\t\tconst chars = KochTrainer.getCharsForLesson(this.state.currentLesson);\n\t\tconst lessonList = KOCH_SEQUENCE.slice(0, 40).map((_, index) => {\n\t\t\tconst lessonNum = index + 1;\n\t\t\tconst lessonChars = KochTrainer.getCharsForLesson(lessonNum);\n\t\t\tconst isCurrent = lessonNum === this.state.currentLesson;\n\t\t\tconst isPassed = lessonNum < this.state.currentLesson;\n\t\t\treturn `\n\t\t\t\t<div class=\"lesson-item ${isCurrent ? 'current' : ''} ${isPassed ? 'passed' : ''}\" data-lesson=\"${lessonNum}\">\n\t\t\t\t\t<div class=\"lesson-num\">L${lessonNum}</div>\n\t\t\t\t\t<div class=\"lesson-chars\">${lessonChars.join('')}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}).join('');\n\n\t\treturn `\n\t\t\t<div class=\"flashcard-container\">\n\t\t\t\t<div class=\"lesson-info\">\n\t\t\t\t\t<h2>レッスン ${this.state.currentLesson} / 40</h2>\n\t\t\t\t\t<div class=\"chars\">学習文字: ${chars.join('')}</div>\n\t\t\t\t\t<button id=\"startBtn\" class=\"btn btn-primary\">練習開始</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"practiceContainer\"></div>\n\t\t\t\t<div id=\"resultContainer\"></div>\n\n\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t<h3>使い方</h3>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>「練習開始」をクリックしてモールス信号を聞く</li>\n\t\t\t\t\t\t<li>聞こえた文字を入力</li>\n\t\t\t\t\t\t<li>90%以上の正答率で次のレッスンへ</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"lesson-list-section\">\n\t\t\t\t\t<h3>レッスン一覧</h3>\n\t\t\t\t\t<div class=\"lesson-list\">\n\t\t\t\t\t\t${lessonList}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tprivate renderCustomMode(): string {\n\t\tif (!this.customState.isCustomRunning) {\n\t\t\t//! 文字選択画面。\n\t\t\tconst charButtons = KOCH_SEQUENCE.map(char => `\n\t\t\t\t<button class=\"char-select-btn ${this.customState.selectedChars.has(char) ? 'selected' : ''}\" data-char=\"${char}\">\n\t\t\t\t\t${char}\n\t\t\t\t</button>\n\t\t\t`).join('');\n\n\t\t\treturn `\n\t\t\t\t<div class=\"flashcard-container\">\n\t\t\t\t\t<div class=\"lesson-info\">\n\t\t\t\t\t\t<h2>任意文字列練習モード</h2>\n\t\t\t\t\t\t<p>練習したい文字を選択してください（最低2文字）</p>\n\t\t\t\t\t\t<div class=\"char-selection\">\n\t\t\t\t\t\t\t${charButtons}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button id=\"startCustomBtn\" class=\"btn btn-primary\" ${this.customState.selectedChars.size < 2 ? 'disabled' : ''}>練習開始</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t\t<h3>使い方</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>練習したい文字をクリックして選択</li>\n\t\t\t\t\t\t\t<li>2文字以上選択すると練習開始可能</li>\n\t\t\t\t\t\t\t<li>選択した文字のみでランダムな練習問題が生成されます</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t} else {\n\t\t\t//! 練習実行画面。\n\t\t\treturn `\n\t\t\t\t<div class=\"flashcard-container\">\n\t\t\t\t\t<div id=\"customPracticeContainer\"></div>\n\t\t\t\t\t<div id=\"customResultContainer\"></div>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\t}\n\n\tprivate renderPractice(): void {\n\t\tconst practiceContainer = document.getElementById('practiceContainer');\n\t\tif (!practiceContainer) return;\n\n\t\tconst chars = KochTrainer.getCharsForLesson(this.state.currentLesson);\n\n\t\tpracticeContainer.innerHTML = `\n\t\t\t<div class=\"practice-area\">\n\t\t\t\t<div class=\"progress-section\">\n\t\t\t\t\t<div class=\"progress-bar-container\">\n\t\t\t\t\t\t<div id=\"progressBar\" class=\"progress-bar\" style=\"width: 0%\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"lessonProgress\" class=\"progress-text\">準備完了 - 再生ボタンを押してください</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"playback-controls\">\n\t\t\t\t\t<button id=\"playBtn\" class=\"control-btn\" title=\"再生\">\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M8 5v14l11-7z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"pauseBtn\" class=\"control-btn\" title=\"一時停止\" disabled>\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M6 4h4v16H6V4zm8 0h4v16h-4V4z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"stopBtn\" class=\"control-btn\" title=\"停止\">\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<rect x=\"6\" y=\"6\" width=\"12\" height=\"12\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<textarea id=\"userInput\" class=\"input-area\" placeholder=\"聞こえた文字を入力...\" ${this.settings.showInput ? '' : 'style=\"opacity: 0.3; pointer-events: none;\"'}></textarea>\n\t\t\t\t${this.renderKeyboard(chars)}\n\t\t\t</div>\n\t\t`;\n\n\t\tconst inputEl = document.getElementById('userInput') as HTMLTextAreaElement;\n\t\tif (inputEl) {\n\t\t\tinputEl.addEventListener('input', (e) => {\n\t\t\t\tthis.state.userInput = (e.target as HTMLTextAreaElement).value.toUpperCase();\n\t\t\t});\n\t\t}\n\n\t\tdocument.getElementById('playBtn')?.addEventListener('click', () => {\n\t\t\tthis.playMorse();\n\t\t});\n\n\t\tdocument.getElementById('pauseBtn')?.addEventListener('click', () => {\n\t\t\tthis.pauseMorse();\n\t\t});\n\n\t\tdocument.getElementById('stopBtn')?.addEventListener('click', () => {\n\t\t\tthis.stopLesson();\n\t\t});\n\n\t\t//! キーボードボタンのイベント設定。\n\t\tthis.setupKeyboardEvents(chars);\n\t\tthis.updatePlaybackButtons();\n\t}\n\n\tprivate renderCustomPractice(): void {\n\t\tconst container = document.getElementById('customPracticeContainer');\n\t\tif (!container) return;\n\n\t\tcontainer.innerHTML = `\n\t\t\t<div class=\"practice-area\">\n\t\t\t\t<div class=\"progress-section\">\n\t\t\t\t\t<div class=\"progress-bar-container\">\n\t\t\t\t\t\t<div id=\"customProgressBar\" class=\"progress-bar\" style=\"width: 0%\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"customProgress\" class=\"progress-text\">準備完了 - 再生ボタンを押してください</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"playback-controls\">\n\t\t\t\t\t<button id=\"customPlayBtn\" class=\"control-btn\" title=\"再生\">\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M8 5v14l11-7z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"customPauseBtn\" class=\"control-btn\" title=\"一時停止\" disabled>\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M6 4h4v16H6V4zm8 0h4v16h-4V4z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"customStopBtn\" class=\"control-btn\" title=\"停止\">\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<rect x=\"6\" y=\"6\" width=\"12\" height=\"12\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t${this.settings.showInput ? `\n\t\t\t\t\t<textarea id=\"customInputArea\" class=\"input-area\" placeholder=\"聞こえた文字を入力してください...\"></textarea>\n\t\t\t\t` : ''}\n\n\t\t\t\t<button id=\"customEndBtn\" class=\"btn btn-primary\">結果を見る</button>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.setupCustomControls();\n\t}\n\n\tprivate renderKeyboard(availableChars: string[]): string {\n\t\tconst groups: string[][] = [];\n\n\t\t//! KOCH_SEQUENCEをgroupSizeごとに分割。\n\t\tfor (let i = 0; i < KOCH_SEQUENCE.length; i += this.settings.groupSize) {\n\t\t\tgroups.push(KOCH_SEQUENCE.slice(i, i + this.settings.groupSize));\n\t\t}\n\n\t\treturn `\n\t\t\t<div class=\"keyboard\">\n\t\t\t\t<div class=\"keyboard-header\">\n\t\t\t\t\t<small>グループベースキーボード（学習済み文字のみ有効）</small>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"keyboard-controls\">\n\t\t\t\t\t<button id=\"spaceBtn\" class=\"key-btn special\">スペース</button>\n\t\t\t\t\t<button id=\"backspaceBtn\" class=\"key-btn special\">1字削除</button>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"keyboard-groups-wrapper\">\n\t\t\t\t\t<div class=\"keyboard-groups\">\n\t\t\t\t\t\t${groups.map((group, groupIndex) => `\n\t\t\t\t\t\t\t<div class=\"keyboard-group\">\n\t\t\t\t\t\t\t\t<div class=\"group-label\">G${groupIndex + 1}</div>\n\t\t\t\t\t\t\t\t<div class=\"group-keys\">\n\t\t\t\t\t\t\t\t\t${group.map(char => {\n\t\t\t\t\t\t\t\t\t\tconst isLearned = availableChars.includes(char);\n\t\t\t\t\t\t\t\t\t\treturn `\n\t\t\t\t\t\t\t\t\t\t\t<button class=\"key-btn ${isLearned ? '' : 'disabled'}\"\n\t\t\t\t\t\t\t\t\t\t\t        data-char=\"${char}\"\n\t\t\t\t\t\t\t\t\t\t\t        ${isLearned ? '' : 'disabled'}>\n\t\t\t\t\t\t\t\t\t\t\t\t${char}\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t`;\n\t\t\t\t\t\t\t\t\t}).join('')}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t`).join('')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tprivate setupKeyboardEvents(availableChars: string[]): void {\n\t\tconst inputEl = document.getElementById('userInput') as HTMLTextAreaElement;\n\t\tif (!inputEl) return;\n\n\t\t//! 文字キー。\n\t\tdocument.querySelectorAll('.key-btn:not(.special)').forEach(btn => {\n\t\t\tbtn.addEventListener('click', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tconst char = (e.target as HTMLButtonElement).getAttribute('data-char');\n\t\t\t\tif (char && availableChars.includes(char)) {\n\t\t\t\t\tinputEl.value += char;\n\t\t\t\t\tthis.state.userInput = inputEl.value.toUpperCase();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! スペースキー。\n\t\tdocument.getElementById('spaceBtn')?.addEventListener('click', (e) => {\n\t\t\te.preventDefault();\n\t\t\tinputEl.value += ' ';\n\t\t\tthis.state.userInput = inputEl.value.toUpperCase();\n\t\t});\n\n\t\t//! バックスペースキー。\n\t\tdocument.getElementById('backspaceBtn')?.addEventListener('click', (e) => {\n\t\t\te.preventDefault();\n\t\t\tinputEl.value = inputEl.value.slice(0, -1);\n\t\t\tthis.state.userInput = inputEl.value.toUpperCase();\n\t\t});\n\t}\n\n\tprivate setupCustomControls(): void {\n\t\t//! 入力欄のイベントリスナー。\n\t\tconst inputEl = document.getElementById('customInputArea') as HTMLTextAreaElement;\n\t\tif (inputEl) {\n\t\t\tinputEl.addEventListener('input', (e) => {\n\t\t\t\tthis.customState.customUserInput = (e.target as HTMLTextAreaElement).value.toUpperCase();\n\t\t\t});\n\t\t}\n\n\t\tdocument.getElementById('customPlayBtn')?.addEventListener('click', () => {\n\t\t\tthis.playCustomMorse();\n\t\t});\n\n\t\tdocument.getElementById('customPauseBtn')?.addEventListener('click', () => {\n\t\t\tthis.pauseCustomMorse();\n\t\t});\n\n\t\tdocument.getElementById('customStopBtn')?.addEventListener('click', () => {\n\t\t\tthis.stopCustom();\n\t\t});\n\n\t\tdocument.getElementById('customEndBtn')?.addEventListener('click', () => {\n\t\t\tthis.showCustomResult();\n\t\t});\n\n\t\tthis.updateCustomPlaybackButtons();\n\t}\n\n\tprivate attachEventListeners(): void {\n\t\t//! 戻るボタン。\n\t\tdocument.getElementById('back-btn')?.addEventListener('click', () => {\n\t\t\twindow.location.hash = '#menu';\n\t\t});\n\n\t\t//! 設定アイコン。\n\t\tdocument.getElementById('settingsIcon')?.addEventListener('click', () => {\n\t\t\tthis.showSettings();\n\t\t});\n\n\t\t//! タブボタン。\n\t\tdocument.querySelectorAll('.tab-button').forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst tab = btn.getAttribute('data-tab') as ViewMode;\n\t\t\t\tif (tab) {\n\t\t\t\t\tthis.viewMode = tab;\n\t\t\t\t\tthis.saveViewMode();\n\t\t\t\t\tthis.render();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! モード別のイベントリスナーを設定。\n\t\tthis.setupModeEventListeners();\n\t}\n\n\tprivate setupModeEventListeners(): void {\n\t\tif (this.viewMode === 'learning') {\n\t\t\tdocument.getElementById('startBtn')?.addEventListener('click', () => {\n\t\t\t\tthis.startLesson();\n\t\t\t});\n\n\t\t\t//! レッスンアイテムのクリックイベント。\n\t\t\tdocument.querySelectorAll('.lesson-item').forEach(item => {\n\t\t\t\titem.addEventListener('click', () => {\n\t\t\t\t\tconst lessonNum = parseInt(item.getAttribute('data-lesson') || '1', 10);\n\t\t\t\t\tthis.state.currentLesson = lessonNum;\n\t\t\t\t\tthis.saveProgress();\n\t\t\t\t\tthis.render();\n\t\t\t\t\twindow.scrollTo({ top: 0, behavior: 'smooth' });\n\t\t\t\t});\n\t\t\t});\n\t\t} else if (this.viewMode === 'custom') {\n\t\t\tif (!this.customState.isCustomRunning) {\n\t\t\t\tdocument.getElementById('startCustomBtn')?.addEventListener('click', () => {\n\t\t\t\t\tthis.startCustom();\n\t\t\t\t});\n\n\t\t\t\t//! 文字選択ボタン。\n\t\t\t\tdocument.querySelectorAll('.char-select-btn').forEach(btn => {\n\t\t\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\t\t\tconst char = btn.getAttribute('data-char');\n\t\t\t\t\t\tif (char) {\n\t\t\t\t\t\t\tif (this.customState.selectedChars.has(char)) {\n\t\t\t\t\t\t\t\tthis.customState.selectedChars.delete(char);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.customState.selectedChars.add(char);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.saveSelectedChars();\n\t\t\t\t\t\t\tthis.render();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy(): void {\n\t\t//! 音声を停止。\n\t\tthis.audio.stopPlaying();\n\t}\n}\n","/**\n * 聞き取り練習ビュー\n */\n\nimport type { View } from '../../router';\nimport {\n\tListeningTrainer,\n\tAudioGenerator,\n\tMorseCodec,\n\ttype ListeningTemplate,\n\ttype TemplateCategory\n} from 'morse-engine';\nimport { downloadBlob, sanitizeFilename } from '../../utils/download-helper';\nimport { SettingsModal, ALL_SETTING_ITEMS, type SettingValues } from 'morse-engine';\n\ninterface ListeningSettings {\n\tcharacterSpeed: number;\n\teffectiveSpeed: number;\n\tfrequency: number;\n\tbFrequency: number;  // B側（相手方）の周波数\n\tvolume: number;\n}\n\nconst DEFAULT_SETTINGS: ListeningSettings = {\n\tcharacterSpeed: 20,\n\teffectiveSpeed: 15,\n\tfrequency: 700,\n\tbFrequency: 600,  // B側のデフォルト周波数\n\tvolume: 0.7\n};\n\ninterface State {\n\tcurrentCategory: TemplateCategory | 'custom';\n\tselectedTemplate: ListeningTemplate | null;\n\tisPlaying: boolean;\n\tisPaused: boolean;  // 一時停止中かどうか\n\tuserInput: string;\n\tshowResult: boolean;\n\tshowAnswer: boolean;\n\tshowDialogFormat: boolean;\n\tcurrentPlayingWordIndex: number;  // 現在再生中の単語のインデックス（-1は再生中でない）\n\tcurrentPlayingSegmentIndex: number;  // 現在再生中のセグメントのインデックス（-1は再生中でない）\n\tpausedWordIndex: number;  // 一時停止時の単語インデックス（-1は停止状態）\n\tpausedSegmentIndex: number;  // 一時停止時のセグメントインデックス（-1は停止状態）\n}\n\n/**\n * 聞き取り練習ビュークラス\n */\nexport class ListeningView implements View {\n\tprivate audio: AudioGenerator;  // A側（自局）のAudioGenerator\n\tprivate audioB: AudioGenerator;  // B側（相手方）のAudioGenerator\n\tprivate settings: ListeningSettings = { ...DEFAULT_SETTINGS };\n\n\tprivate state: State = {\n\t\tcurrentCategory: 'qso',\n\t\tselectedTemplate: null,\n\t\tisPlaying: false,\n\t\tisPaused: false,\n\t\tuserInput: '',\n\t\tshowResult: false,\n\t\tshowAnswer: false,\n\t\tshowDialogFormat: false,\n\t\tcurrentPlayingWordIndex: -1,\n\t\tcurrentPlayingSegmentIndex: -1,\n\t\tpausedWordIndex: -1,\n\t\tpausedSegmentIndex: -1\n\t};\n\n\tprivate customTemplates: ListeningTemplate[] = [];\n\n\tconstructor() {\n\t\t//! 設定を読み込む。\n\t\tthis.loadSettings();\n\t\tthis.loadCategory();\n\t\tthis.loadCustomTemplates();\n\n\t\t//! A側のAudioGeneratorを初期化。\n\t\tthis.audio = new AudioGenerator({\n\t\t\tfrequency: this.settings.frequency,\n\t\t\tvolume: this.settings.volume,\n\t\t\twpm: this.settings.characterSpeed,\n\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t});\n\n\t\t//! B側のAudioGeneratorを初期化。\n\t\tthis.audioB = new AudioGenerator({\n\t\t\tfrequency: this.settings.bFrequency,\n\t\t\tvolume: this.settings.volume,\n\t\t\twpm: this.settings.characterSpeed,\n\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t});\n\t}\n\n\t//! ========== 設定管理 ==========\n\n\tprivate loadSettings(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.listening.settings');\n\t\t\tif (saved) {\n\t\t\t\tthis.settings = { ...DEFAULT_SETTINGS, ...JSON.parse(saved) };\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load settings:', error);\n\t\t}\n\t}\n\n\tprivate saveSettings(): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem('v10.listening.settings', JSON.stringify(this.settings));\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save settings:', error);\n\t\t}\n\t}\n\n\tprivate loadCategory(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.listening.category') as TemplateCategory | 'custom' | null;\n\t\t\tif (saved && ['qso', 'text100', 'text200', 'text300', 'custom'].includes(saved)) {\n\t\t\t\tthis.state.currentCategory = saved;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load category:', error);\n\t\t}\n\t}\n\n\tprivate saveCategory(): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem('v10.listening.category', this.state.currentCategory);\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save category:', error);\n\t\t}\n\t}\n\n\tprivate loadCustomTemplates(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.listening.customTemplates');\n\t\t\tif (saved) {\n\t\t\t\tthis.customTemplates = JSON.parse(saved);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load custom templates:', error);\n\t\t}\n\t}\n\n\tprivate saveCustomTemplates(): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem('v10.listening.customTemplates', JSON.stringify(this.customTemplates));\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save custom templates:', error);\n\t\t}\n\t}\n\n\t//! ========== テンプレート管理 ==========\n\n\tprivate getTemplates(): ListeningTemplate[] {\n\t\tif (this.state.currentCategory === 'custom') {\n\t\t\t//! ランダムQSO生成ボタンを追加。\n\t\t\tconst randomButton: ListeningTemplate = {\n\t\t\t\tid: 'qso-random-generate',\n\t\t\t\tcategory: 'qso',\n\t\t\t\ttitle: 'ランダムQSO生成',\n\t\t\t\tcontent: ''\n\t\t\t};\n\t\t\treturn [randomButton, ...this.customTemplates];\n\t\t} else {\n\t\t\tconst builtin = ListeningTrainer.getBuiltinTemplates(this.state.currentCategory);\n\t\t\t//! QSOカテゴリーにはランダムQSO生成ボタンを追加。\n\t\t\tif (this.state.currentCategory === 'qso') {\n\t\t\t\tconst randomButton: ListeningTemplate = {\n\t\t\t\t\tid: 'qso-random-generate',\n\t\t\t\t\tcategory: 'qso',\n\t\t\t\t\ttitle: 'ランダムQSO生成',\n\t\t\t\t\tcontent: ''\n\t\t\t\t};\n\t\t\t\treturn [randomButton, ...builtin];\n\t\t\t}\n\t\t\treturn builtin;\n\t\t}\n\t}\n\n\t//! ========== 再生制御 ==========\n\n\tprivate async playMorse(): Promise<void> {\n\t\tif (!this.state.selectedTemplate || this.state.isPlaying) return;\n\n\t\tthis.state.isPlaying = true;\n\t\tthis.state.isPaused = false;\n\t\tthis.updatePlaybackButtons();\n\n\t\ttry {\n\t\t\t//! テンプレートに応じて再生（dialogがあればA/B交互、なければcontentを再生）。\n\t\t\tif (this.state.selectedTemplate.dialog && this.state.selectedTemplate.dialog.length > 0) {\n\t\t\t\t//! 対話形式で再生（A側とB側を交互に再生）。\n\t\t\t\t//! 一時停止位置から再開する場合は、その位置から開始。\n\t\t\t\tconst startSegmentIndex = this.state.pausedSegmentIndex >= 0 ? this.state.pausedSegmentIndex : 0;\n\t\t\t\tconst startWordIndex = this.state.pausedWordIndex >= 0 ? this.state.pausedWordIndex : 0;\n\t\t\t\tawait this.playDialogQSO(this.state.selectedTemplate, startSegmentIndex, startWordIndex);\n\t\t\t} else if (this.state.selectedTemplate.content) {\n\t\t\t\t//! 通常モードで再生（単語単位でA側で再生）。\n\t\t\t\t//! 一時停止位置から再開する場合は、その位置から開始。\n\t\t\t\tconst startWordIndex = this.state.pausedWordIndex >= 0 ? this.state.pausedWordIndex : 0;\n\t\t\t\tawait this.playTextWordByWord(this.state.selectedTemplate.content, this.audio, startWordIndex);\n\t\t\t}\n\t\t} finally {\n\t\t\t//! 再生完了時は一時停止位置をクリア。\n\t\t\tif (!this.state.isPaused) {\n\t\t\t\tthis.state.pausedWordIndex = -1;\n\t\t\t\tthis.state.pausedSegmentIndex = -1;\n\t\t\t}\n\t\t\tthis.state.isPlaying = false;\n\t\t\tthis.updatePlaybackButtons();\n\t\t}\n\t}\n\n\t/**\n\t * テンプレートからテキストを取得する\n\t * @param template - テンプレート\n\t * @returns 表示用テキスト\n\t */\n\tprivate getTemplateText(template: ListeningTemplate): string {\n\t\tif (template.dialog && template.dialog.length > 0) {\n\t\t\treturn template.dialog.map(seg => seg.text).join(' BT ');\n\t\t}\n\t\treturn template.content || '';\n\t}\n\n\t/**\n\t * テキストを単語単位で再生する\n\t * 各単語の再生前に停止フラグをチェックし、停止が要求されていれば中断する\n\t * @param text - 再生するテキスト\n\t * @param generator - 使用するAudioGenerator\n\t * @param startWordIndex - 開始する単語のインデックス（デフォルト: 0）\n\t */\n\tprivate async playTextWordByWord(text: string, generator: AudioGenerator, startWordIndex: number = 0): Promise<void> {\n\t\t//! テキストを単語に分割（空白文字で分割）。\n\t\tconst words = text.trim().split(/\\s+/).filter(w => w.length > 0);\n\n\t\t//! どちらのgeneratorか識別。\n\t\tconst generatorName = generator === this.audio ? 'A' : 'B';\n\n\t\t//! 各単語を順番に再生（開始位置から）。\n\t\tfor (let i = startWordIndex; i < words.length; i++) {\n\t\t\t//! 停止フラグをチェック。\n\t\t\tif (!this.state.isPlaying) {\n\t\t\t\t//! 一時停止の場合は、次の単語のインデックスを保存。\n\t\t\t\tif (this.state.isPaused) {\n\t\t\t\t\tthis.state.pausedWordIndex = i;\n\t\t\t\t\t//! 一時停止時は現在の単語表示を維持。\n\t\t\t\t} else {\n\t\t\t\t\tthis.state.currentPlayingWordIndex = -1;\n\t\t\t\t\tthis.renderAnswer();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//! 現在再生中の単語インデックスを更新。\n\t\t\tthis.state.currentPlayingWordIndex = i;\n\t\t\tthis.renderAnswer();\n\n\t\t\tconst word = words[i];\n\t\t\tconst morse = MorseCodec.textToMorse(word);\n\n\t\t\tconsole.log(`[DEBUG] Playing word \"${word}\" with generator ${generatorName}`);\n\t\t\tconst success = await generator.playMorseString(morse);\n\n\t\t\t//! 再生が拒否された場合（前の再生がまだ終わっていない）、警告を出力。\n\t\t\tif (!success) {\n\t\t\t\tconsole.warn(`[WARN] Failed to play word \"${word}\" with generator ${generatorName} (generator busy)`);\n\t\t\t}\n\n\t\t\t//! 単語間に短い間隔を入れる（最後の単語以外）。\n\t\t\t//! この待機時間でgeneratorのisPlayingフラグがfalseに戻る時間を確保する。\n\t\t\tif (i < words.length - 1) {\n\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 150));\n\t\t\t}\n\t\t}\n\n\t\t//! 再生完了後、インデックスをリセット（一時停止でない場合のみ）。\n\t\tif (!this.state.isPaused) {\n\t\t\tthis.state.currentPlayingWordIndex = -1;\n\t\t\tthis.renderAnswer();\n\t\t}\n\t}\n\n\t/**\n\t * 対話形式のQSOを再生する\n\t * A側とB側を交互に異なる周波数で再生\n\t * 単語単位で再生し、途中で停止可能\n\t * @param template - 再生するテンプレート\n\t * @param startSegmentIndex - 開始するセグメントのインデックス（デフォルト: 0）\n\t * @param startWordIndex - 開始する単語のインデックス（デフォルト: 0）\n\t */\n\tprivate async playDialogQSO(template: ListeningTemplate, startSegmentIndex: number = 0, startWordIndex: number = 0): Promise<void> {\n\t\t//! dialogがない場合（テキストカテゴリ）はcontentを再生。\n\t\tif (!template.dialog || template.dialog.length === 0) {\n\t\t\tif (template.content) {\n\t\t\t\tawait this.playTextWordByWord(template.content, this.audio, startWordIndex);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t//! 各セグメントを交互にA側とB側で再生（開始位置から）。\n\t\tfor (let i = startSegmentIndex; i < template.dialog.length; i++) {\n\t\t\t//! 停止フラグをチェック。\n\t\t\tif (!this.state.isPlaying) {\n\t\t\t\t//! 一時停止の場合は、セグメントインデックスを保存。\n\t\t\t\tif (this.state.isPaused) {\n\t\t\t\t\tthis.state.pausedSegmentIndex = i;\n\t\t\t\t\t//! 一時停止時は現在のセグメント表示を維持。\n\t\t\t\t} else {\n\t\t\t\t\tthis.state.currentPlayingSegmentIndex = -1;\n\t\t\t\t\tthis.renderAnswer();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//! 現在再生中のセグメントインデックスを更新。\n\t\t\tthis.state.currentPlayingSegmentIndex = i;\n\n\t\t\tconst segment = template.dialog[i];\n\t\t\t//! A側またはB側のAudioGeneratorを選択。\n\t\t\tconst generator = segment.side === 'A' ? this.audio : this.audioB;\n\n\t\t\tconsole.log(`[DEBUG] Segment ${i}: side=${segment.side}, text=\"${segment.text.substring(0, 50)}...\"`);\n\n\t\t\t//! セグメントのテキストを単語単位で再生。\n\t\t\t//! 最初のセグメントの場合は、startWordIndexから開始。\n\t\t\tconst wordStartIndex = (i === startSegmentIndex) ? startWordIndex : 0;\n\t\t\tawait this.playTextWordByWord(segment.text, generator, wordStartIndex);\n\n\t\t\t//! 一時停止された場合は、ここで終了。\n\t\t\tif (!this.state.isPlaying) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//! セグメント間に短い間隔を入れる。\n\t\t\tif (i < template.dialog.length - 1 && this.state.isPlaying) {\n\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 500));\n\t\t\t}\n\t\t}\n\n\t\t//! 再生完了後、インデックスをリセット（一時停止でない場合のみ）。\n\t\tif (!this.state.isPaused) {\n\t\t\tthis.state.currentPlayingSegmentIndex = -1;\n\t\t\tthis.renderAnswer();\n\t\t}\n\t}\n\n\tprivate pauseMorse(): void {\n\t\tthis.audio.stopPlaying();\n\t\tthis.audioB.stopPlaying();\n\t\tthis.state.isPlaying = false;\n\t\tthis.state.isPaused = true;\n\t\t//! 一時停止時は単語強調表示を維持（currentPlayingWordIndexはそのまま）。\n\t\tthis.updatePlaybackButtons();\n\t}\n\n\tprivate stopMorse(): void {\n\t\tthis.audio.stopPlaying();\n\t\tthis.audioB.stopPlaying();\n\t\tthis.state.isPlaying = false;\n\t\tthis.state.isPaused = false;\n\t\t//! 停止時は一時停止位置をクリア。\n\t\tthis.state.pausedWordIndex = -1;\n\t\tthis.state.pausedSegmentIndex = -1;\n\t\t//! 停止時は単語強調表示もクリア。\n\t\tthis.state.currentPlayingWordIndex = -1;\n\t\tthis.state.currentPlayingSegmentIndex = -1;\n\t\tthis.updatePlaybackButtons();\n\t\tthis.renderAnswer();\n\t}\n\n\n\tprivate updatePlaybackButtons(): void {\n\t\tconst playBtn = document.getElementById('playBtn') as HTMLButtonElement;\n\t\tconst pauseBtn = document.getElementById('pauseBtn') as HTMLButtonElement;\n\n\t\tif (playBtn) playBtn.disabled = this.state.isPlaying;\n\t\tif (pauseBtn) pauseBtn.disabled = !this.state.isPlaying;\n\t}\n\n\t//! ========== 採点と結果表示 ==========\n\n\tprivate checkAnswer(): void {\n\t\tif (!this.state.selectedTemplate) return;\n\n\t\tthis.state.showResult = true;\n\t\tthis.renderPracticeArea();\n\t}\n\n\tprivate toggleAnswer(): void {\n\t\t//! 3つの状態を管理: a=非表示、b=通常表示、c=対話形式表示。\n\t\t//! 状態a: showAnswer=false, showDialogFormat=false → 非表示\n\t\t//! 状態b: showAnswer=true, showDialogFormat=false → 通常表示\n\t\t//! 状態c: showAnswer=false, showDialogFormat=true → 対話形式表示\n\t\t//! 遷移: a⇔b, b⇔c\n\n\t\tif (this.state.showAnswer) {\n\t\t\t//! b → a: 通常表示をOFF。\n\t\t\tthis.state.showAnswer = false;\n\t\t} else {\n\t\t\t//! a → b または c → b: 通常表示をON、対話形式をOFF。\n\t\t\tthis.state.showAnswer = true;\n\t\t\tthis.state.showDialogFormat = false;\n\t\t}\n\t\tthis.renderPracticeArea();\n\t}\n\n\tprivate toggleDialogFormat(): void {\n\t\t//! 3つの状態を管理: a=非表示、b=通常表示、c=対話形式表示。\n\t\t//! 遷移: a⇔c, b⇔c\n\n\t\tif (this.state.showDialogFormat) {\n\t\t\t//! c → a: 対話形式をOFF。\n\t\t\tthis.state.showDialogFormat = false;\n\t\t} else {\n\t\t\t//! a → c または b → c: 対話形式をON、通常表示をOFF。\n\t\t\tthis.state.showDialogFormat = true;\n\t\t\tthis.state.showAnswer = false;\n\t\t}\n\t\tthis.renderPracticeArea();\n\t}\n\n\t//! ========== カスタムテンプレート管理 ==========\n\n\tprivate showCustomTemplateDialog(template?: ListeningTemplate): void {\n\t\tconst isEdit = !!template;\n\t\tconst title = isEdit ? template.title : '';\n\t\tconst content = isEdit ? template.content : '';\n\n\t\tconst modal = document.createElement('div');\n\t\tmodal.className = 'modal-overlay';\n\t\tmodal.innerHTML = `\n\t\t\t<div class=\"modal\">\n\t\t\t\t<h2>${isEdit ? 'テンプレート編集' : 'テンプレート新規作成'}</h2>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label for=\"templateTitle\">タイトル:</label>\n\t\t\t\t\t<input type=\"text\" id=\"templateTitle\" value=\"${title}\" placeholder=\"タイトルを入力\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label for=\"templateContent\">内容:</label>\n\t\t\t\t\t<textarea id=\"templateContent\" placeholder=\"モールス信号に変換するテキストを入力\">${content}</textarea>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"modal-actions\">\n\t\t\t\t\t<button id=\"saveTemplateBtn\" class=\"btn btn-primary\">保存</button>\n\t\t\t\t\t<button id=\"cancelTemplateBtn\" class=\"btn\">キャンセル</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t\tdocument.body.appendChild(modal);\n\n\t\t//! 保存ボタン。\n\t\tdocument.getElementById('saveTemplateBtn')?.addEventListener('click', () => {\n\t\t\tconst titleInput = document.getElementById('templateTitle') as HTMLInputElement;\n\t\t\tconst contentInput = document.getElementById('templateContent') as HTMLTextAreaElement;\n\n\t\t\tif (!titleInput.value.trim() || !contentInput.value.trim()) {\n\t\t\t\talert('タイトルと内容を入力してください');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isEdit && template) {\n\t\t\t\t//! 既存テンプレートを更新。\n\t\t\t\ttemplate.title = titleInput.value.trim();\n\t\t\t\ttemplate.content = contentInput.value.trim().toUpperCase();\n\t\t\t} else {\n\t\t\t\t//! 新規テンプレートを追加。\n\t\t\t\tconst newTemplate: ListeningTemplate = {\n\t\t\t\t\tid: `custom-${Date.now()}`,\n\t\t\t\t\tcategory: 'qso',\n\t\t\t\t\ttitle: titleInput.value.trim(),\n\t\t\t\t\tcontent: contentInput.value.trim().toUpperCase()\n\t\t\t\t};\n\t\t\t\tthis.customTemplates.push(newTemplate);\n\t\t\t}\n\n\t\t\tthis.saveCustomTemplates();\n\t\t\tmodal.remove();\n\t\t\tthis.render();\n\t\t});\n\n\t\t//! キャンセルボタン。\n\t\tdocument.getElementById('cancelTemplateBtn')?.addEventListener('click', () => {\n\t\t\tmodal.remove();\n\t\t});\n\n\t\t//! モーダル外クリックで閉じる。\n\t\tmodal.addEventListener('click', (e) => {\n\t\t\tif (e.target === modal) {\n\t\t\t\tmodal.remove();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate deleteCustomTemplate(id: string): void {\n\t\tif (confirm('この定型文を削除しますか?')) {\n\t\t\tthis.customTemplates = this.customTemplates.filter(t => t.id !== id);\n\t\t\tthis.saveCustomTemplates();\n\t\t\tthis.render();\n\t\t}\n\t}\n\n\t//! ========== 設定モーダル ==========\n\n\tprivate showSettings(): void {\n\t\t//! 現在の設定値を取得（volumeを0-100の範囲に変換）。\n\t\tconst currentValues: SettingValues = {\n\t\t\tcharacterSpeed: this.settings.characterSpeed,\n\t\t\teffectiveSpeed: this.settings.effectiveSpeed,\n\t\t\tfrequency: this.settings.frequency,\n\t\t\tbFrequency: this.settings.bFrequency,\n\t\t\tvolume: Math.round(this.settings.volume * 100)\n\t\t};\n\n\t\t//! 設定変更前の値を保存（キャンセル時の復元用）。\n\t\tconst savedSettings = { ...this.settings };\n\n\t\t//! SettingsModalを作成。\n\t\tconst modal = new SettingsModal(\n\t\t\t'listening-settings-modal',\n\t\t\tALL_SETTING_ITEMS,\n\t\t\tcurrentValues,\n\t\t\t{\n\t\t\t\tonSave: (values: SettingValues) => {\n\t\t\t\t\t//! 実効速度は文字速度を上限とする。\n\t\t\t\t\tlet effSpeed = values.effectiveSpeed as number;\n\t\t\t\t\tconst charSpeed = values.characterSpeed as number;\n\t\t\t\t\tif (effSpeed > charSpeed) {\n\t\t\t\t\t\teffSpeed = charSpeed;\n\t\t\t\t\t}\n\n\t\t\t\t\t//! 設定を保存。\n\t\t\t\t\tthis.settings.characterSpeed = charSpeed;\n\t\t\t\t\tthis.settings.effectiveSpeed = effSpeed;\n\t\t\t\t\tthis.settings.frequency = values.frequency as number;\n\t\t\t\t\tthis.settings.bFrequency = values.bFrequency as number;\n\t\t\t\t\tthis.settings.volume = (values.volume as number) / 100;\n\n\t\t\t\t\tthis.saveSettings();\n\n\t\t\t\t\t//! A側のAudioGeneratorを更新。\n\t\t\t\t\tthis.audio.updateSettings({\n\t\t\t\t\t\tfrequency: this.settings.frequency,\n\t\t\t\t\t\tvolume: this.settings.volume,\n\t\t\t\t\t\twpm: this.settings.characterSpeed,\n\t\t\t\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t\t\t\t});\n\n\t\t\t\t\t//! B側のAudioGeneratorを更新。\n\t\t\t\t\tthis.audioB.updateSettings({\n\t\t\t\t\t\tfrequency: this.settings.bFrequency,\n\t\t\t\t\t\tvolume: this.settings.volume,\n\t\t\t\t\t\twpm: this.settings.characterSpeed,\n\t\t\t\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tonCancel: () => {\n\t\t\t\t\t//! 設定を元に戻す。\n\t\t\t\t\tthis.settings = { ...savedSettings };\n\t\t\t\t\tthis.audio.updateSettings({\n\t\t\t\t\t\tfrequency: savedSettings.frequency,\n\t\t\t\t\t\tvolume: savedSettings.volume,\n\t\t\t\t\t\twpm: savedSettings.characterSpeed,\n\t\t\t\t\t\teffectiveWpm: savedSettings.effectiveSpeed\n\t\t\t\t\t});\n\t\t\t\t\tthis.audioB.updateSettings({\n\t\t\t\t\t\tfrequency: savedSettings.bFrequency,\n\t\t\t\t\t\tvolume: savedSettings.volume,\n\t\t\t\t\t\twpm: savedSettings.characterSpeed,\n\t\t\t\t\t\teffectiveWpm: savedSettings.effectiveSpeed\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tonTestPlay: async () => {\n\t\t\t\t\t//! テスト再生: A側とB側の周波数で順番に再生。\n\t\t\t\t\tconst morse = MorseCodec.textToMorse('CQ');\n\t\t\t\t\tawait this.audio.playMorseString(morse);\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 500));\n\t\t\t\t\tawait this.audioB.playMorseString(morse);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t//! モーダルを表示。\n\t\tmodal.show('listening');\n\t}\n\n\t//! ========== レンダリング ==========\n\n\trender(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"settings-icon\" id=\"settingsIcon\">\n\t\t\t\t<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<button id=\"backBtn\" class=\"back-btn\">← 戻る</button>\n\t\t\t\t\t<h1>モールス信号聞き取り練習</h1>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"tabs\">\n\t\t\t\t\t${this.renderCategoryTabs()}\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"content-area\">\n\t\t\t\t\t${this.state.selectedTemplate ? this.renderPracticeContent() : this.renderTemplateList()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachEventListeners();\n\t}\n\n\tprivate renderCategoryTabs(): string {\n\t\tconst categories: { id: TemplateCategory | 'custom'; label: string }[] = [\n\t\t\t{ id: 'qso', label: 'ラバースタンプQSO' },\n\t\t\t{ id: 'text100', label: '英文100字' },\n\t\t\t{ id: 'text200', label: '英文200字' },\n\t\t\t{ id: 'text300', label: '英文300字' },\n\t\t\t{ id: 'custom', label: 'ユーザー定義' }\n\t\t];\n\n\t\treturn categories\n\t\t\t.map(\n\t\t\t\tcat => `\n\t\t\t<button class=\"tab-button ${this.state.currentCategory === cat.id ? 'active' : ''}\" data-category=\"${cat.id}\">\n\t\t\t\t${cat.label}\n\t\t\t</button>\n\t\t`\n\t\t\t)\n\t\t\t.join('');\n\t}\n\n\tprivate renderTemplateList(): string {\n\t\tconst templates = this.getTemplates();\n\n\t\tif (templates.length === 0 || (templates.length === 1 && templates[0].id === 'qso-random-generate')) {\n\t\t\treturn `\n\t\t\t\t<div class=\"empty-state\">\n\t\t\t\t\t<p>定型文がありません</p>\n\t\t\t\t\t${this.state.currentCategory === 'custom' ? '<button id=\"addCustomBtn\" class=\"btn btn-primary\">新規作成</button>' : ''}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\treturn `\n\t\t\t<div class=\"template-list\">\n\t\t\t\t${this.state.currentCategory === 'custom' ? '<button id=\"addCustomBtn\" class=\"btn btn-primary\">新規作成</button>' : ''}\n\t\t\t\t${templates\n\t\t\t\t\t.map(template => {\n\t\t\t\t\t\tconst text = this.getTemplateText(template);\n\t\t\t\t\t\tconst preview = template.id === 'qso-random-generate'\n\t\t\t\t\t\t\t? 'コールサイン、地名、名前、RSレポート、リグなどがランダムに生成された完全なQSOが作成されます。毎回異なる内容で練習できます。'\n\t\t\t\t\t\t\t: `${text.substring(0, 100)}${text.length > 100 ? '...' : ''}`;\n\t\t\t\t\t\treturn `\n\t\t\t\t\t<div class=\"template-card\" data-template-id=\"${template.id}\">\n\t\t\t\t\t\t<h3>${template.title}</h3>\n\t\t\t\t\t\t<p class=\"template-preview\">${preview}</p>\n\t\t\t\t\t\t<div class=\"template-actions\">\n\t\t\t\t\t\t\t<button class=\"btn select-btn\" data-template-id=\"${template.id}\">選択</button>\n\t\t\t\t\t\t\t${\n\t\t\t\t\t\t\t\tthis.state.currentCategory === 'custom' && template.id !== 'qso-random-generate'\n\t\t\t\t\t\t\t\t\t? `\n\t\t\t\t\t\t\t\t<button class=\"btn edit-btn\" data-template-id=\"${template.id}\">編集</button>\n\t\t\t\t\t\t\t\t<button class=\"btn delete-btn\" data-template-id=\"${template.id}\">削除</button>\n\t\t\t\t\t\t\t`\n\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t`;\n\t\t\t\t\t})\n\t\t\t\t\t.join('')}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tprivate renderPracticeContent(): string {\n\t\tif (!this.state.selectedTemplate) return '';\n\n\t\treturn `\n\t\t\t<div class=\"practice-area\">\n\t\t\t\t<div class=\"practice-header\">\n\t\t\t\t\t<h2>${this.state.selectedTemplate.title}</h2>\n\t\t\t\t\t<button id=\"backToListBtn\" class=\"btn\">一覧に戻る</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"playback-controls\">\n\t\t\t\t\t<button id=\"playBtn\" class=\"control-btn\" title=\"再生\" ${this.state.isPlaying ? 'disabled' : ''}>\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M8 5v14l11-7z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"pauseBtn\" class=\"control-btn\" title=\"一時停止\" ${!this.state.isPlaying ? 'disabled' : ''}>\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M6 4h4v16H6V4zm8 0h4v16h-4V4z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"stopBtn\" class=\"control-btn\" title=\"停止\">\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<rect x=\"6\" y=\"6\" width=\"12\" height=\"12\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"downloadBtn\" class=\"control-btn\" title=\"WAVファイルとしてダウンロード\">\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"practiceInputArea\"></div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tprivate renderPracticeArea(): void {\n\t\tconst practiceInputArea = document.getElementById('practiceInputArea');\n\t\tif (!practiceInputArea) return;\n\n\t\tconst hasDialog = this.state.selectedTemplate?.dialog && this.state.selectedTemplate.dialog.length > 0;\n\n\t\tpracticeInputArea.innerHTML = `\n\t\t\t<div class=\"input-section\">\n\t\t\t\t<label for=\"userInput\">聞き取った内容を入力してください:</label>\n\t\t\t\t<textarea id=\"userInput\" class=\"input-area\" placeholder=\"聞き取った文字を入力...\">${this.state.userInput}</textarea>\n\t\t\t</div>\n\n\t\t\t<div class=\"action-buttons\">\n\t\t\t\t<button id=\"checkBtn\" class=\"btn btn-primary\">採点</button>\n\t\t\t\t<button id=\"showAnswerBtn\" class=\"btn ${this.state.showAnswer ? 'active' : ''}\">テキスト表示</button>\n\t\t\t\t${hasDialog ? `<button id=\"toggleDialogBtn\" class=\"btn ${this.state.showDialogFormat ? 'active' : ''}\">対話形式で表示</button>` : ''}\n\t\t\t</div>\n\n\t\t\t${(this.state.showAnswer || this.state.showDialogFormat) ? '<div id=\"answerArea\"></div>' : ''}\n\t\t\t${this.state.showResult ? '<div id=\"resultArea\"></div>' : ''}\n\t\t`;\n\n\t\t//! ユーザー入力の監視。\n\t\tconst userInput = document.getElementById('userInput') as HTMLTextAreaElement;\n\t\tuserInput?.addEventListener('input', () => {\n\t\t\tthis.state.userInput = userInput.value;\n\t\t});\n\n\t\t//! 採点ボタン。\n\t\tdocument.getElementById('checkBtn')?.addEventListener('click', () => {\n\t\t\tthis.checkAnswer();\n\t\t});\n\n\t\t//! 正解表示ボタン。\n\t\tdocument.getElementById('showAnswerBtn')?.addEventListener('click', () => {\n\t\t\tthis.toggleAnswer();\n\t\t});\n\n\t\t//! 対話形式表示ボタン。\n\t\tdocument.getElementById('toggleDialogBtn')?.addEventListener('click', () => {\n\t\t\tthis.toggleDialogFormat();\n\t\t});\n\n\t\t//! 正解と結果を描画。\n\t\tif (this.state.showAnswer || this.state.showDialogFormat) {\n\t\t\tthis.renderAnswer();\n\t\t}\n\t\tif (this.state.showResult) {\n\t\t\tthis.renderResult();\n\t\t}\n\t}\n\n\tprivate renderAnswer(): void {\n\t\tconst answerArea = document.getElementById('answerArea');\n\t\tif (!answerArea || !this.state.selectedTemplate) return;\n\n\t\tconst hasDialog = this.state.selectedTemplate.dialog && this.state.selectedTemplate.dialog.length > 0;\n\n\t\t//! 対話形式表示の生成。\n\t\tlet answerContent = '';\n\t\tif (this.state.showDialogFormat && hasDialog) {\n\t\t\t//! 対話形式で表示（セグメント別に話者を表示）。\n\t\t\tanswerContent = `\n\t\t\t\t<table class=\"dialog-table\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t${this.state.selectedTemplate.dialog!.map((segment, segmentIndex) => {\n\t\t\t\t\t\t\t//! セグメントのテキストを単語に分割。\n\t\t\t\t\t\t\tconst words = segment.text.trim().split(/\\s+/).filter(w => w.length > 0);\n\t\t\t\t\t\t\t//! 現在再生中のセグメントかチェック。\n\t\t\t\t\t\t\tconst isCurrentSegment = this.state.currentPlayingSegmentIndex === segmentIndex;\n\t\t\t\t\t\t\t//! 各単語を強調表示（再生中の場合）。\n\t\t\t\t\t\t\tconst highlightedText = words.map((word, wordIndex) => {\n\t\t\t\t\t\t\t\tif (isCurrentSegment && this.state.currentPlayingWordIndex === wordIndex) {\n\t\t\t\t\t\t\t\t\treturn `<span class=\"playing-word\">${word}</span>`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn word;\n\t\t\t\t\t\t\t}).join(' ');\n\n\t\t\t\t\t\t\treturn `\n\t\t\t\t\t\t\t\t<tr class=\"${isCurrentSegment ? 'playing-segment' : ''}\">\n\t\t\t\t\t\t\t\t\t<td class=\"speaker-cell\">${segment.side}</td>\n\t\t\t\t\t\t\t\t\t<td class=\"content-cell\">${highlightedText}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t`;\n\t\t\t\t\t\t}).join('')}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t`;\n\t\t} else if (this.state.showAnswer) {\n\t\t\t//! 通常表示（テキスト全体を表示）。\n\t\t\tconst content = this.getTemplateText(this.state.selectedTemplate);\n\t\t\t//! テキストを単語に分割。\n\t\t\tconst words = content.trim().split(/\\s+/).filter(w => w.length > 0);\n\t\t\t//! 各単語を強調表示（再生中の場合）。\n\t\t\tconst highlightedText = words.map((word, wordIndex) => {\n\t\t\t\tif (this.state.currentPlayingWordIndex === wordIndex && this.state.isPlaying) {\n\t\t\t\t\treturn `<span class=\"playing-word\">${word}</span>`;\n\t\t\t\t}\n\t\t\t\treturn word;\n\t\t\t}).join(' ');\n\n\t\t\tanswerContent = `<div class=\"answer-text\">${highlightedText}</div>`;\n\t\t}\n\n\t\tanswerArea.innerHTML = `\n\t\t\t<div class=\"answer-area\">\n\t\t\t\t<h3>正解</h3>\n\t\t\t\t${answerContent}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tprivate renderResult(): void {\n\t\tconst resultArea = document.getElementById('resultArea');\n\t\tif (!resultArea || !this.state.selectedTemplate) return;\n\n\t\tconst correctText = this.getTemplateText(this.state.selectedTemplate);\n\t\tconst accuracy = ListeningTrainer.calculateAccuracy(\n\t\t\tcorrectText,\n\t\t\tthis.state.userInput\n\t\t);\n\n\t\t//! 大文字化して差分を計算（空白も採点対象に含める）。\n\t\tconst correct = correctText.toUpperCase();\n\t\tconst input = this.state.userInput.toUpperCase();\n\t\tconst diff = ListeningTrainer.getDifference(correct, input);\n\n\t\t//! 差分情報を基にHTML文字列を生成（正解と入力を独立して表示）。\n\t\tlet correctHtml = '';\n\t\tlet inputHtml = '';\n\n\t\tfor (const d of diff) {\n\t\t\tif (d.type === 'match') {\n\t\t\t\t//! 一致する文字（空白含む）は通常表示。\n\t\t\t\tconst char = d.correctChar === ' ' ? '&nbsp;' : d.correctChar;\n\t\t\t\tcorrectHtml += char;\n\t\t\t\tinputHtml += char;\n\t\t\t} else if (d.type === 'replace') {\n\t\t\t\t//! 置換された文字は赤色で表示。\n\t\t\t\tconst correctChar = d.correctChar === ' ' ? '&nbsp;' : d.correctChar;\n\t\t\t\tconst inputChar = d.inputChar === ' ' ? '&nbsp;' : d.inputChar;\n\t\t\t\tcorrectHtml += `<span class=\"diff-error\">${correctChar}</span>`;\n\t\t\t\tinputHtml += `<span class=\"diff-error\">${inputChar}</span>`;\n\t\t\t} else if (d.type === 'delete') {\n\t\t\t\t//! 削除された文字（正解にあるが入力にない）は正解側に赤色で表示。\n\t\t\t\tconst char = d.correctChar === ' ' ? '&nbsp;' : d.correctChar;\n\t\t\t\tcorrectHtml += `<span class=\"diff-error\">${char}</span>`;\n\t\t\t\t//! 入力側には何も表示しない（位置合わせを行わない）。\n\t\t\t} else if (d.type === 'insert') {\n\t\t\t\t//! 挿入された文字（入力にあるが正解にない）は入力側に青色で表示。\n\t\t\t\tconst char = d.inputChar === ' ' ? '&nbsp;' : d.inputChar;\n\t\t\t\t//! 正解側には何も表示しない（位置合わせを行わない）。\n\t\t\t\tinputHtml += `<span class=\"diff-extra\">${char}</span>`;\n\t\t\t}\n\t\t}\n\n\t\tresultArea.innerHTML = `\n\t\t\t<div class=\"result-area\">\n\t\t\t\t<h3>結果</h3>\n\t\t\t\t<div class=\"accuracy\">正答率: ${accuracy}%</div>\n\t\t\t\t<div class=\"comparison\">\n\t\t\t\t\t<div class=\"comparison-row\">\n\t\t\t\t\t\t<strong>正解:</strong>\n\t\t\t\t\t\t<div class=\"comparison-text\">${correctHtml}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"comparison-row\">\n\t\t\t\t\t\t<strong>入力:</strong>\n\t\t\t\t\t\t<div class=\"comparison-text\">${inputHtml || '（未入力）'}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\t//! ========== イベントリスナー ==========\n\n\tprivate attachEventListeners(): void {\n\t\t//! 戻るボタン。\n\t\tdocument.getElementById('backBtn')?.addEventListener('click', () => {\n\t\t\twindow.location.hash = '#menu';\n\t\t});\n\n\t\t//! 設定アイコン。\n\t\tdocument.getElementById('settingsIcon')?.addEventListener('click', () => {\n\t\t\tthis.showSettings();\n\t\t});\n\n\t\t//! カテゴリータブ。\n\t\tdocument.querySelectorAll('.tab-button').forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst category = btn.getAttribute('data-category') as TemplateCategory | 'custom';\n\t\t\t\tif (category) {\n\t\t\t\t\tthis.state.currentCategory = category;\n\t\t\t\t\tthis.state.selectedTemplate = null;\n\t\t\t\t\tthis.state.showResult = false;\n\t\t\t\t\tthis.state.showAnswer = false;\n\t\t\t\t\tthis.state.showDialogFormat = false;\n\t\t\t\t\tthis.state.userInput = '';\n\t\t\t\t\tthis.saveCategory();\n\t\t\t\t\tthis.render();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! 定型文選択ボタン。\n\t\tdocument.querySelectorAll('.select-btn').forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst id = btn.getAttribute('data-template-id');\n\t\t\t\tif (id) {\n\t\t\t\t\t//! ランダムQSO生成ボタンの場合。\n\t\t\t\t\tif (id === 'qso-random-generate') {\n\t\t\t\t\t\tthis.state.selectedTemplate = ListeningTrainer.generateRandomQSO();\n\t\t\t\t\t\tthis.state.showResult = false;\n\t\t\t\t\t\tthis.state.showAnswer = false;\n\t\t\t\t\t\tthis.state.showDialogFormat = false;\n\t\t\t\t\t\tthis.state.userInput = '';\n\t\t\t\t\t\tthis.state.isPaused = false;\n\t\t\t\t\t\tthis.state.pausedWordIndex = -1;\n\t\t\t\t\t\tthis.state.pausedSegmentIndex = -1;\n\t\t\t\t\t\tthis.state.currentPlayingWordIndex = -1;\n\t\t\t\t\t\tthis.state.currentPlayingSegmentIndex = -1;\n\t\t\t\t\t\tthis.render();\n\t\t\t\t\t\tthis.renderPracticeArea();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//! 通常のテンプレート選択。\n\t\t\t\t\t\tconst allTemplates = [...ListeningTrainer.getBuiltinTemplates(), ...this.customTemplates];\n\t\t\t\t\t\tconst template = allTemplates.find(t => t.id === id);\n\t\t\t\t\t\tif (template) {\n\t\t\t\t\t\t\tthis.state.selectedTemplate = template;\n\t\t\t\t\t\t\tthis.state.showResult = false;\n\t\t\t\t\t\t\tthis.state.showAnswer = false;\n\t\t\t\t\t\t\tthis.state.showDialogFormat = false;\n\t\t\t\t\t\t\tthis.state.userInput = '';\n\t\t\t\t\t\t\tthis.state.isPaused = false;\n\t\t\t\t\t\t\tthis.state.pausedWordIndex = -1;\n\t\t\t\t\t\t\tthis.state.pausedSegmentIndex = -1;\n\t\t\t\t\t\t\tthis.state.currentPlayingWordIndex = -1;\n\t\t\t\t\t\t\tthis.state.currentPlayingSegmentIndex = -1;\n\t\t\t\t\t\t\tthis.render();\n\t\t\t\t\t\t\tthis.renderPracticeArea();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! 一覧に戻るボタン。\n\t\tdocument.getElementById('backToListBtn')?.addEventListener('click', () => {\n\t\t\tthis.state.selectedTemplate = null;\n\t\t\tthis.state.showResult = false;\n\t\t\tthis.state.showAnswer = false;\n\t\t\tthis.state.showDialogFormat = false;\n\t\t\tthis.state.userInput = '';\n\t\t\tthis.state.isPaused = false;\n\t\t\tthis.state.pausedWordIndex = -1;\n\t\t\tthis.state.pausedSegmentIndex = -1;\n\t\t\tthis.state.currentPlayingWordIndex = -1;\n\t\t\tthis.state.currentPlayingSegmentIndex = -1;\n\t\t\tthis.audio.stopPlaying();\n\t\t\tthis.audioB.stopPlaying();\n\t\t\tthis.render();\n\t\t});\n\n\t\t//! ユーザー定義定型文の新規作成ボタン。\n\t\tdocument.getElementById('addCustomBtn')?.addEventListener('click', () => {\n\t\t\tthis.showCustomTemplateDialog();\n\t\t});\n\n\t\t//! ユーザー定義定型文の編集ボタン。\n\t\tdocument.querySelectorAll('.edit-btn').forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst id = btn.getAttribute('data-template-id');\n\t\t\t\tif (id) {\n\t\t\t\t\tconst template = this.customTemplates.find(t => t.id === id);\n\t\t\t\t\tif (template) {\n\t\t\t\t\t\tthis.showCustomTemplateDialog(template);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! ユーザー定義定型文の削除ボタン。\n\t\tdocument.querySelectorAll('.delete-btn').forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst id = btn.getAttribute('data-template-id');\n\t\t\t\tif (id) {\n\t\t\t\t\tthis.deleteCustomTemplate(id);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! 再生コントロール（練習画面のみ）。\n\t\tif (this.state.selectedTemplate) {\n\t\t\tdocument.getElementById('playBtn')?.addEventListener('click', () => {\n\t\t\t\tthis.playMorse();\n\t\t\t});\n\n\t\t\tdocument.getElementById('pauseBtn')?.addEventListener('click', () => {\n\t\t\t\tthis.pauseMorse();\n\t\t\t});\n\n\t\t\tdocument.getElementById('stopBtn')?.addEventListener('click', () => {\n\t\t\t\tthis.stopMorse();\n\t\t\t});\n\n\t\t\tdocument.getElementById('downloadBtn')?.addEventListener('click', () => {\n\t\t\t\tthis.downloadWav();\n\t\t\t});\n\n\t\t\tthis.renderPracticeArea();\n\t\t}\n\t}\n\n\t/**\n\t * モールス信号をWAVファイルとしてダウンロードする\n\t */\n\tprivate async downloadWav(): Promise<void> {\n\t\tif (!this.state.selectedTemplate) return;\n\n\t\ttry {\n\t\t\t//! テキストをモールス符号に変換。\n\t\t\tconst text = this.getTemplateText(this.state.selectedTemplate);\n\t\t\tconst morse = MorseCodec.textToMorse(text);\n\n\t\t\t//! WAVファイルを生成。\n\t\t\tconst wavBlob = await this.audio.generateWav(morse);\n\n\t\t\t//! ダウンロード。\n\t\t\tconst filename = `${sanitizeFilename(this.state.selectedTemplate.title)}.wav`;\n\t\t\tdownloadBlob(wavBlob, filename);\n\t\t} catch (error) {\n\t\t\tconsole.error('WAVダウンロードエラー:', error);\n\t\t\talert('WAVファイルの生成に失敗しました。');\n\t\t}\n\t}\n\n\tdestroy(): void {\n\t\t//! AudioGeneratorを停止。\n\t\tthis.audio.stopPlaying();\n\t\tthis.audioB.stopPlaying();\n\t}\n}\n","/**\n * ダウンロードヘルパー関数\n * Blobをファイルとしてダウンロードさせるユーティリティ\n */\n\n/**\n * Blobをファイルとしてダウンロードする\n *\n * @param blob - ダウンロードするBlob\n * @param filename - ファイル名\n */\nexport function downloadBlob(blob: Blob, filename: string): void {\n\tconst url = URL.createObjectURL(blob);\n\tconst a = document.createElement('a');\n\ta.href = url;\n\ta.download = filename;\n\tdocument.body.appendChild(a);\n\ta.click();\n\tdocument.body.removeChild(a);\n\tURL.revokeObjectURL(url);\n}\n\n/**\n * ファイル名をサニタイズする（安全なファイル名に変換）\n *\n * @param filename - 元のファイル名\n * @returns サニタイズされたファイル名\n */\nexport function sanitizeFilename(filename: string): string {\n\treturn filename.replace(/[^a-zA-Z0-9_-]/g, '_');\n}\n","/**\n * ルーター\n * ハッシュベースのSPAルーティング\n */\n\nimport { MenuView } from '../ui/views/MenuView';\nimport { VerticalKeyView } from '../ui/views/VerticalKeyView';\nimport { HorizontalKeyView } from '../ui/views/HorizontalKeyView';\nimport { FlashcardView } from '../ui/views/FlashcardView';\nimport { KochView } from '../ui/views/KochView';\nimport { ListeningView } from '../ui/views/ListeningView';\n\n/**\n * ビューインターフェース\n */\nexport interface View {\n\t/**\n\t * ビューをレンダリングする\n\t */\n\trender(): void | Promise<void>;\n\n\t/**\n\t * ビューを破棄する\n\t */\n\tdestroy(): void;\n}\n\n/**\n * ルート定義\n */\ntype Route = {\n\tpath: string;\n\tview: new () => View;\n};\n\n/**\n * ルータークラス\n */\nexport class Router {\n\tprivate currentView: View | null = null;\n\tprivate routes: Route[] = [];\n\n\tconstructor() {\n\t\t//! ルート定義。\n\t\tthis.routes = [\n\t\t\t{ path: '', view: MenuView },\n\t\t\t{ path: 'menu', view: MenuView },\n\t\t\t{ path: 'vertical', view: VerticalKeyView },\n\t\t\t{ path: 'horizontal', view: HorizontalKeyView },\n\t\t\t{ path: 'flashcard', view: FlashcardView },\n\t\t\t{ path: 'koch', view: KochView },\n\t\t\t{ path: 'listening', view: ListeningView },\n\t\t];\n\t}\n\n\t/**\n\t * ルーターを初期化する\n\t */\n\tinit(): void {\n\t\t//! ハッシュ変更時のリスナーを登録。\n\t\twindow.addEventListener('hashchange', () => this.handleRoute());\n\n\t\t//! 初回ルーティング。\n\t\tthis.handleRoute();\n\t}\n\n\t/**\n\t * 現在のハッシュに基づいてルーティングする\n\t */\n\tprivate handleRoute(): void {\n\t\t//! 現在のビューを破棄。\n\t\tif (this.currentView) {\n\t\t\tthis.currentView.destroy();\n\t\t\tthis.currentView = null;\n\t\t}\n\n\t\t//! ハッシュからパスを取得（#を除去）。\n\t\tconst hash = window.location.hash.slice(1);\n\t\tconst route = this.routes.find(r => r.path === hash);\n\n\t\tif (route) {\n\t\t\t//! ビューを作成してレンダリング。\n\t\t\tthis.currentView = new route.view();\n\t\t\tthis.currentView.render();\n\t\t} else {\n\t\t\t//! 該当するルートがない場合はメニューに遷移。\n\t\t\twindow.location.hash = '#menu';\n\t\t}\n\t}\n\n\t/**\n\t * 指定したパスに遷移する\n\t */\n\tnavigate(path: string): void {\n\t\twindow.location.hash = `#${path}`;\n\t}\n}\n","/**\n * アプリケーションエントリポイント\n */\n\nimport { Router } from './router';\nimport './assets/styles.css';\n\n//! アプリケーション起動時の処理。\nfunction init(): void {\n\t//! 開発環境でのみログを出力。\n\tif (import.meta.env.DEV) {\n\t\tconsole.log('モールス練習アプリ v10 起動');\n\t}\n\n\t//! ルーターを初期化。\n\tconst router = new Router();\n\trouter.init();\n}\n\n//! DOMContentLoaded後に初期化。\nif (document.readyState === 'loading') {\n\tdocument.addEventListener('DOMContentLoaded', init);\n} else {\n\tinit();\n}\n"],"names":["MenuView","menuItems","id","title","description","route","render","app","document","getElementById","innerHTML","this","map","item","renderMenuItem","join","attachEventListeners","querySelectorAll","forEach","addEventListener","getAttribute","window","location","hash","destroy","VerticalKeyView","trainer","buffer","timer","audio","isKeyPressed","keyPressHandler","keyReleaseHandler","updateIntervalId","currentWPM","keyCode","latestEvaluation","overallStats","dotStats","dashStats","constructor","savedWPM","localStorage","getItem","parseInt","savedKeyCode","MorseBuffer","TimerManager","AudioGenerator","frequency","volume","wpm","timings","TimingCalculator","calculate","VerticalKeyTrainer","onKeyPress","startContinuousTone","onKeyRelease","stopContinuousTone","onTimingEvaluated","evaluation","updateTimingStatistics","startUpdate","backBtn","querySelector","openSettingsModal","clearBtn","clear","updateDisplay","e","code","repeat","preventDefault","handleKeyDown","handleKeyUp","keyButton","keyPress","updateKeyStatus","classList","add","keyRelease","remove","setInterval","morseBuffer","decodedText","charCount","getBuffer","sequence","getSequence","fullDisplay","textContent","text","getDecoded","length","toString","updateTimingDisplay","getTimingStatistics","elementStats","getStatisticsByElement","dot","dash","latestContent","eval_","element","record","accuracy","toFixed","accuracyClass","getAccuracyClass","dotDuration","maxDuration","expected","expectedDuration","actual","actualDuration","expectedPercent","actualPercent","diff","diffClass","diffText","Math","round","overallContent","count","stats","averageAccuracy","standardDeviation","maxAccuracy","minAccuracy","dotContent","averageAbsoluteError","dashContent","isPressed","keyStatus","valueSpan","currentValues","getVolume","getFrequency","savedSettings","SettingsModal","ALL_SETTING_ITEMS","onSave","values","setVolume","setFrequency","setWPM","setItem","currentWpmDisplay","onCancel","show","removeEventListener","clearInterval","HorizontalKeyView","leftPressed","rightPressed","iambicMode","paddleLayout","leftKeyCode","rightKeyCode","savedIambicMode","savedPaddleLayout","savedLeftKeyCode","savedRightKeyCode","initializeTrainer","HorizontalKeyTrainer","onElementStart","_element","duration","scheduleTone","onSpacingEvaluated","handleLeftPaddlePress","handleRightPaddlePress","handleLeftPaddleRelease","handleRightPaddleRelease","leftPaddle","rightPaddle","leftPaddlePress","leftPaddleRelease","rightPaddlePress","rightPaddleRelease","updatePaddleLabels","className","getSpacingStatistics","spacingStats","getStatisticsBySpacingType","avgAccuracyEl","avgErrorEl","countEl","charExpectedEl","charAccuracyEl","charErrorEl","charCountEl","charGap","character","wordExpectedEl","wordAccuracyEl","wordErrorEl","wordCountEl","wordGap","word","updateTimingDiagram","wordData","getLastWordTimingData","container","html","generateTimingDiagramHTML","timingChart","generateTimingChart","decodedChar","morseCode","paddleInputs","sortedPaddleInputs","sort","a","b","timestamp","allTimestamps","elements","startTime","endTime","squeezeIntervals","flatMap","s","min","totalTime","max","ditInputLine","generatePaddleSignalLine","dahInputLine","outputLine","generateOutputSignalLine","squeezeHighlights","interval","paddleGaps","leftDown","rightDown","gapStartTime","event","prevBothReleased","paddle","state","currentBothReleased","push","gap","generateTimeAxis","generateDebugInfo","label","events","filter","isHigh","segments","lastTime","start","end","high","seg","offsetPercent","widthPercent","lastEnd","segmentsHTML","elementClass","step","eventLines","relativeTime","paddleLabel","stateLabel","squeezeLines","startRelative","endRelative","gapLines","currentIambicModeDisplay","async","loadFlashcardData","url","response","fetch","ok","Error","statusText","lines","split","line","trim","slice","index","columns","tags","abbreviation","english","japanese","example","entry","parseTSV","FlashcardView","allEntries","filteredEntries","currentState","selectedTags","Set","selectedFrequencies","searchQuery","displayMode","sortColumn","sortDirection","learnQuestionType","learnCards","currentLearnIndex","isFlipped","reviewMode","progress","known","unknown","questionType","questionCount","questions","currentQuestionIndex","results","currentlyPlaying","FlashcardState","loadProgress","filters","loadFilters","viewState","loadViewState","examQuestionType","saveProgress","clearProgress","saveFilters","updateFilteredEntries","viewMode","error","renderBrowseMode","renderLearnMode","renderExamMode","renderExamResultMode","renderFilterSection","FlashcardTrainer","getAllTags","tag","has","freq","renderEntries","attachBrowseModeListeners","renderCardView","renderListView","formatAbbreviation","card","abbr","playMorse","toggleBtn","saveDisplayMode","getSortIndicator","header","column","toggleSort","btn","renderLearnSetup","renderLearnCard","cardCount","size","attachCommonListeners","attachLearnSetupListeners","tagFilter","target","type","checked","value","delete","frequencyFilter","searchInput","reviewModeBtn","saveLearnQuestionType","startLearnBtn","startLearn","clearProgressBtn","confirm","cards","random","alert","currentNum","totalNum","frontContent","backContent","isKnown","judgmentButtons","attachLearnCardListeners","backToSetupBtn","flipCardBtn","body","playMorseBtn","markUnknownBtn","moveToNextCard","markKnownBtn","prevCardBtn","nextCardBtn","renderExamSetup","renderExamQuestion","attachExamSetupListeners","question","total","questionText","choices","choice","attachExamQuestionListeners","setTimeout","score","calculateScore","isPassed","percentage","wrongAnswers","getWrongAnswers","correct","r","isCorrect","result","userAnswer","correctAnswer","attachResultListeners","updateFilteredCount","saveExamQuestionType","startExamBtn","startExam","replayBtn","currentTarget","dataset","handleAnswer","retryBtn","tab","saveViewMode","filteredCountElem","questionCountInput","entries","filterByTags","filterByFrequencies","filterByQuery","sortEntries","ascending","sortByAbbreviation","sortByEnglish","sortByJapanese","sortByFrequency","sortByTags","saveSortState","prosignMatch","match","morseSequence","MorseCodec","textToMorse","char","Promise","resolve","actualCount","generateExamQuestions","checkAnswer","getWPM","onTestPlay","DEFAULT_SETTINGS","characterSpeed","effectiveSpeed","practiceDuration","groupSize","showInput","KochView","settings","currentLesson","isPlaying","userInput","groups","currentGroupIndex","customState","selectedChars","isCustomRunning","customUserInput","customCorrectAnswer","customGroups","customCurrentGroupIndex","customIsPlaying","loadSettings","loadViewMode","loadSelectedChars","effectiveWpm","saved","JSON","parse","saveSettings","stringify","includes","chars","saveSelectedChars","Array","from","startLesson","KochTrainer","getCharsForLesson","practiceSettings","generateRandomGroups","updateSettings","renderPractice","updateProgress","updatePlaybackButtons","i","group","morse","playMorseString","showResult","pauseMorse","stopPlaying","stopLesson","calculateAccuracy","passed","resultContainer","progressEl","progressBar","percent","style","width","playBtn","pauseBtn","disabled","startCustom","renderCustomPractice","playCustomMorse","updateCustomProgress","updateCustomPlaybackButtons","pauseCustomMorse","stopCustom","showCustomResult","replace","showSettings","effSpeed","charSpeed","renderModeContent","renderLearningMode","renderCustomMode","lessonList","KOCH_SEQUENCE","_","lessonNum","lessonChars","practiceContainer","renderKeyboard","inputEl","toUpperCase","setupKeyboardEvents","setupCustomControls","availableChars","groupIndex","isLearned","setupModeEventListeners","scrollTo","top","behavior","bFrequency","ListeningView","audioB","currentCategory","selectedTemplate","isPaused","showAnswer","showDialogFormat","currentPlayingWordIndex","currentPlayingSegmentIndex","pausedWordIndex","pausedSegmentIndex","customTemplates","loadCategory","loadCustomTemplates","saveCategory","saveCustomTemplates","getTemplates","category","content","builtin","ListeningTrainer","getBuiltinTemplates","dialog","startSegmentIndex","startWordIndex","playDialogQSO","playTextWordByWord","getTemplateText","template","generator","words","w","renderAnswer","segment","side","wordStartIndex","stopMorse","renderPracticeArea","toggleAnswer","toggleDialogFormat","showCustomTemplateDialog","isEdit","modal","createElement","appendChild","titleInput","contentInput","newTemplate","Date","now","deleteCustomTemplate","t","renderCategoryTabs","renderPracticeContent","renderTemplateList","cat","templates","preview","substring","practiceInputArea","hasDialog","renderResult","answerArea","answerContent","segmentIndex","isCurrentSegment","highlightedText","wordIndex","resultArea","correctText","input","getDifference","correctHtml","inputHtml","d","correctChar","inputChar","generateRandomQSO","find","downloadWav","wavBlob","generateWav","blob","filename","URL","createObjectURL","href","download","click","removeChild","revokeObjectURL","downloadBlob","sanitizeFilename","Router","currentView","routes","path","view","init","handleRoute","navigate","readyState"],"mappings":"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"}