const t={A:".-",B:"-...",C:"-.-.",D:"-..",E:".",F:"..-.",G:"--.",H:"....",I:"..",J:".---",K:"-.-",L:".-..",M:"--",N:"-.",O:"---",P:".--.",Q:"--.-",R:".-.",S:"...",T:"-",U:"..-",V:"...-",W:".--",X:"-..-",Y:"-.--",Z:"--..",0:"-----",1:".----",2:"..---",3:"...--",4:"....-",5:".....",6:"-....",7:"--...",8:"---..",9:"----."," ":"/",".":".-.-.-",",":"--..--",":":"---...","?":"..--..",_:"..--.-","+":".-.-.","-":"-....-","×":"-..-","^":"......","/":"-..-.","@":".--.-.","(":"-.--.",")":"-.--.-",'"':".-..-.","'":".----.","=":"-...-"},e=Object.fromEntries(Object.entries(t).map(([t,e])=>[e,t]));class s{static textToMorse(e){const s=e.toUpperCase(),i=/\[([A-Z]+)\]/g,n=[];let a,r=0;for(;null!==(a=i.exec(s));){if(a.index>r){const e=s.substring(r,a.index),i=Array.from(e).map(e=>t[e]||e);n.push(i.join(" "))}const e=Array.from(a[1]).map(e=>t[e]||e);n.push(e.join("")),r=i.lastIndex}if(r<s.length){const e=s.substring(r),i=Array.from(e).map(e=>t[e]||e);n.push(i.join(" "))}return n.filter(t=>t).join(" ")}static morseToText(t){let s="";for(const i of t)"/"===i?s+=" ":i&&""!==i&&(s+=e[i]||"?");return s}static getMorseMap(){return{...t}}static charToMorse(e){return t[e.toUpperCase()]}}class i{static calculate(t,e={}){if(t<=0)throw new Error(`Invalid WPM value: ${t}. WPM must be greater than 0.`);const s=1200/t,i=e.shortenGaps?.9:1;return{dot:s,dash:3*s,elementGap:s,charGap:3*s*i,wordGap:7*s*i}}static getCharGapDelay(t){const e=t.charGap/(3*t.dot);return 4*t.dot*e}static getWordGapDelay(t){return t.wordGap}static classifyElement(t,e){return t<1.5*e?".":"-"}}class n{static createRecord(t,e,s,i=Date.now()){return{element:t,actualDuration:e,expectedDuration:"."===t?s.dot:s.dash,timestamp:i}}static evaluate(t){const e=Math.abs(t.actualDuration-t.expectedDuration),s=e/t.expectedDuration*100;return{record:t,absoluteError:e,relativeError:s,accuracy:Math.max(0,100-s)}}static calculateStatistics(t){if(0===t.length)return{count:0,averageAccuracy:0,averageAbsoluteError:0,averageRelativeError:0,maxAccuracy:0,minAccuracy:0,standardDeviation:0};const e=t.map(t=>t.accuracy),s=t.map(t=>t.absoluteError),i=t.map(t=>t.relativeError),n=e.reduce((t,e)=>t+e,0)/e.length,a=s.reduce((t,e)=>t+e,0)/s.length,r=i.reduce((t,e)=>t+e,0)/i.length,o=Math.max(...e),c=Math.min(...e),l=e.reduce((t,e)=>t+Math.pow(e-n,2),0)/e.length,u=Math.sqrt(l);return{count:t.length,averageAccuracy:n,averageAbsoluteError:a,averageRelativeError:r,maxAccuracy:o,minAccuracy:c,standardDeviation:u}}static classifyByElement(t){return{dot:t.filter(t=>"."===t.record.element),dash:t.filter(t=>"-"===t.record.element)}}static getRecent(t,e){return e<=0?[]:[...t].sort((t,e)=>e.record.timestamp-t.record.timestamp).slice(0,e)}static getByTimeRange(t,e,s=Date.now()){return t.filter(t=>t.record.timestamp>=e&&t.record.timestamp<=s)}}class a{constructor(){this.buffer="",this.sequence=""}getSequence(){return this.sequence}getBuffer(){return this.buffer}addElement(t){this.sequence+=t}commitSequence(t=!0){this.sequence&&(this.buffer+=this.sequence,t&&(this.buffer+=" "),this.sequence="")}addWordSeparator(){this.commitSequence(!0),this.buffer.endsWith("/ ")||(this.buffer+="/ ")}clear(){this.buffer="",this.sequence=""}endsWith(t){return this.buffer.endsWith(t)}getBufferLength(){return this.buffer.length}getSequenceLength(){return this.sequence.length}isEmpty(){return 0===this.buffer.length&&0===this.sequence.length}}class r{constructor(){this.timers=new Map}set(t,e,s){this.clear(t);const i=window.setTimeout(e,s);this.timers.set(t,i)}clear(t){const e=this.timers.get(t);void 0!==e&&(clearTimeout(e),this.timers.delete(t))}clearAll(){for(const t of this.timers.values())clearTimeout(t);this.timers.clear()}has(t){return this.timers.has(t)}count(){return this.timers.size}}class o{constructor(t={frequency:750,volume:.7,wpm:20}){this.audioContext=null,this.currentOscillator=null,this.currentGain=null,this.isPlaying=!1,this.settings=t}ensureAudioContext(){this.audioContext||(this.audioContext=new(window.AudioContext||window.webkitAudioContext)),"suspended"===this.audioContext.state&&this.audioContext.resume()}updateSettings(t){this.settings={...this.settings,...t}}getSettings(){return{...this.settings}}scheduleTone(t,e){if(this.ensureAudioContext(),this.audioContext)try{const s=this.audioContext.createOscillator(),i=this.audioContext.createGain();s.connect(i),i.connect(this.audioContext.destination),s.frequency.value=this.settings.frequency,s.type="sine";const n=this.audioContext.currentTime,a=Math.max(n,t);i.gain.setValueAtTime(0,a),i.gain.linearRampToValueAtTime(this.settings.volume,a+.001),i.gain.setValueAtTime(this.settings.volume,a+(e-1)/1e3),i.gain.linearRampToValueAtTime(0,a+e/1e3),s.start(a),s.stop(a+e/1e3)}catch(s){}}startContinuousTone(){if(this.ensureAudioContext(),this.audioContext)try{this.stopContinuousTone();const t=this.audioContext.createOscillator(),e=this.audioContext.createGain();t.connect(e),e.connect(this.audioContext.destination),t.frequency.value=this.settings.frequency,t.type="sine";const s=this.audioContext.currentTime;e.gain.setValueAtTime(0,s),e.gain.linearRampToValueAtTime(this.settings.volume,s+.001),t.start(s),this.currentOscillator=t,this.currentGain=e}catch(t){}}stopContinuousTone(){if(this.audioContext)try{if(this.currentOscillator&&this.currentGain){const t=this.audioContext.currentTime;this.currentGain.gain.cancelScheduledValues(t),this.currentGain.gain.setValueAtTime(this.currentGain.gain.value,t),this.currentGain.gain.linearRampToValueAtTime(0,t+.001),this.currentOscillator.stop(t+.002),this.currentOscillator=null,this.currentGain=null}}catch(t){}}async playMorseString(t){if(this.isPlaying||!t||(this.ensureAudioContext(),!this.audioContext))return!1;this.isPlaying=!0;const e=this.settings.wpm||20,s=1200/e,i=s,n=3*s,a=s,r=3*s,o=1200/Math.min(this.settings.effectiveWpm||e,e)*7;let c=this.audioContext.currentTime+.02;for(let h=0;h<t.length&&this.isPlaying;h++){const e=t[h];"."===e?(this.scheduleTone(c,i),c+=(i+a)/1e3):"-"===e?(this.scheduleTone(c,n),c+=(n+a)/1e3):" "===e?c+=(r-a)/1e3:"/"===e&&(c+=(o-a)/1e3)}const l=1e3*(c-this.audioContext.currentTime);await new Promise(t=>setTimeout(t,l));const u=this.isPlaying;return this.isPlaying=!1,u}stopPlaying(){this.isPlaying=!1}isCurrentlyPlaying(){return this.isPlaying}getAudioContext(){return this.audioContext}getVolume(){return this.settings.volume}setVolume(t){this.settings.volume=Math.max(0,Math.min(1,t))}getFrequency(){return this.settings.frequency}setFrequency(t){this.settings.frequency=Math.max(400,Math.min(1200,t))}getWPM(){return this.settings.wpm||20}setWPM(t){this.settings.wpm=Math.max(5,Math.min(40,t))}async generateWav(t){if(!t)throw new Error("モールス符号が空です");const e=this.settings.wpm||20,s=1200/e,i=s,n=3*s,a=s,r=3*s,o=1200/Math.min(this.settings.effectiveWpm||e,e)*7;let c=0;for(let A=0;A<t.length;A++){const e=t[A];"."===e?c+=i+a:"-"===e?c+=n+a:" "===e?c+=r-a:"/"===e&&(c+=o-a)}const l=(c+100)/1e3,u=new OfflineAudioContext(1,Math.ceil(44100*l),44100);let h=.02;for(let A=0;A<t.length;A++){const e=t[A];"."===e?(this.scheduleOfflineTone(u,h,i),h+=(i+a)/1e3):"-"===e?(this.scheduleOfflineTone(u,h,n),h+=(n+a)/1e3):" "===e?h+=(r-a)/1e3:"/"===e&&(h+=(o-a)/1e3)}const d=await u.startRendering();return this.audioBufferToWav(d)}scheduleOfflineTone(t,e,s){const i=t.createOscillator(),n=t.createGain();i.connect(n),n.connect(t.destination),i.frequency.value=this.settings.frequency,i.type="sine";const a=e;n.gain.setValueAtTime(0,a),n.gain.linearRampToValueAtTime(this.settings.volume,a+.001),n.gain.setValueAtTime(this.settings.volume,a+(s-1)/1e3),n.gain.linearRampToValueAtTime(0,a+s/1e3),i.start(a),i.stop(a+s/1e3)}audioBufferToWav(t){const e=t.numberOfChannels,s=t.sampleRate,i=2*e,n=new Float32Array(t.length*e);for(let h=0;h<t.numberOfChannels;h++){const s=t.getChannelData(h);for(let t=0;t<s.length;t++)n[t*e+h]=s[t]}const a=2*n.length,r=44+a,o=new ArrayBuffer(r),c=new DataView(o),l=(t,e)=>{for(let s=0;s<e.length;s++)c.setUint8(t+s,e.charCodeAt(s))};l(0,"RIFF"),c.setUint32(4,r-8,!0),l(8,"WAVE"),l(12,"fmt "),c.setUint32(16,16,!0),c.setUint16(20,1,!0),c.setUint16(22,e,!0),c.setUint32(24,s,!0),c.setUint32(28,s*i,!0),c.setUint16(32,i,!0),c.setUint16(34,16,!0),l(36,"data"),c.setUint32(40,a,!0);let u=44;for(let h=0;h<n.length;h++){const t=Math.max(-1,Math.min(1,n[h])),e=t<0?32768*t:32767*t;c.setInt16(u,e,!0),u+=2}return new Blob([o],{type:"audio/wav"})}}class c{constructor(t,e,s,i={}){this.buffer=t,this.timer=e,this.timings=s,this.callbacks=i,this.keyDown=!1,this.keyDownTime=0,this.evaluations=[]}keyPress(){this.keyDown||(this.keyDown=!0,this.keyDownTime=Date.now(),this.timer.clearAll(),this.callbacks.onKeyPress?.())}keyRelease(){if(!this.keyDown)return;this.keyDown=!1;const t=Date.now()-this.keyDownTime,e=t<2*this.timings.dot?".":"-";this.buffer.addElement(e);const s=n.createRecord(e,t,this.timings),i=n.evaluate(s);this.evaluations.push(i),this.callbacks.onKeyRelease?.(e),this.callbacks.onSequenceUpdate?.(this.buffer.getSequence()),this.callbacks.onTimingEvaluated?.(i),this.notifyBufferUpdate(),this.setupCharWordTimers()}setupCharWordTimers(){this.timer.clearAll();const t=this.timings.charGap;this.timer.set("charGap",()=>{const t=this.buffer.getSequence();if(t){const e=s.morseToText([t]);this.buffer.commitSequence(),this.callbacks.onCharacter?.(t,e||"?"),this.notifyBufferUpdate()}},t);const e=this.timings.wordGap;this.timer.set("wordGap",()=>{const t=this.buffer.getSequence();if(t){const e=s.morseToText([t]);this.buffer.commitSequence(),this.callbacks.onCharacter?.(t,e||"?")}this.buffer.addWordSeparator(),this.callbacks.onWordSeparator?.(),this.notifyBufferUpdate()},e)}notifyBufferUpdate(){const t=this.buffer.getBuffer(),e=t.trim().split(/\s+/),i=s.morseToText(e);this.callbacks.onBufferUpdate?.(t,i)}clear(){this.buffer.clear(),this.timer.clearAll(),this.evaluations=[],this.notifyBufferUpdate()}getBuffer(){return this.buffer.getBuffer()}getSequence(){return this.buffer.getSequence()}getDecoded(){const t=this.buffer.getBuffer().trim().split(/\s+/);return s.morseToText(t)}isKeyDown(){return this.keyDown}getTimerCount(){return this.timer.count()}getTimingStatistics(){return n.calculateStatistics(this.evaluations)}getRecentEvaluations(t){return n.getRecent(this.evaluations,t)}getAllEvaluations(){return[...this.evaluations]}getStatisticsByElement(){const t=n.classifyByElement(this.evaluations);return{dot:n.calculateStatistics(t.dot),dash:n.calculateStatistics(t.dash)}}}class l{constructor(t,e,s,i={},n={}){this.buffer=t,this.timer=e,this.timings=s,this.callbacks=i,this.leftDown=!1,this.rightDown=!1,this.sending=!1,this.lastSent=null,this.forceNextElement=null,this.squeezeDetected=!1,this.isSqueezing=!1,this.evaluations=[],this.iambicMode=n.iambicMode||"A",this.paddleLayout=n.paddleLayout||"normal"}leftPaddlePress(){if(this.leftDown=!0,this.updateSqueezeState(),"B"===this.iambicMode&&this.sending&&this.rightDown){const t="reversed"===this.paddleLayout?"-":".";this.forceNextElement=t,this.squeezeDetected=!0}if(!this.sending){const t="reversed"===this.paddleLayout?"-":".";this.sendPaddleElement(t)}}rightPaddlePress(){if(this.rightDown=!0,this.updateSqueezeState(),"B"===this.iambicMode&&this.sending&&this.leftDown){const t="reversed"===this.paddleLayout?".":"-";this.forceNextElement=t,this.squeezeDetected=!0}if(!this.sending){const t="reversed"===this.paddleLayout?".":"-";this.sendPaddleElement(t)}}leftPaddleRelease(){this.leftDown=!1,this.updateSqueezeState()}rightPaddleRelease(){this.rightDown=!1,this.updateSqueezeState()}sendPaddleElement(t){if(this.sending)return;this.sending=!0,this.timer.clearAll(),this.leftDown&&this.rightDown||(this.squeezeDetected=!1);const e="."===t?this.timings.dot:this.timings.dash;this.callbacks.onElementStart?.(t,e),this.buffer.addElement(t),this.lastSent=t;const s=n.createRecord(t,e,this.timings),i=n.evaluate(s);this.evaluations.push(i),this.callbacks.onTimingEvaluated?.(i),this.callbacks.onSequenceUpdate?.(this.buffer.getSequence()),this.notifyBufferUpdate(),this.timer.set("iambicCheck",()=>{const e=this.leftDown&&this.rightDown;"B"===this.iambicMode&&this.squeezeDetected&&!this.forceNextElement&&(this.forceNextElement="."===t?"-":"."),e&&!this.forceNextElement&&(this.forceNextElement="."===t?"-":".")},Math.max(0,e-5)),this.timer.set("elementEnd",()=>{this.sending=!1,this.callbacks.onElementEnd?.(t),this.forceNextElement||this.leftDown||this.rightDown?this.scheduleNext():this.setupCharWordTimers()},e+this.timings.dot)}scheduleNext(){if(this.forceNextElement){const t=this.forceNextElement;this.forceNextElement=null,this.sendPaddleElement(t)}else if(this.leftDown&&this.rightDown){const t="."===this.lastSent?"-":".";this.sendPaddleElement(t)}else if(this.leftDown){const t="reversed"===this.paddleLayout?"-":".";this.sendPaddleElement(t)}else if(this.rightDown){const t="reversed"===this.paddleLayout?".":"-";this.sendPaddleElement(t)}}setupCharWordTimers(){this.timer.clearAll(),this.timer.set("charGap",()=>{const t=this.buffer.getSequence();if(t){const e=s.morseToText([t]);this.buffer.commitSequence(),this.callbacks.onCharacter?.(t,e||"?"),this.notifyBufferUpdate()}},this.timings.charGap),this.timer.set("wordGap",()=>{const t=this.buffer.getSequence();if(t){const e=s.morseToText([t]);this.buffer.commitSequence(),this.callbacks.onCharacter?.(t,e||"?")}this.buffer.addWordSeparator(),this.callbacks.onWordSeparator?.(),this.notifyBufferUpdate()},this.timings.wordGap)}updateSqueezeState(){const t=this.leftDown&&this.rightDown;this.isSqueezing!==t&&(this.isSqueezing=t,this.callbacks.onSqueezeChange?.(t))}notifyBufferUpdate(){const t=this.buffer.getBuffer(),e=t.trim().split(/\s+/),i=s.morseToText(e);this.callbacks.onBufferUpdate?.(t,i)}clear(){this.buffer.clear(),this.timer.clearAll(),this.sending=!1,this.forceNextElement=null,this.squeezeDetected=!1,this.lastSent=null,this.evaluations=[],this.notifyBufferUpdate()}getBuffer(){return this.buffer.getBuffer()}getSequence(){return this.buffer.getSequence()}getDecoded(){const t=this.buffer.getBuffer().trim().split(/\s+/);return s.morseToText(t)}isLeftPaddleDown(){return this.leftDown}isRightPaddleDown(){return this.rightDown}isSending(){return this.sending}isSqueezingNow(){return this.isSqueezing}setIambicMode(t){this.iambicMode=t}setPaddleLayout(t){this.paddleLayout=t}getIambicMode(){return this.iambicMode}getPaddleLayout(){return this.paddleLayout}getTimingStatistics(){return n.calculateStatistics(this.evaluations)}getRecentEvaluations(t){return n.getRecent(this.evaluations,t)}getAllEvaluations(){return[...this.evaluations]}getStatisticsByElement(){const t=n.classifyByElement(this.evaluations);return{dot:n.calculateStatistics(t.dot),dash:n.calculateStatistics(t.dash)}}}const u=["K","M","U","R","E","S","N","A","P","T","L","W","I",".","J","Z","=","F","O","Y",",","V","G","5","/","Q","9","2","H","3","8","B","?","4","7","C","1","D","6","0","X"];class h{constructor(t=1){this.currentLesson=1,this.currentLesson=Math.max(1,Math.min(40,t))}static getCharsForLesson(t){const e=Math.max(1,Math.min(40,t));return u.slice(0,e+1)}static generateRandomGroups(t,e={}){const s=e.groupSize||5,i=e.duration||60,n=e.wpm||20,a=Math.floor(i*n/(5*s)),r=[];for(let o=0;o<a;o++){let e="";for(let i=0;i<s;i++){e+=t[Math.floor(Math.random()*t.length)]}r.push(e)}return r}static generateCustomGroups(t,e={}){const s=Array.from(t);if(s.length<2)throw new Error("文字セットには最低2文字必要です");return h.generateRandomGroups(s,e)}static calculateAccuracy(t,e){if(!e)return 0;const s=t.replace(/\s/g,""),i=e.replace(/\s/g,""),n=Math.max(s.length,i.length);if(0===n)return 0;let a=0;for(let r=0;r<n;r++)s[r]===i[r]&&a++;return a/n*100}static isPassed(t){return t>=90}getCurrentLesson(){return this.currentLesson}setCurrentLesson(t){this.currentLesson=Math.max(1,Math.min(40,t))}getCurrentChars(){return h.getCharsForLesson(this.currentLesson)}generatePractice(t={}){const e=this.getCurrentChars();return h.generateRandomGroups(e,t)}advanceLesson(){return this.currentLesson<40&&this.currentLesson++,this.currentLesson}previousLesson(){return this.currentLesson>1&&this.currentLesson--,this.currentLesson}isLastLesson(){return 40===this.currentLesson}isFirstLesson(){return 1===this.currentLesson}static getTotalLessons(){return 40}static getTotalChars(){return u.length}static getAllChars(){return[...u]}}
//! 日本の都市名（ローマ字）。
const d=["TOKYO","OSAKA","KYOTO","NAGOYA","YOKOHAMA","KOBE","FUKUOKA","SAPPORO","SENDAI","HIROSHIMA","KAWASAKI","SAITAMA","CHIBA","KITAKYUSHU","SAKAI","NIIGATA","HAMAMATSU","KUMAMOTO","OKAYAMA","SAGAMIHARA","SHIZUOKA","KAGOSHIMA","MATSUYAMA","GIFU","UTSUNOMIYA","KANAZAWA","TOYAMA","NARA","NAGASAKI","OITA","KOCHI","MIYAZAKI","NAHA","WAKAYAMA","AOMORI","AKITA","FUKUSHIMA","MORIOKA","MAEBASHI","KOFU","MATSUMOTO","TOYOHASHI","FUKUI","OTSU","TSU","YOKKAICHI","MATSUE","TOTTORI","YAMAGUCHI","TOKUSHIMA","TAKAMATSU","MITO","KORIYAMA","IWAKI","TAKASAKI","HACHIOJI","MACHIDA","KURASHIKI","HIMEJI","NISHINOMIYA","AMAGASAKI","TAKATSUKI","TOYONAKA","SUITA","KAWAGUCHI","FUNABASHI","HAKODATE","ASAHIKAWA","OTARU","KUSHIRO","OBIHIRO","TOMAKOMAI","IWAMIZAWA","HACHINOHE","HIROSAKI","ISHINOMAKI","YAMAGATA","TSURUOKA","YONEZAWA","HITACHI","TSUKUBA","KASUKABE","KAWAGOE","TOKOROZAWA","AGEO","FUCHU","CHOFU","HINO","KOKUBUNJI","ATSUGI","ODAWARA","HIRATSUKA","FUJISAWA","KAMAKURA","ZUSHI","NUMAZU","FUJI","MISHIMA","KAKEGAWA","IWATA"],A=["JOHN","MIKE","TOM","DAVE","BOB","BILL","JIM","JACK","FRANK","PAUL","MARK","DAN","KEN","RON","RICK","STEVE","GEORGE","PETE","RAY","AL","FRED","JEFF","GARY","LARRY","DOUG","DENNIS","RANDY","SCOTT","BRIAN","BRUCE","ERIC","KEVIN","CRAIG","GLENN","GREG","WAYNE","CARL","TONY","KEITH","CHRIS","DONALD","EDWARD","JOSEPH","RICHARD","ROBERT","CHARLES","WILLIAM","THOMAS","JAMES","PATRICK","HENRY","HAROLD","HOWARD","WALTER","ARTHUR","ALBERT","EUGENE","RALPH","LAWRENCE","HERBERT","CLARENCE","ERNEST","WILLIE","ANDREW","SAMUEL","LOUIS","OSCAR","LEONARD","ROY","EARL","CHESTER","CLIFFORD","NORMAN","CLYDE","HOMER","STANLEY","LESTER","MORRIS","RAYMOND","LEWIS","LEON","EDDIE","CHARLIE","FLOYD","FRED","MARTIN","MELVIN","MARVIN","IRVING","HARVEY","SAM","MAX","MACK","JOE","ABE","HARRY","NED","GUS","BERT","EARL"],E=["FT-991A","FT-891","FT-857D","FT-450D","FT-101ES","IC-7300","IC-7610","IC-9700","IC-705","IC-718","TS-590SG","TS-590S","TS-480SAT","TS-850S","TS-2000"],T=["599","589","579","569","559","449","339"],m=[{id:"qso-rubberstamp-1",category:"qso",title:"ラバースタンプQSO例: 完全な交信",dialog:[{side:"A",text:"CQ CQ CQ DE JF2SDR JF2SDR PSE K"},{side:"B",text:"JF2SDR DE JR2ZWA JR2ZWA K"},{side:"A",text:"R JR2ZWA DE JF2SDR GM OM TNX FER UR CALL BT UR RST IS 599 599 BT MI QTH IS NAGOYA NAGOYA CITY ES MI NAME IS SHIN SHIN HW ? AR JF2SDR DE JF2SDR KN"},{side:"B",text:"R JF2SDR DE JR2ZWA GM DR SHIN OM TKS FER FB RPT 599 FM NAGOYA BT UR RST ALSO 599 599 VY FB MI QTH IS GIFU GIFU CITY BT NAME IS HIRO HIRO HW? JF2SDR DE JR2ZWA KN"},{side:"A",text:"R FB DE JF2SDR DR HIRO OM BT MI RIG IS TS-850S PWR 100W ES ANT IS 3ELE YAGI 12MH BT PSE UR QSL CRD VIA JARL ? MI CRD SURE HW? AR JR2ZWA DE JF2SDR KN"},{side:"B",text:"R JF2SDR DE JR2ZWA OK SHIN OM BT UR RIG ES ANT VY FB BT MI RIG IS FT-101ES VY OLD RIG ES ANT IS DP 8MH BT QSL VIA JARL OK SURE BT TNX FB 1ST QSO ES 73 AR JF2SDR DE JR2ZWA VA"},{side:"A",text:"OK HIRO SOLID CPI BT TKS FB QSO ES BEST 73 AR JR2ZWA DE JF2SDR VA TU E E"}]},{id:"qso-short-1",category:"qso",title:"QSO例: 短い交信（CQ呼び出しと応答）",dialog:[{side:"A",text:"CQ CQ CQ DE JA1ABC JA1ABC PSE K"},{side:"B",text:"JA1ABC DE JE1XYZ JE1XYZ K"},{side:"A",text:"R JE1XYZ DE JA1ABC TKS UR RST 599 QTH TOKYO TKS QSO 73 AR JA1ABC DE JA1ABC VA"},{side:"B",text:"R JA1ABC DE JE1XYZ TKS 599 QTH OSAKA 73 AR JE1XYZ VA"}]},{id:"qso-short-2",category:"qso",title:"QSO例: 挨拶と信号報告のみ",dialog:[{side:"A",text:"CQ DX CQ DX DE JH8ZZZ JH8ZZZ K"},{side:"B",text:"JH8ZZZ DE VK2AAA VK2AAA K"},{side:"A",text:"R VK2AAA DE JH8ZZZ GM UR RST 579 NAME TARO QTH SAPPORO HW? AR JH8ZZZ KN"},{side:"B",text:"R JH8ZZZ DE VK2AAA TKS TARO UR RST 589 NAME JOHN QTH SYDNEY 73 AR VK2AAA VA"},{side:"A",text:"R VK2AAA TNX QSO 73 AR JH8ZZZ VA TU"}]}],S=[{id:"text100-1",category:"text100",title:"英文例1: 自己紹介",content:"MY NAME IS JOHN. I LIVE IN TOKYO JAPAN. I AM A STUDENT AT THE UNIVERSITY. I ENJOY LEARNING MORSE CODE IN MY FREE TIME."},{id:"text100-2",category:"text100",title:"英文例2: 天気",content:"THE WEATHER TODAY IS VERY NICE. IT IS SUNNY AND WARM. I WENT FOR A WALK IN THE PARK. MANY PEOPLE WERE ENJOYING THE SUNSHINE."},{id:"text100-3",category:"text100",title:"英文例3: 趣味",content:"I HAVE MANY HOBBIES. I LIKE READING BOOKS AND LISTENING TO MUSIC. ON WEEKENDS I PLAY TENNIS WITH MY FRIENDS. WE HAVE A LOT OF FUN."}],I=[{id:"text200-1",category:"text200",title:"英文例1: アマチュア無線の歴史",content:"AMATEUR RADIO HAS A LONG AND RICH HISTORY. IT BEGAN IN THE EARLY TWENTIETH CENTURY WHEN ENTHUSIASTS STARTED EXPERIMENTING WITH RADIO WAVES. MORSE CODE WAS THE PRIMARY MODE OF COMMUNICATION. TODAY AMATEUR RADIO CONTINUES TO BE A POPULAR HOBBY AROUND THE WORLD. OPERATORS USE VARIOUS MODES INCLUDING CW SSB AND DIGITAL MODES. IT IS A GREAT WAY TO MAKE FRIENDS AND LEARN ABOUT TECHNOLOGY."},{id:"text200-2",category:"text200",title:"英文例2: 旅行の思い出",content:"LAST SUMMER I WENT ON A TRIP TO KYOTO. IT WAS MY FIRST TIME VISITING THE ANCIENT CAPITAL OF JAPAN. I VISITED MANY FAMOUS TEMPLES AND SHRINES. THE ARCHITECTURE WAS BEAUTIFUL AND THE GARDENS WERE PEACEFUL. I ALSO ENJOYED TRYING LOCAL FOODS LIKE TOFU AND GREEN TEA. THE PEOPLE WERE VERY FRIENDLY AND HELPFUL. I TOOK MANY PHOTOS TO REMEMBER THIS WONDERFUL EXPERIENCE. I HOPE TO RETURN SOMEDAY."}],R=[{id:"text300-1",category:"text300",title:"英文例1: モールス符号の学習",content:"LEARNING MORSE CODE IS A REWARDING EXPERIENCE. AT FIRST IT MAY SEEM DIFFICULT BUT WITH REGULAR PRACTICE IT BECOMES EASIER. THE KOCH METHOD IS ONE OF THE MOST EFFECTIVE WAYS TO LEARN. IT STARTS WITH JUST TWO CHARACTERS AND GRADUALLY ADDS MORE. THIS APPROACH HELPS YOU LEARN AT A STEADY PACE. LISTENING PRACTICE IS ALSO VERY IMPORTANT. YOU SHOULD TRY TO COPY REAL MORSE CODE TRANSMISSIONS. MANY ONLINE RESOURCES ARE AVAILABLE TO HELP YOU PRACTICE. JOINING AN AMATEUR RADIO CLUB CAN ALSO BE BENEFICIAL. YOU CAN MEET OTHER ENTHUSIASTS AND SHARE EXPERIENCES. WITH DEDICATION AND PATIENCE YOU WILL MASTER MORSE CODE AND ENJOY USING IT IN YOUR RADIO COMMUNICATIONS."},{id:"text300-2",category:"text300",title:"英文例2: 無線交信の楽しみ",content:"AMATEUR RADIO OFFERS MANY EXCITING OPPORTUNITIES. ONE OF THE GREATEST JOYS IS MAKING CONTACT WITH STATIONS AROUND THE WORLD. YOU CAN TALK TO PEOPLE FROM DIFFERENT COUNTRIES AND CULTURES. EACH CONTACT IS UNIQUE AND SPECIAL. SOME OPERATORS ENJOY CONTESTS WHERE THEY TRY TO MAKE AS MANY CONTACTS AS POSSIBLE. OTHERS PREFER RELAXED CONVERSATIONS ABOUT HOBBIES AND DAILY LIFE. DX CONTACTS WITH DISTANT STATIONS ARE PARTICULARLY THRILLING. THE THRILL OF HEARING A WEAK SIGNAL FROM FAR AWAY IS UNFORGETTABLE. OPERATING PORTABLE FROM MOUNTAINTOPS OR PARKS IS ALSO FUN. YOU CAN COMBINE YOUR LOVE OF RADIO WITH OUTDOOR ACTIVITIES. AMATEUR RADIO IS MORE THAN A HOBBY IT IS A LIFELONG PASSION."}];
//! 名前（ファーストネーム）。
class g{static generateCallsign(){const t=["JA","JE","JF","JH","JI","JJ","JK","JL","JM","JN","JO","JP","JQ","JR"];return`${t[Math.floor(Math.random()*t.length)]}${Math.floor(10*Math.random())}${String.fromCharCode(65+Math.floor(26*Math.random()))+String.fromCharCode(65+Math.floor(26*Math.random()))+String.fromCharCode(65+Math.floor(26*Math.random()))}`}static randomChoice(t){return t[Math.floor(Math.random()*t.length)]}static generateRandomQSO(){const t=this.generateCallsign(),e=this.generateCallsign(),s=this.randomChoice(d),i=this.randomChoice(d),n=this.randomChoice(A),a=this.randomChoice(A),r=this.randomChoice(T),o=this.randomChoice(T),c=this.randomChoice(E),l=this.randomChoice(E),u=this.randomChoice(["GM","GA","GE","GN"]);return{id:`qso-random-${Date.now()}`,category:"qso",title:"ランダムQSO",dialog:[{side:"A",text:`CQ CQ CQ DE ${t} ${t} PSE K`},{side:"B",text:`${t} DE ${e} ${e} K`},{side:"A",text:`R ${e} DE ${t} ${u} OM TNX FER UR CALL BT UR RST IS ${o} ${o} BT MI QTH IS ${s} ${s} ES MI NAME IS ${n} ${n} HW ? AR ${t} DE ${t} KN`},{side:"B",text:`R ${t} DE ${e} ${u} DR ${n} OM TKS FER FB RPT ${o} FM ${s} BT UR RST ALSO ${r} ${r} VY FB MI QTH IS ${i} ${i} BT NAME IS ${a} ${a} HW? ${t} DE ${e} KN`},{side:"A",text:`R FB DE ${t} DR ${a} OM BT MI RIG IS ${c} PWR 100W BT PSE UR QSL CRD VIA JARL ? MI CRD SURE HW? AR ${e} DE ${t} KN`},{side:"B",text:`R ${t} DE ${e} OK ${n} OM BT UR RIG ${c} VY FB BT MI RIG IS ${l} BT QSL VIA JARL OK SURE BT TNX FB QSO ES 73 AR ${t} DE ${e} VA`},{side:"A",text:`OK ${a} SOLID CPI BT TKS FB QSO ES BEST 73 AR ${e} DE ${t} VA TU E E`}]}}static getBuiltinTemplates(t){if(!t)return[...m,...S,...I,...R];switch(t){case"qso":return[...m];case"text100":return[...S];case"text200":return[...I];case"text300":return[...R];default:return[]}}static getTemplateById(t){return this.getBuiltinTemplates().find(e=>e.id===t)}static calculateAccuracy(t,e){if(!e)return 0;
//! 空白を除去して大文字化して比較。
const s=t.replace(/\s/g,"").toUpperCase(),i=e.replace(/\s/g,"").toUpperCase(),n=Math.max(s.length,i.length);if(0===n)return 0;let a=0;for(let r=0;r<n;r++)s[r]===i[r]&&a++;return Math.round(a/n*100)}static isPassed(t,e=90){return t>=e}static getTemplateCounts(){return{qso:m.length,text100:S.length,text200:I.length,text300:R.length}}static getTotalTemplateCount(){return m.length+S.length+I.length+R.length}}class O{static shuffleCards(t){const e=[...t];for(let s=e.length-1;s>0;s--){const t=Math.floor(Math.random()*(s+1));[e[s],e[t]]=[e[t],e[s]]}return e}static generateExamQuestions(t,e,s){if(0===t.length)return[];const i=Math.min(s,t.length);return this.shuffleCards(t).slice(0,i).map(s=>this.createQuestion(s,t,e))}static createQuestion(t,e,s){
//! 正解以外のエントリーから3つ選ぶ。
const i=e.filter(e=>e.abbreviation!==t.abbreviation).sort(()=>Math.random()-.5).slice(0,3);let n,a;switch(s){case"abbr-to-meaning":case"morse-to-meaning":n=`${t.english} / ${t.japanese}`,a=[n,...i.map(t=>`${t.english} / ${t.japanese}`)];break;case"meaning-to-abbr":case"morse-to-abbr":n=t.abbreviation,a=[n,...i.map(t=>t.abbreviation)]}
//! 選択肢をシャッフル。
return a=a.sort(()=>Math.random()-.5),{type:s,entry:t,choices:a,correctAnswer:n}}static checkAnswer(t,e){return e===t.correctAnswer}static calculateScore(t){const e=t.length,s=t.filter(t=>t.isCorrect).length;return{correct:s,total:e,percentage:e>0?Math.round(s/e*100):0}}static isPassed(t,e=80){return t>=e}static getWrongAnswers(t){return t.filter(t=>!t.isCorrect).map(t=>t.question.entry)}static getCorrectAnswers(t){return t.filter(t=>t.isCorrect).map(t=>t.question.entry)}static filterByTags(t,e){return 0===e.size?t:t.filter(t=>{const s=t.tags.split(",").map(t=>t.trim());return Array.from(e).some(t=>s.includes(t))})}static filterByFrequencies(t,e){return 0===e.size?t:t.filter(t=>e.has(t.frequency))}static filterByQuery(t,e){if(!e.trim())return t;const s=e.toLowerCase();return t.filter(t=>t.abbreviation.toLowerCase().includes(s)||t.english.toLowerCase().includes(s)||t.japanese.includes(e)||t.tags.toLowerCase().includes(s))}static getAllTags(t){const e=new Set;return t.forEach(t=>{t.tags.split(",").forEach(t=>{const s=t.trim();s&&e.add(s)})}),Array.from(e).sort()}static sortByAbbreviation(t,e=!0){const s=[...t];return s.sort((t,s)=>{const i=t.abbreviation.localeCompare(s.abbreviation);return e?i:-i}),s}static sortByFrequency(t,e=!1){const s=[...t];return s.sort((t,s)=>{const i=t.frequency-s.frequency;return e?i:-i}),s}static sortByEnglish(t,e=!0){const s=[...t];return s.sort((t,s)=>{const i=t.english.localeCompare(s.english);return e?i:-i}),s}static sortByJapanese(t,e=!0){const s=[...t];return s.sort((t,s)=>{const i=t.japanese.localeCompare(s.japanese,"ja");return e?i:-i}),s}static sortByTags(t,e=!0){const s=[...t];return s.sort((t,s)=>{const i=t.tags.localeCompare(s.tags);return e?i:-i}),s}}const f=class{static saveProgress(t){try{const e={known:Array.from(t.known),unknown:Array.from(t.unknown)};localStorage.setItem(`${this.STORAGE_PREFIX}progress`,JSON.stringify(e))}catch(e){}}static loadProgress(){try{const t=localStorage.getItem(`${this.STORAGE_PREFIX}progress`);if(t){const e=JSON.parse(t);return{known:new Set(e.known||[]),unknown:new Set(e.unknown||[])}}}catch(t){}return{known:new Set,unknown:new Set}}static clearProgress(){try{localStorage.removeItem(`${this.STORAGE_PREFIX}progress`)}catch(t){}}static saveFilters(t){try{const e={selectedTags:Array.from(t.selectedTags),selectedFrequencies:Array.from(t.selectedFrequencies),searchQuery:t.searchQuery};localStorage.setItem(`${this.STORAGE_PREFIX}filters`,JSON.stringify(e))}catch(e){}}static loadFilters(){try{const t=localStorage.getItem(`${this.STORAGE_PREFIX}filters`);if(t){const e=JSON.parse(t);return{selectedTags:new Set(e.selectedTags||[]),selectedFrequencies:new Set(e.selectedFrequencies||[5]),searchQuery:e.searchQuery||""}}}catch(t){}return{selectedTags:new Set,selectedFrequencies:new Set([5]),searchQuery:""}}static saveViewState(t){try{localStorage.setItem(`${this.STORAGE_PREFIX}viewState`,JSON.stringify(t))}catch(e){}}static loadViewState(){try{const t=localStorage.getItem(`${this.STORAGE_PREFIX}viewState`);if(t)return JSON.parse(t)}catch(t){}return{viewMode:"browse",displayMode:"card",sortColumn:"abbreviation",sortDirection:"asc",learnQuestionType:"abbr-to-meaning",examQuestionType:"abbr-to-meaning"}}static saveViewMode(t){const e=this.loadViewState();e.viewMode=t,this.saveViewState(e)}static saveDisplayMode(t){const e=this.loadViewState();e.displayMode=t,this.saveViewState(e)}static saveLearnQuestionType(t){const e=this.loadViewState();e.learnQuestionType=t,this.saveViewState(e)}static saveExamQuestionType(t){const e=this.loadViewState();e.examQuestionType=t,this.saveViewState(e)}static saveSortState(t,e){const s=this.loadViewState();s.sortColumn=t,s.sortDirection=e,this.saveViewState(s)}};f.STORAGE_PREFIX="v10.flashcard.";let y=f;
//! 画面の種類。
//! 入力タイプ。
//! 設定項目の定義。
//! 設定値の型。
//! モーダルのコールバック関数。
class p{constructor(t,e,s,i){this.modalId=t,this.items=e,this.currentValues={...s},this.initialValues={...s},this.callbacks=i}show(t){
//! この画面用の設定項目をフィルタリングして優先度順にソート。
const e=this.items.filter(e=>e.screens.includes(t)).sort((t,e)=>t.priority-e.priority),s=this.generateModalHTML(e);
//! モーダルのHTMLを生成。
//! DOMに追加。
document.body.insertAdjacentHTML("beforeend",s),
//! イベントリスナーを設定。
this.attachEventListeners(e)}generateModalHTML(t){
//! FlashcardかListeningかで使い分ける。
return this.modalId.includes("flashcard")?`\n\t\t\t\t<div class="settings-modal active" id="${this.modalId}">\n\t\t\t\t\t<div class="settings-content">\n\t\t\t\t\t\t<h2>設定</h2>\n\t\t\t\t\t\t<div class="settings-grid">\n\t\t\t\t\t\t\t${t.map(t=>this.generateSettingItemHTML(t)).join("")}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="settings-buttons">\n\t\t\t\t\t\t\t<button id="${this.modalId}-cancel" class="secondary-button">キャンセル</button>\n\t\t\t\t\t\t\t<button id="${this.modalId}-save" class="primary-button">OK</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`:`\n\t\t\t\t<div class="modal" id="${this.modalId}">\n\t\t\t\t\t<div class="modal-content">\n\t\t\t\t\t\t<div class="modal-header">\n\t\t\t\t\t\t\t<h2>設定</h2>\n\t\t\t\t\t\t\t<button id="${this.modalId}-close" class="close-btn">×</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="modal-body">\n\t\t\t\t\t\t\t${t.map(t=>this.generateSettingItemHTML(t)).join("")}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="modal-footer">\n\t\t\t\t\t\t\t<button id="${this.modalId}-cancel" class="btn">キャンセル</button>\n\t\t\t\t\t\t\t<button id="${this.modalId}-save" class="btn primary">OK</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`}generateSettingItemHTML(t){const e=this.currentValues[t.key];switch(t.inputType){case"number":return`\n\t\t\t\t\t<div class="setting-item">\n\t\t\t\t\t\t<label for="${this.modalId}-${t.key}">${t.label}</label>\n\t\t\t\t\t\t<input type="number" id="${this.modalId}-${t.key}"\n\t\t\t\t\t\t\tmin="${t.min}" max="${t.max}" step="${t.step||1}"\n\t\t\t\t\t\t\tvalue="${e}" data-key="${t.key}">\n\t\t\t\t\t</div>\n\t\t\t\t`;case"range-with-number":return`\n\t\t\t\t\t<div class="setting-item">\n\t\t\t\t\t\t<label for="${this.modalId}-${t.key}-range">${t.label}</label>\n\t\t\t\t\t\t<input type="range" id="${this.modalId}-${t.key}-range"\n\t\t\t\t\t\t\tmin="${t.min}" max="${t.max}" step="${t.step||1}"\n\t\t\t\t\t\t\tvalue="${e}" data-key="${t.key}">\n\t\t\t\t\t\t<input type="number" id="${this.modalId}-${t.key}-number"\n\t\t\t\t\t\t\tmin="${t.min}" max="${t.max}" step="${t.step||1}"\n\t\t\t\t\t\t\tvalue="${e}" data-key="${t.key}">\n\t\t\t\t\t\t${t.unit?`<span>${t.unit}</span>`:""}\n\t\t\t\t\t</div>\n\t\t\t\t`;case"button":return`\n\t\t\t\t\t<div class="setting-item">\n\t\t\t\t\t\t<span>${t.label}</span>\n\t\t\t\t\t\t<button id="${this.modalId}-${t.key}" class="${t.buttonClass||"test-button"}">${t.buttonText||"再生"}</button>\n\t\t\t\t\t</div>\n\t\t\t\t`;case"checkbox":return`\n\t\t\t\t\t<div class="setting-item">\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<input type="checkbox" id="${this.modalId}-${t.key}"\n\t\t\t\t\t\t\t\tdata-key="${t.key}" ${e?"checked":""}>\n\t\t\t\t\t\t\t${t.label}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t`;case"select":return`\n\t\t\t\t\t<div class="setting-item">\n\t\t\t\t\t\t<label for="${this.modalId}-${t.key}">${t.label}</label>\n\t\t\t\t\t\t<select id="${this.modalId}-${t.key}" data-key="${t.key}">\n\t\t\t\t\t\t\t${(t.options||[]).map(t=>`\n\t\t\t\t\t\t\t\t<option value="${t.value}" ${e===t.value?"selected":""}>${t.label}</option>\n\t\t\t\t\t\t\t`).join("")}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t`;case"keybinding":const s="string"==typeof e?e.replace(/^Key/,""):e;return`\n\t\t\t\t\t<div class="setting-item">\n\t\t\t\t\t\t<label for="${this.modalId}-${t.key}">${t.label}</label>\n\t\t\t\t\t\t<input type="text" id="${this.modalId}-${t.key}" class="keybinding-input"\n\t\t\t\t\t\t\tvalue="${s}" readonly placeholder="キーを押してください" data-key="${t.key}">\n\t\t\t\t\t\t${t.hint?`<span class="key-hint">${t.hint}</span>`:""}\n\t\t\t\t\t</div>\n\t\t\t\t`;default:return""}}attachEventListeners(t){const e=document.getElementById(this.modalId);e&&(
//! 各設定項目のイベントリスナー。
t.forEach(t=>{if("range-with-number"===t.inputType){
//! レンジとナンバーの同期。
const e=document.getElementById(`${this.modalId}-${t.key}-range`),s=document.getElementById(`${this.modalId}-${t.key}-number`);e?.addEventListener("input",()=>{s.value=e.value,this.currentValues[t.key]=parseFloat(e.value)}),s?.addEventListener("input",()=>{e.value=s.value,this.currentValues[t.key]=parseFloat(s.value)})}else if("number"===t.inputType){const e=document.getElementById(`${this.modalId}-${t.key}`);e?.addEventListener("input",()=>{this.currentValues[t.key]=parseFloat(e.value)})}else if("button"===t.inputType&&"testPlay"===t.key)
//! テスト再生ボタン。
document.getElementById(`${this.modalId}-${t.key}`)?.addEventListener("click",()=>{this.callbacks.onTestPlay?.()});else if("checkbox"===t.inputType){const e=document.getElementById(`${this.modalId}-${t.key}`);e?.addEventListener("change",()=>{this.currentValues[t.key]=e.checked})}else if("select"===t.inputType){const e=document.getElementById(`${this.modalId}-${t.key}`);e?.addEventListener("change",()=>{this.currentValues[t.key]=e.value})}else if("keybinding"===t.inputType){const e=document.getElementById(`${this.modalId}-${t.key}`);e?.addEventListener("click",()=>{e.value="キーを押してください...",e.classList.add("waiting-key")}),e?.addEventListener("keydown",s=>{s.preventDefault(),s.stopPropagation(),this.currentValues[t.key]=s.code,e.value=s.code.replace(/^Key/,""),e.classList.remove("waiting-key")})}}),
//! 保存ボタン。
document.getElementById(`${this.modalId}-save`)?.addEventListener("click",()=>{this.callbacks.onSave(this.currentValues),this.close()}),
//! キャンセルボタン。
document.getElementById(`${this.modalId}-cancel`)?.addEventListener("click",()=>{this.currentValues={...this.initialValues},this.callbacks.onCancel(),this.close()}),
//! 閉じるボタン（×）。
document.getElementById(`${this.modalId}-close`)?.addEventListener("click",()=>{this.currentValues={...this.initialValues},this.callbacks.onCancel(),this.close()}),
//! モーダル外クリックで閉じる。
e.addEventListener("click",t=>{t.target===e&&(this.currentValues={...this.initialValues},this.callbacks.onCancel(),this.close())}))}close(){document.getElementById(this.modalId)?.remove()}}const N=[
//! Flashcard, Koch, 電鍵練習用の設定。
{screens:["flashcard","koch","horizontal-key","vertical-key"],priority:10,key:"volume",label:"音量",inputType:"range-with-number",min:0,max:100,step:1,unit:"%"},{screens:["flashcard","koch","horizontal-key","vertical-key"],priority:20,key:"frequency",label:"周波数 (Hz)",inputType:"number",min:400,max:1200,step:50},{screens:["flashcard","koch","horizontal-key","vertical-key"],priority:30,key:"wpm",label:"WPM (速度: 5-40)",inputType:"number",min:5,max:40,step:1},
//! Listening専用の設定。
{screens:["listening"],priority:5,key:"characterSpeed",label:"文字速度 (WPM)",inputType:"number",min:5,max:40,step:1},{screens:["listening"],priority:6,key:"effectiveSpeed",label:"実効速度 (WPM)",inputType:"number",min:5,max:40,step:1},{screens:["listening"],priority:20,key:"frequency",label:"周波数 A側 (Hz)",inputType:"number",min:400,max:1e3,step:10},{screens:["listening"],priority:21,key:"bFrequency",label:"周波数 B側 (Hz)",inputType:"number",min:400,max:1e3,step:10},{screens:["listening"],priority:10,key:"volume",label:"音量",inputType:"range-with-number",min:0,max:100,step:5,unit:"%"},
//! テスト再生ボタン。
{screens:["flashcard","listening"],priority:100,key:"testPlay",label:"テスト再生",inputType:"button",buttonText:"再生",buttonClass:"test-button"},
//! Koch専用の設定。
{screens:["koch"],priority:5,key:"characterSpeed",label:"文字速度 (WPM: 5-40)",inputType:"number",min:5,max:40,step:1},{screens:["koch"],priority:6,key:"effectiveSpeed",label:"実効速度 (WPM: 5-40)",inputType:"number",min:5,max:40,step:1},{screens:["koch"],priority:40,key:"practiceDuration",label:"練習時間 (秒: 30-300)",inputType:"number",min:30,max:300,step:30},{screens:["koch"],priority:50,key:"groupSize",label:"グループサイズ (文字: 3-10)",inputType:"number",min:3,max:10,step:1},{screens:["koch"],priority:60,key:"showInput",label:"入力を表示",inputType:"checkbox"},
//! HorizontalKey専用の設定。
{screens:["horizontal-key"],priority:40,key:"iambicMode",label:"Iambicモード",inputType:"select",options:[{value:"A",label:"Iambic A"},{value:"B",label:"Iambic B"}]},{screens:["horizontal-key"],priority:50,key:"paddleLayout",label:"パドルレイアウト",inputType:"select",options:[{value:"normal",label:"標準（左=dit / 右=dah）"},{value:"reversed",label:"反転（左=dah / 右=dit）"}]},{screens:["horizontal-key"],priority:60,key:"leftKeyCode",label:"左パドルキー",inputType:"keybinding",hint:"クリックしてキーを押す"},{screens:["horizontal-key"],priority:70,key:"rightKeyCode",label:"右パドルキー",inputType:"keybinding",hint:"クリックしてキーを押す"},
//! VerticalKey専用の設定。
{screens:["vertical-key"],priority:40,key:"keyCode",label:"キーバインド",inputType:"keybinding",hint:"クリックしてキーを押す"}];export{o as $,y as B,g as F,O as G,l as K,u as M,h as N,c as P,p as W,N as Y,s as g,a as k,r as w,i as x};
//# sourceMappingURL=morse-engine-DI_l1cPG.js.map
