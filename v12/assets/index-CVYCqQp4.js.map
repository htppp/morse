{"version":3,"file":"index-CVYCqQp4.js","sources":["../../src/i18n/index.ts","../../src/ui/components/LanguageSwitcher.ts","../../src/ui/views/MenuView.ts","../../src/ui/views/VerticalKeyView.ts","../../src/ui/views/HorizontalKeyView.ts","../../src/utils/flashcard-loader.ts","../../src/ui/views/FlashcardView.ts","../../src/ui/views/KochView.ts","../../src/ui/views/ListeningView.ts","../../src/utils/download-helper.ts","../../src/router/index.ts","../../src/main.ts"],"sourcesContent":["/**\n * 国際化（i18n）システム\n */\n\nimport jaTranslations from './locales/ja.json';\nimport enTranslations from './locales/en.json';\nimport type { Translations, Language } from './types';\n\n/**\n * サポートされている言語\n */\nexport const SUPPORTED_LANGUAGES: Language[] = ['ja', 'en'];\n\n/**\n * デフォルト言語\n */\nexport const DEFAULT_LANGUAGE: Language = 'ja';\n\n/**\n * LocalStorageのキー\n */\nconst STORAGE_KEY = 'morse-app-language';\n\n/**\n * 翻訳データ\n */\nconst translations: Record<Language, Translations> = {\n\tja: jaTranslations as Translations,\n\ten: enTranslations as Translations\n};\n\n/**\n * 現在の言語\n */\nlet currentLanguage: Language = DEFAULT_LANGUAGE;\n\n/**\n * 言語変更時のコールバック\n */\ntype LanguageChangeCallback = (language: Language) => void;\nconst languageChangeCallbacks: LanguageChangeCallback[] = [];\n\n/**\n * ブラウザの言語設定を検出\n */\nfunction detectBrowserLanguage(): Language {\n\tconst browserLang = navigator.language.toLowerCase();\n\n\t// 完全一致をチェック\n\tif (SUPPORTED_LANGUAGES.includes(browserLang as Language)) {\n\t\treturn browserLang as Language;\n\t}\n\n\t// 言語コードのプレフィックスをチェック（例: \"en-US\" -> \"en\"）\n\tconst langPrefix = browserLang.split('-')[0];\n\tif (SUPPORTED_LANGUAGES.includes(langPrefix as Language)) {\n\t\treturn langPrefix as Language;\n\t}\n\n\treturn DEFAULT_LANGUAGE;\n}\n\n/**\n * 保存されている言語設定を読み込む\n */\nfunction loadSavedLanguage(): Language {\n\ttry {\n\t\tconst saved = localStorage.getItem(STORAGE_KEY);\n\t\tif (saved && SUPPORTED_LANGUAGES.includes(saved as Language)) {\n\t\t\treturn saved as Language;\n\t\t}\n\t} catch (e) {\n\t\tconsole.warn('Failed to load saved language:', e);\n\t}\n\treturn detectBrowserLanguage();\n}\n\n/**\n * 言語設定を保存\n */\nfunction saveLanguage(language: Language): void {\n\ttry {\n\t\tlocalStorage.setItem(STORAGE_KEY, language);\n\t} catch (e) {\n\t\tconsole.warn('Failed to save language:', e);\n\t}\n}\n\n/**\n * i18nシステムを初期化\n */\nexport function initI18n(): void {\n\tcurrentLanguage = loadSavedLanguage();\n}\n\n/**\n * 現在の言語を取得\n */\nexport function getCurrentLanguage(): Language {\n\treturn currentLanguage;\n}\n\n/**\n * 言語を設定\n */\nexport function setLanguage(language: Language): void {\n\tif (!SUPPORTED_LANGUAGES.includes(language)) {\n\t\tconsole.warn(`Unsupported language: ${language}`);\n\t\treturn;\n\t}\n\n\tcurrentLanguage = language;\n\tsaveLanguage(language);\n\n\t// コールバックを実行\n\tlanguageChangeCallbacks.forEach(callback => callback(language));\n}\n\n/**\n * 言語変更時のコールバックを登録\n */\nexport function onLanguageChange(callback: LanguageChangeCallback): void {\n\tlanguageChangeCallbacks.push(callback);\n}\n\n/**\n * 翻訳テキストを取得\n * @param key - ドット区切りのキー（例: \"menu.items.vertical.title\"）\n * @param params - テンプレート変数の置換パラメータ\n */\nexport function t(key: string, params?: Record<string, string | number>): string {\n\tconst keys = key.split('.');\n\tlet value: any = translations[currentLanguage];\n\n\t// キーパスをたどる\n\tfor (const k of keys) {\n\t\tif (value && typeof value === 'object' && k in value) {\n\t\t\tvalue = value[k];\n\t\t} else {\n\t\t\tconsole.warn(`Translation key not found: ${key}`);\n\t\t\treturn key;\n\t\t}\n\t}\n\n\tif (typeof value !== 'string') {\n\t\tconsole.warn(`Translation value is not a string: ${key}`);\n\t\treturn key;\n\t}\n\n\t// パラメータを置換\n\tif (params) {\n\t\treturn value.replace(/\\{(\\w+)\\}/g, (match, paramKey) => {\n\t\t\treturn paramKey in params ? String(params[paramKey]) : match;\n\t\t});\n\t}\n\n\treturn value;\n}\n\n/**\n * 言語名を取得\n */\nexport function getLanguageName(language: Language): string {\n\tconst names: Record<Language, string> = {\n\t\tja: '日本語',\n\t\ten: 'English'\n\t};\n\treturn names[language] || language;\n}\n\n// 型をエクスポート\nexport type { Language, Translations } from './types';\n","/**\n * 言語切り替えコンポーネント\n */\n\nimport {\n\tgetCurrentLanguage,\n\tsetLanguage,\n\tgetLanguageName,\n\tonLanguageChange,\n\tSUPPORTED_LANGUAGES,\n\ttype Language\n} from '../../i18n';\n\n/**\n * 言語切り替えボタンのコンポーネント\n */\nexport class LanguageSwitcher {\n\tprivate isOpen = false;\n\tprivate boundCloseDropdown: ((e: MouseEvent) => void) | null = null;\n\n\t/**\n\t * コンポーネントのHTMLを生成\n\t */\n\trender(): string {\n\t\tconst currentLang = getCurrentLanguage();\n\t\tconst currentLangName = getLanguageName(currentLang);\n\n\t\treturn `\n\t\t\t<div class=\"language-switcher\">\n\t\t\t\t<button class=\"language-switcher-button\" id=\"languageSwitcherButton\">\n\t\t\t\t\t<svg class=\"language-icon\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n\t\t\t\t\t\t<circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n\t\t\t\t\t\t<line x1=\"2\" y1=\"12\" x2=\"22\" y2=\"12\"></line>\n\t\t\t\t\t\t<path d=\"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z\"></path>\n\t\t\t\t\t</svg>\n\t\t\t\t\t<span class=\"language-name\">${currentLangName}</span>\n\t\t\t\t\t<svg class=\"chevron-icon\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n\t\t\t\t\t\t<polyline points=\"6 9 12 15 18 9\"></polyline>\n\t\t\t\t\t</svg>\n\t\t\t\t</button>\n\t\t\t\t<div class=\"language-dropdown\" id=\"languageDropdown\">\n\t\t\t\t\t${SUPPORTED_LANGUAGES.map(lang => `\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass=\"language-option ${lang === currentLang ? 'active' : ''}\"\n\t\t\t\t\t\t\tdata-lang=\"${lang}\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t${getLanguageName(lang)}\n\t\t\t\t\t\t\t${lang === currentLang ? '<span class=\"checkmark\">✓</span>' : ''}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t`).join('')}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\t/**\n\t * イベントリスナーを設定\n\t */\n\tattachEventListeners(container: HTMLElement): void {\n\t\tconst button = container.querySelector('#languageSwitcherButton') as HTMLButtonElement;\n\t\tconst dropdown = container.querySelector('#languageDropdown') as HTMLElement;\n\n\t\tif (!button || !dropdown) {\n\t\t\tconsole.warn('LanguageSwitcher: Required elements not found');\n\t\t\treturn;\n\t\t}\n\n\t\t//! ボタンクリックでドロップダウンを開閉。\n\t\tbutton.addEventListener('click', (e) => {\n\t\t\te.stopPropagation();\n\t\t\tthis.toggleDropdown(dropdown);\n\t\t});\n\n\t\t//! 言語オプションのクリックイベント。\n\t\tconst options = container.querySelectorAll('.language-option');\n\t\toptions.forEach(option => {\n\t\t\toption.addEventListener('click', (e) => {\n\t\t\t\te.stopPropagation();\n\t\t\t\tconst lang = (option as HTMLElement).dataset.lang as Language;\n\t\t\t\tif (lang && SUPPORTED_LANGUAGES.includes(lang)) {\n\t\t\t\t\tthis.selectLanguage(lang);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! ドロップダウン外をクリックしたら閉じる。\n\t\tthis.boundCloseDropdown = (e: MouseEvent) => {\n\t\t\tconst target = e.target as HTMLElement;\n\t\t\tif (!container.contains(target)) {\n\t\t\t\tthis.closeDropdown(dropdown);\n\t\t\t}\n\t\t};\n\n\t\t//! 言語変更時のコールバック登録。\n\t\tonLanguageChange(() => {\n\t\t\t//! 言語が変更されたらページをリロード。\n\t\t\twindow.location.reload();\n\t\t});\n\t}\n\n\t/**\n\t * ドロップダウンを開閉\n\t */\n\tprivate toggleDropdown(dropdown: HTMLElement): void {\n\t\tthis.isOpen = !this.isOpen;\n\n\t\tif (this.isOpen) {\n\t\t\tdropdown.classList.add('open');\n\t\t\t//! ドロップダウンが開いているときは外クリックで閉じる。\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.addEventListener('click', this.boundCloseDropdown!);\n\t\t\t}, 0);\n\t\t} else {\n\t\t\tthis.closeDropdown(dropdown);\n\t\t}\n\t}\n\n\t/**\n\t * ドロップダウンを閉じる\n\t */\n\tprivate closeDropdown(dropdown: HTMLElement): void {\n\t\tdropdown.classList.remove('open');\n\t\tthis.isOpen = false;\n\t\tif (this.boundCloseDropdown) {\n\t\t\tdocument.removeEventListener('click', this.boundCloseDropdown);\n\t\t}\n\t}\n\n\t/**\n\t * 言語を選択\n\t */\n\tprivate selectLanguage(lang: Language): void {\n\t\tsetLanguage(lang);\n\t\t//! setLanguageがコールバックを実行し、ページがリロードされる。\n\t}\n\n\t/**\n\t * クリーンアップ\n\t */\n\tdestroy(): void {\n\t\tif (this.boundCloseDropdown) {\n\t\t\tdocument.removeEventListener('click', this.boundCloseDropdown);\n\t\t\tthis.boundCloseDropdown = null;\n\t\t}\n\t\tthis.isOpen = false;\n\t}\n}\n","/**\n * メニュービュー\n */\n\nimport type { View } from '../../router';\nimport { t } from '../../i18n';\nimport { LanguageSwitcher } from '../components/LanguageSwitcher';\n\n/**\n * メニュー項目の定義\n */\ninterface MenuItem {\n\tid: string;\n\ttitle: string;\n\tdescription: string;\n\troute: string;\n}\n\n/**\n * メニュービュークラス\n */\nexport class MenuView implements View {\n\tprivate languageSwitcher = new LanguageSwitcher();\n\n\t/**\n\t * メニュー項目を取得（多言語対応）\n\t */\n\tprivate getMenuItems(): MenuItem[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\tid: 'vertical',\n\t\t\t\ttitle: t('menu.items.vertical.title'),\n\t\t\t\tdescription: t('menu.items.vertical.description'),\n\t\t\t\troute: 'vertical'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'horizontal',\n\t\t\t\ttitle: t('menu.items.horizontal.title'),\n\t\t\t\tdescription: t('menu.items.horizontal.description'),\n\t\t\t\troute: 'horizontal'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'flashcard',\n\t\t\t\ttitle: t('menu.items.flashcard.title'),\n\t\t\t\tdescription: t('menu.items.flashcard.description'),\n\t\t\t\troute: 'flashcard'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'koch',\n\t\t\t\ttitle: t('menu.items.koch.title'),\n\t\t\t\tdescription: t('menu.items.koch.description'),\n\t\t\t\troute: 'koch'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'listening',\n\t\t\t\ttitle: t('menu.items.listening.title'),\n\t\t\t\tdescription: t('menu.items.listening.description'),\n\t\t\t\troute: 'listening'\n\t\t\t}\n\t\t];\n\t}\n\n\t/**\n\t * ビューをレンダリングする\n\t */\n\trender(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tconst menuItems = this.getMenuItems();\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"menu-header\">\n\t\t\t\t\t<div class=\"menu-header-top\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>${t('menu.title')}</h1>\n\t\t\t\t\t\t\t<p class=\"version\">${t('common.version')}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div id=\"languageSwitcherContainer\">\n\t\t\t\t\t\t\t${this.languageSwitcher.render()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\n\t\t\t\t<main class=\"menu-main\">\n\t\t\t\t\t<div class=\"menu-grid\">\n\t\t\t\t\t\t${menuItems.map(item => this.renderMenuItem(item)).join('')}\n\t\t\t\t\t</div>\n\t\t\t\t</main>\n\n\t\t\t\t<footer class=\"menu-footer\">\n\t\t\t\t\t<p>${t('common.copyright')}</p>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t`;\n\n\t\t//! イベントリスナーを設定。\n\t\tthis.attachEventListeners();\n\n\t\t//! LanguageSwitcherのイベントリスナーを設定。\n\t\tconst languageSwitcherContainer = document.getElementById('languageSwitcherContainer');\n\t\tif (languageSwitcherContainer) {\n\t\t\tthis.languageSwitcher.attachEventListeners(languageSwitcherContainer);\n\t\t}\n\t}\n\n\t/**\n\t * メニュー項目を描画する\n\t */\n\tprivate renderMenuItem(item: MenuItem): string {\n\t\treturn `\n\t\t\t<div class=\"menu-item\" data-route=\"${item.route}\">\n\t\t\t\t<h2 class=\"menu-item-title\">${item.title}</h2>\n\t\t\t\t<p class=\"menu-item-description\">${item.description}</p>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\t/**\n\t * イベントリスナーを設定する\n\t */\n\tprivate attachEventListeners(): void {\n\t\tconst menuItems = document.querySelectorAll('.menu-item');\n\t\tmenuItems.forEach(item => {\n\t\t\titem.addEventListener('click', () => {\n\t\t\t\tconst route = item.getAttribute('data-route');\n\t\t\t\tif (route) {\n\t\t\t\t\twindow.location.hash = `#${route}`;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * ビューを破棄する\n\t */\n\tdestroy(): void {\n\t\t//! イベントリスナーは新しいHTMLで上書きされるため、特に処理不要。\n\t}\n}\n","/**\n * 縦振り電鍵練習ビュー\n */\n\nimport type { View } from '../../router';\nimport {\n\tVerticalKeyTrainer,\n\tMorseBuffer,\n\tTimerManager,\n\tTimingCalculator,\n\tAudioGenerator,\n\ttype TimingEvaluation,\n\ttype TimingStatistics\n} from 'morse-engine';\nimport { SettingsModal, ALL_SETTING_ITEMS, type SettingValues } from 'morse-engine';\nimport { t } from '../../i18n';\nimport { LanguageSwitcher } from '../components/LanguageSwitcher';\n\n/**\n * 縦振り電鍵練習ビュークラス\n */\nexport class VerticalKeyView implements View {\n\tprivate trainer: VerticalKeyTrainer;\n\tprivate buffer: MorseBuffer;\n\tprivate timer: TimerManager;\n\tprivate audio: AudioGenerator;\n\tprivate isKeyPressed = false;\n\tprivate keyPressHandler: ((e: KeyboardEvent) => void) | null = null;\n\tprivate keyReleaseHandler: ((e: KeyboardEvent) => void) | null = null;\n\tprivate updateIntervalId: number | null = null;\n\tprivate currentWPM = 20;\n\tprivate keyCode = 'Space';\n\tprivate latestEvaluation: TimingEvaluation | null = null;\n\tprivate overallStats: TimingStatistics | null = null;\n\tprivate dotStats: TimingStatistics | null = null;\n\tprivate dashStats: TimingStatistics | null = null;\n\tprivate languageSwitcher = new LanguageSwitcher();\n\n\tconstructor() {\n\t\t//! 設定を読み込む。\n\t\tconst savedWPM = localStorage.getItem('verticalKeyWPM');\n\t\tif (savedWPM) {\n\t\t\tthis.currentWPM = parseInt(savedWPM, 10);\n\t\t}\n\n\t\tconst savedKeyCode = localStorage.getItem('verticalKeyCode');\n\t\tif (savedKeyCode) {\n\t\t\tthis.keyCode = savedKeyCode;\n\t\t}\n\n\t\t//! コアコンポーネントを初期化。\n\t\tthis.buffer = new MorseBuffer();\n\t\tthis.timer = new TimerManager();\n\t\tthis.audio = new AudioGenerator({\n\t\t\tfrequency: 700,\n\t\t\tvolume: 0.5,\n\t\t\twpm: this.currentWPM\n\t\t});\n\n\t\t//! タイミング計算。\n\t\tconst timings = TimingCalculator.calculate(this.currentWPM);\n\n\t\t//! トレーナーを初期化（コールバックで音声制御とタイミング評価）。\n\t\tthis.trainer = new VerticalKeyTrainer(\n\t\t\tthis.buffer,\n\t\t\tthis.timer,\n\t\t\ttimings,\n\t\t\t{\n\t\t\t\tonKeyPress: () => {\n\t\t\t\t\t//! キー押下時に音を鳴らす。\n\t\t\t\t\tthis.audio.startContinuousTone();\n\t\t\t\t},\n\t\t\t\tonKeyRelease: () => {\n\t\t\t\t\t//! キー解放時に音を止める。\n\t\t\t\t\tthis.audio.stopContinuousTone();\n\t\t\t\t},\n\t\t\t\tonTimingEvaluated: (evaluation: TimingEvaluation) => {\n\t\t\t\t\t//! タイミング評価結果を保存。\n\t\t\t\t\tthis.latestEvaluation = evaluation;\n\t\t\t\t\tthis.updateTimingStatistics();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * ビューをレンダリングする\n\t */\n\trender(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"settings-icon\" id=\"settingsIcon\">\n\t\t\t\t<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<div class=\"header-top\">\n\t\t\t\t\t\t<button class=\"back-btn\">${t('common.backToMenu')}</button>\n\t\t\t\t\t\t<h1>${t('verticalKey.title')}</h1>\n\t\t\t\t\t\t<div id=\"languageSwitcherContainer\">\n\t\t\t\t\t\t\t${this.languageSwitcher.render()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"key-button-container\">\n\t\t\t\t\t<button class=\"key-button\" id=\"morse-key\">\n\t\t\t\t\t\tKEY\n\t\t\t\t\t\t<span class=\"key-label\">${t('verticalKey.keyLabel')}</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"practice-container\">\n\t\t\t\t\t<div class=\"display-area\">\n\t\t\t\t\t\t<div class=\"display-section\">\n\t\t\t\t\t\t\t<h3>${t('verticalKey.morseSignal')}</h3>\n\t\t\t\t\t\t\t<div class=\"display-output morse-buffer\" id=\"morse-buffer\">${t('verticalKey.morseBufferPlaceholder')}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"display-section\">\n\t\t\t\t\t\t\t<h3>${t('verticalKey.decodedResult')}</h3>\n\t\t\t\t\t\t\t<div class=\"display-output\" id=\"decoded-text\">${t('verticalKey.decodedTextPlaceholder')}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"action-area\">\n\t\t\t\t\t\t<button class=\"btn btn-large btn-danger\" id=\"clear-btn\">${t('common.reset')}</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"status-area\">\n\t\t\t\t\t\t<div class=\"status-item\">\n\t\t\t\t\t\t\t<span class=\"label\">${t('verticalKey.currentSpeed')}</span>\n\t\t\t\t\t\t\t<span class=\"value\" id=\"current-wpm\">${this.currentWPM}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"status-item\" id=\"key-status\">\n\t\t\t\t\t\t\t<span class=\"label\">${t('verticalKey.keyState')}</span>\n\t\t\t\t\t\t\t<span class=\"value\">${t('verticalKey.released')}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"status-item\">\n\t\t\t\t\t\t\t<span class=\"label\">${t('verticalKey.charCount')}</span>\n\t\t\t\t\t\t\t<span class=\"value\" id=\"char-count\">0</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"timing-evaluation-area\">\n\t\t\t\t\t\t<h3>${t('verticalKey.timingEvaluation')}</h3>\n\t\t\t\t\t\t<div class=\"evaluation-panel\">\n\t\t\t\t\t\t\t<div class=\"latest-evaluation\">\n\t\t\t\t\t\t\t\t<h4>${t('verticalKey.latestInput')}</h4>\n\t\t\t\t\t\t\t\t<div id=\"latest-evaluation-content\" class=\"evaluation-content\">\n\t\t\t\t\t\t\t\t\t${t('verticalKey.waitingForInput')}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"statistics-panel\">\n\t\t\t\t\t\t\t\t<h4>${t('verticalKey.overallStats')}</h4>\n\t\t\t\t\t\t\t\t<div id=\"overall-stats-content\" class=\"stats-content\">\n\t\t\t\t\t\t\t\t\t${t('verticalKey.noStatsData')}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"element-stats-panel\">\n\t\t\t\t\t\t\t\t<div class=\"dot-stats\">\n\t\t\t\t\t\t\t\t\t<h4>${t('verticalKey.ditStats')}</h4>\n\t\t\t\t\t\t\t\t\t<div id=\"dot-stats-content\" class=\"stats-content\">\n\t\t\t\t\t\t\t\t\t\t${t('verticalKey.noData')}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"dash-stats\">\n\t\t\t\t\t\t\t\t\t<h4>${t('verticalKey.dahStats')}</h4>\n\t\t\t\t\t\t\t\t\t<div id=\"dash-stats-content\" class=\"stats-content\">\n\t\t\t\t\t\t\t\t\t\t${t('verticalKey.noData')}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t\t<h3>${t('verticalKey.howToUse')}</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>${t('verticalKey.instruction1')}</li>\n\t\t\t\t\t\t\t<li>${t('verticalKey.instruction2')}</li>\n\t\t\t\t\t\t\t<li>${t('verticalKey.instruction3')}</li>\n\t\t\t\t\t\t\t<li>${t('verticalKey.instruction4')}</li>\n\t\t\t\t\t\t\t<li>${t('verticalKey.instruction5')}</li>\n\t\t\t\t\t\t\t<li>${t('verticalKey.instruction6')}</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\t//! イベントリスナーを設定。\n\t\tthis.attachEventListeners();\n\t\t//! 定期更新を開始。\n\t\tthis.startUpdate();\n\t}\n\n\t/**\n\t * イベントリスナーを設定する\n\t */\n\tprivate attachEventListeners(): void {\n\t\t//! 戻るボタン。\n\t\tconst backBtn = document.querySelector('.back-btn');\n\t\tbackBtn?.addEventListener('click', () => {\n\t\t\twindow.location.hash = '#menu';\n\t\t});\n\n\t\t//! 設定アイコン。\n\t\tdocument.getElementById('settingsIcon')?.addEventListener('click', () => {\n\t\t\tthis.openSettingsModal();\n\t\t});\n\n\t\t//! クリアボタン。\n\t\tconst clearBtn = document.getElementById('clear-btn');\n\t\tclearBtn?.addEventListener('click', () => {\n\t\t\tthis.trainer.clear();\n\t\t\tthis.updateDisplay();\n\t\t});\n\n\t\t//! キーボードイベント（設定されたキー）。\n\t\tthis.keyPressHandler = (e: KeyboardEvent) => {\n\t\t\tif (e.code === this.keyCode && !e.repeat) {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (!this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyDown();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.keyReleaseHandler = (e: KeyboardEvent) => {\n\t\t\tif (e.code === this.keyCode) {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyUp();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener('keydown', this.keyPressHandler);\n\t\twindow.addEventListener('keyup', this.keyReleaseHandler);\n\n\t\t//! ボタンイベント（マウス/タッチ）。\n\t\tconst keyButton = document.getElementById('morse-key');\n\t\tif (keyButton) {\n\t\t\t//! マウスイベント。\n\t\t\tkeyButton.addEventListener('mousedown', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (!this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyDown();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tkeyButton.addEventListener('mouseup', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyUp();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tkeyButton.addEventListener('mouseleave', () => {\n\t\t\t\tif (this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyUp();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//! タッチイベント。\n\t\t\tkeyButton.addEventListener('touchstart', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (!this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyDown();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tkeyButton.addEventListener('touchend', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyUp();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tkeyButton.addEventListener('touchcancel', () => {\n\t\t\t\tif (this.isKeyPressed) {\n\t\t\t\t\tthis.handleKeyUp();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t//! LanguageSwitcherのイベントリスナーを設定。\n\t\tconst languageSwitcherContainer = document.getElementById('languageSwitcherContainer');\n\t\tif (languageSwitcherContainer) {\n\t\t\tthis.languageSwitcher.attachEventListeners(languageSwitcherContainer);\n\t\t}\n\t}\n\n\t/**\n\t * キー押下処理\n\t */\n\tprivate handleKeyDown(): void {\n\t\tthis.isKeyPressed = true;\n\t\tthis.trainer.keyPress();\n\t\tthis.updateKeyStatus(true);\n\n\t\t//! ボタンの見た目を更新。\n\t\tconst keyButton = document.getElementById('morse-key');\n\t\tif (keyButton) {\n\t\t\tkeyButton.classList.add('pressed');\n\t\t}\n\t}\n\n\t/**\n\t * キー解放処理\n\t */\n\tprivate handleKeyUp(): void {\n\t\tthis.isKeyPressed = false;\n\t\tthis.trainer.keyRelease();\n\t\tthis.updateKeyStatus(false);\n\n\t\t//! ボタンの見た目を更新。\n\t\tconst keyButton = document.getElementById('morse-key');\n\t\tif (keyButton) {\n\t\t\tkeyButton.classList.remove('pressed');\n\t\t}\n\t}\n\n\t/**\n\t * 定期更新を開始する\n\t */\n\tprivate startUpdate(): void {\n\t\t//! 100msごとに画面を更新。\n\t\tthis.updateIntervalId = window.setInterval(() => {\n\t\t\tthis.updateDisplay();\n\t\t}, 100);\n\t}\n\n\t/**\n\t * 表示を更新する\n\t */\n\tprivate updateDisplay(): void {\n\t\tconst morseBuffer = document.getElementById('morse-buffer');\n\t\tconst decodedText = document.getElementById('decoded-text');\n\t\tconst charCount = document.getElementById('char-count');\n\n\t\tif (morseBuffer) {\n\t\t\tconst buffer = this.trainer.getBuffer();\n\t\t\tconst sequence = this.trainer.getSequence();\n\t\t\tconst fullDisplay = sequence ? `${buffer} ${sequence}` : buffer;\n\t\t\tmorseBuffer.textContent = fullDisplay || t('verticalKey.morseBufferPlaceholder');\n\t\t}\n\n\t\tif (decodedText) {\n\t\t\tconst text = this.trainer.getDecoded();\n\t\t\tdecodedText.textContent = text || t('verticalKey.decodedTextPlaceholder');\n\t\t}\n\n\t\tif (charCount) {\n\t\t\tconst text = this.trainer.getDecoded();\n\t\t\tcharCount.textContent = text.length.toString();\n\t\t}\n\n\t\t//! タイミング評価表示を更新。\n\t\tthis.updateTimingDisplay();\n\t}\n\n\t/**\n\t * タイミング統計情報を更新する\n\t */\n\tprivate updateTimingStatistics(): void {\n\t\tthis.overallStats = this.trainer.getTimingStatistics();\n\t\tconst elementStats = this.trainer.getStatisticsByElement();\n\t\tthis.dotStats = elementStats.dot;\n\t\tthis.dashStats = elementStats.dash;\n\t}\n\n\t/**\n\t * タイミング評価表示を更新する\n\t */\n\tprivate updateTimingDisplay(): void {\n\t\t//! 最新評価を表示。\n\t\tconst latestContent = document.getElementById('latest-evaluation-content');\n\t\tif (latestContent && this.latestEvaluation) {\n\t\t\tconst eval_ = this.latestEvaluation;\n\t\t\tconst element = eval_.record.element === '.' ? t('verticalKey.dit') : t('verticalKey.dah');\n\t\t\tconst accuracy = eval_.accuracy.toFixed(1);\n\t\t\tconst accuracyClass = this.getAccuracyClass(eval_.accuracy);\n\n\t\t\t//! 棒グラフの幅計算（8短点分を100%とする固定スケール）。\n\t\t\tconst timings = TimingCalculator.calculate(this.currentWPM);\n\t\t\tconst dotDuration = timings.dot;\n\t\t\tconst maxDuration = dotDuration * 8; // 8短点分を100%とする\n\t\t\tconst expected = eval_.record.expectedDuration;\n\t\t\tconst actual = eval_.record.actualDuration;\n\t\t\tconst expectedPercent = (expected / maxDuration) * 100;\n\t\t\tconst actualPercent = (actual / maxDuration) * 100;\n\n\t\t\t//! 誤差の方向（長い/短い）を判定。\n\t\t\tconst diff = actual - expected;\n\t\t\tconst diffClass = diff > 0 ? 'longer' : diff < 0 ? 'shorter' : 'perfect';\n\t\t\tconst diffText = diff > 0 ? `+${diff}ms (${t('verticalKey.longer')})` : diff < 0 ? `${diff}ms (${t('verticalKey.shorter')})` : t('verticalKey.perfect');\n\n\t\t\tlatestContent.innerHTML = `\n\t\t\t\t<div class=\"eval-item\">\n\t\t\t\t\t<span class=\"eval-label\">${t('verticalKey.element')}</span>\n\t\t\t\t\t<span class=\"eval-value\">${element}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"timing-chart\">\n\t\t\t\t\t<div class=\"chart-row\">\n\t\t\t\t\t\t<div class=\"chart-label\">${t('verticalKey.expected')}</div>\n\t\t\t\t\t\t<div class=\"chart-bar-container\">\n\t\t\t\t\t\t\t<div class=\"chart-bar expected\" style=\"width: ${expectedPercent}%\">\n\t\t\t\t\t\t\t\t<span class=\"chart-value\">${expected}ms</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"chart-row\">\n\t\t\t\t\t\t<div class=\"chart-label\">${t('verticalKey.actual')}</div>\n\t\t\t\t\t\t<div class=\"chart-bar-container\">\n\t\t\t\t\t\t\t<div class=\"chart-bar actual ${accuracyClass}\" style=\"width: ${actualPercent}%\">\n\t\t\t\t\t\t\t\t<span class=\"chart-value\">${actual}ms</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"chart-scale\">\n\t\t\t\t\t\t<span>0ms</span>\n\t\t\t\t\t\t<span>${Math.round(dotDuration * 4)}ms</span>\n\t\t\t\t\t\t<span>${Math.round(maxDuration)}ms</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"eval-item\">\n\t\t\t\t\t<span class=\"eval-label\">${t('verticalKey.accuracy')}</span>\n\t\t\t\t\t<span class=\"eval-value accuracy-${accuracyClass}\">${accuracy}%</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"eval-item\">\n\t\t\t\t\t<span class=\"eval-label\">${t('verticalKey.error')}</span>\n\t\t\t\t\t<span class=\"eval-value timing-diff-${diffClass}\">${diffText}</span>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\t//! 全体統計を表示。\n\t\tconst overallContent = document.getElementById('overall-stats-content');\n\t\tif (overallContent && this.overallStats && this.overallStats.count > 0) {\n\t\t\tconst stats = this.overallStats;\n\t\t\tconst accuracyClass = this.getAccuracyClass(stats.averageAccuracy);\n\n\t\t\toverallContent.innerHTML = `\n\t\t\t\t<div class=\"stat-item\">\n\t\t\t\t\t<span class=\"stat-label\">${t('verticalKey.inputCount')}</span>\n\t\t\t\t\t<span class=\"stat-value\">${stats.count}${t('verticalKey.times')}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"stat-item\">\n\t\t\t\t\t<span class=\"stat-label\">${t('verticalKey.avgAccuracy')}</span>\n\t\t\t\t\t<span class=\"stat-value accuracy-${accuracyClass}\">${stats.averageAccuracy.toFixed(1)} ± ${stats.standardDeviation.toFixed(1)}%</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"stat-item\">\n\t\t\t\t\t<span class=\"stat-label\">${t('verticalKey.maxAccuracy')}</span>\n\t\t\t\t\t<span class=\"stat-value\">${stats.maxAccuracy.toFixed(1)}%</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"stat-item\">\n\t\t\t\t\t<span class=\"stat-label\">${t('verticalKey.minAccuracy')}</span>\n\t\t\t\t\t<span class=\"stat-value\">${stats.minAccuracy.toFixed(1)}%</span>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\t//! 短点統計を表示。\n\t\tconst dotContent = document.getElementById('dot-stats-content');\n\t\tif (dotContent && this.dotStats && this.dotStats.count > 0) {\n\t\t\tconst stats = this.dotStats;\n\t\t\tconst accuracyClass = this.getAccuracyClass(stats.averageAccuracy);\n\n\t\t\tdotContent.innerHTML = `\n\t\t\t\t<div class=\"stat-item\">\n\t\t\t\t\t<span class=\"stat-label\">${t('verticalKey.inputCount')}</span>\n\t\t\t\t\t<span class=\"stat-value\">${stats.count}${t('verticalKey.times')}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"stat-item\">\n\t\t\t\t\t<span class=\"stat-label\">${t('verticalKey.avgAccuracy')}</span>\n\t\t\t\t\t<span class=\"stat-value accuracy-${accuracyClass}\">${stats.averageAccuracy.toFixed(1)} ± ${stats.standardDeviation.toFixed(1)}%</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"stat-item\">\n\t\t\t\t\t<span class=\"stat-label\">${t('verticalKey.avgError')}</span>\n\t\t\t\t\t<span class=\"stat-value\">${stats.averageAbsoluteError.toFixed(1)}ms</span>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\t//! 長点統計を表示。\n\t\tconst dashContent = document.getElementById('dash-stats-content');\n\t\tif (dashContent && this.dashStats && this.dashStats.count > 0) {\n\t\t\tconst stats = this.dashStats;\n\t\t\tconst accuracyClass = this.getAccuracyClass(stats.averageAccuracy);\n\n\t\t\tdashContent.innerHTML = `\n\t\t\t\t<div class=\"stat-item\">\n\t\t\t\t\t<span class=\"stat-label\">${t('verticalKey.inputCount')}</span>\n\t\t\t\t\t<span class=\"stat-value\">${stats.count}${t('verticalKey.times')}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"stat-item\">\n\t\t\t\t\t<span class=\"stat-label\">${t('verticalKey.avgAccuracy')}</span>\n\t\t\t\t\t<span class=\"stat-value accuracy-${accuracyClass}\">${stats.averageAccuracy.toFixed(1)} ± ${stats.standardDeviation.toFixed(1)}%</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"stat-item\">\n\t\t\t\t\t<span class=\"stat-label\">${t('verticalKey.avgError')}</span>\n\t\t\t\t\t<span class=\"stat-value\">${stats.averageAbsoluteError.toFixed(1)}ms</span>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\t}\n\n\t/**\n\t * 精度に応じたCSSクラス名を取得する\n\t */\n\tprivate getAccuracyClass(accuracy: number): string {\n\t\tif (accuracy >= 90) return 'excellent';\n\t\tif (accuracy >= 70) return 'good';\n\t\tif (accuracy >= 50) return 'fair';\n\t\treturn 'poor';\n\t}\n\n\t/**\n\t * キー状態表示を更新する\n\t */\n\tprivate updateKeyStatus(isPressed: boolean): void {\n\t\tconst keyStatus = document.getElementById('key-status');\n\t\tif (keyStatus) {\n\t\t\tconst valueSpan = keyStatus.querySelector('.value');\n\t\t\tif (valueSpan) {\n\t\t\t\tvalueSpan.textContent = isPressed ? t('verticalKey.pressed') : t('verticalKey.released');\n\t\t\t}\n\t\t\tif (isPressed) {\n\t\t\t\tkeyStatus.classList.add('active');\n\t\t\t} else {\n\t\t\t\tkeyStatus.classList.remove('active');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * 設定モーダルを開く\n\t */\n\tprivate openSettingsModal(): void {\n\t\t//! 現在の設定値を取得。\n\t\tconst currentValues: SettingValues = {\n\t\t\tvolume: Math.round(this.audio.getVolume() * 100),\n\t\t\tfrequency: this.audio.getFrequency(),\n\t\t\twpm: this.currentWPM,\n\t\t\tkeyCode: this.keyCode\n\t\t};\n\n\t\t//! 設定変更前の値を保存（キャンセル時の復元用）。\n\t\tconst savedSettings = {\n\t\t\tvolume: this.audio.getVolume(),\n\t\t\tfrequency: this.audio.getFrequency(),\n\t\t\twpm: this.currentWPM,\n\t\t\tkeyCode: this.keyCode\n\t\t};\n\n\t\t//! SettingsModalを作成。\n\t\tconst modal = new SettingsModal(\n\t\t\t'vertical-key-settings-modal',\n\t\t\tALL_SETTING_ITEMS,\n\t\t\tcurrentValues,\n\t\t\t{\n\t\t\t\tonSave: (values: SettingValues) => {\n\t\t\t\t\t//! 設定を保存。\n\t\t\t\t\tthis.audio.setVolume((values.volume as number) / 100);\n\t\t\t\t\tthis.audio.setFrequency(values.frequency as number);\n\t\t\t\t\tthis.audio.setWPM(values.wpm as number);\n\t\t\t\t\tthis.currentWPM = values.wpm as number;\n\t\t\t\t\tthis.keyCode = values.keyCode as string;\n\n\t\t\t\t\t//! localStorageに保存。\n\t\t\t\t\tlocalStorage.setItem('verticalKeyWPM', this.currentWPM.toString());\n\t\t\t\t\tlocalStorage.setItem('verticalKeyCode', this.keyCode);\n\n\t\t\t\t\t//! タイミングを再計算してトレーナーを再初期化。\n\t\t\t\t\tconst timings = TimingCalculator.calculate(this.currentWPM);\n\t\t\t\t\tthis.trainer = new VerticalKeyTrainer(\n\t\t\t\t\t\tthis.buffer,\n\t\t\t\t\t\tthis.timer,\n\t\t\t\t\t\ttimings,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tonKeyPress: () => {\n\t\t\t\t\t\t\t\tthis.audio.startContinuousTone();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonKeyRelease: () => {\n\t\t\t\t\t\t\t\tthis.audio.stopContinuousTone();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonTimingEvaluated: (evaluation: TimingEvaluation) => {\n\t\t\t\t\t\t\t\tthis.latestEvaluation = evaluation;\n\t\t\t\t\t\t\t\tthis.updateTimingStatistics();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\t//! 現在のWPM表示を更新。\n\t\t\t\t\tconst currentWpmDisplay = document.getElementById('current-wpm');\n\t\t\t\t\tif (currentWpmDisplay) currentWpmDisplay.textContent = this.currentWPM.toString();\n\t\t\t\t},\n\t\t\t\tonCancel: () => {\n\t\t\t\t\t//! 設定を元に戻す。\n\t\t\t\t\tthis.audio.setVolume(savedSettings.volume);\n\t\t\t\t\tthis.audio.setFrequency(savedSettings.frequency);\n\t\t\t\t\tthis.audio.setWPM(savedSettings.wpm);\n\t\t\t\t\tthis.currentWPM = savedSettings.wpm;\n\t\t\t\t\tthis.keyCode = savedSettings.keyCode;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t//! モーダルを表示。\n\t\tmodal.show('vertical-key');\n\t}\n\n\t/**\n\t * ビューを破棄する\n\t */\n\tdestroy(): void {\n\t\t//! イベントリスナーを削除。\n\t\tif (this.keyPressHandler) {\n\t\t\twindow.removeEventListener('keydown', this.keyPressHandler);\n\t\t\tthis.keyPressHandler = null;\n\t\t}\n\t\tif (this.keyReleaseHandler) {\n\t\t\twindow.removeEventListener('keyup', this.keyReleaseHandler);\n\t\t\tthis.keyReleaseHandler = null;\n\t\t}\n\n\t\t//! 定期更新を停止。\n\t\tif (this.updateIntervalId !== null) {\n\t\t\tclearInterval(this.updateIntervalId);\n\t\t\tthis.updateIntervalId = null;\n\t\t}\n\n\t\t//! 音声を停止。\n\t\tthis.audio.stopContinuousTone();\n\n\t\t//! トレーナーをクリア。\n\t\tthis.trainer.clear();\n\t}\n}\n","/**\n * 横振り電鍵練習ビュー\n */\n\nimport type { View } from '../../router';\nimport {\n\tHorizontalKeyTrainer,\n\tMorseBuffer,\n\tTimerManager,\n\tTimingCalculator,\n\tAudioGenerator,\n\ttype IambicMode,\n\ttype PaddleLayout,\n\ttype MorseTimings,\n\ttype WordTimingData\n} from 'morse-engine';\nimport { SettingsModal, ALL_SETTING_ITEMS, type SettingValues } from 'morse-engine';\nimport { t } from '../../i18n';\nimport { LanguageSwitcher } from '../components/LanguageSwitcher';\n\n/**\n * 横振り電鍵練習ビュークラス\n */\nexport class HorizontalKeyView implements View {\n\tprivate trainer!: HorizontalKeyTrainer;\n\tprivate buffer: MorseBuffer;\n\tprivate timer: TimerManager;\n\tprivate audio: AudioGenerator;\n\tprivate timings!: MorseTimings;\n\tprivate leftPressed = false;\n\tprivate rightPressed = false;\n\tprivate updateIntervalId: number | null = null;\n\tprivate currentWPM = 20;\n\tprivate iambicMode: IambicMode = 'B';\n\tprivate paddleLayout: PaddleLayout = 'normal';\n\tprivate leftKeyCode = 'KeyJ';\n\tprivate rightKeyCode = 'KeyK';\n\n\t// イベントハンドラーの参照を保持\n\tprivate keyPressHandler: ((e: KeyboardEvent) => void) | null = null;\n\tprivate keyReleaseHandler: ((e: KeyboardEvent) => void) | null = null;\n\tprivate languageSwitcher = new LanguageSwitcher();\n\n\tconstructor() {\n\t\t//! 設定を読み込む。\n\t\tconst savedWPM = localStorage.getItem('horizontalKeyWPM');\n\t\tif (savedWPM) {\n\t\t\tthis.currentWPM = parseInt(savedWPM, 10);\n\t\t}\n\n\t\tconst savedIambicMode = localStorage.getItem('horizontalKeyIambicMode');\n\t\tif (savedIambicMode === 'A' || savedIambicMode === 'B') {\n\t\t\tthis.iambicMode = savedIambicMode;\n\t\t}\n\n\t\tconst savedPaddleLayout = localStorage.getItem('horizontalKeyPaddleLayout');\n\t\tif (savedPaddleLayout === 'normal' || savedPaddleLayout === 'reversed') {\n\t\t\tthis.paddleLayout = savedPaddleLayout;\n\t\t}\n\n\t\tconst savedLeftKeyCode = localStorage.getItem('horizontalKeyLeftCode');\n\t\tif (savedLeftKeyCode) {\n\t\t\tthis.leftKeyCode = savedLeftKeyCode;\n\t\t}\n\n\t\tconst savedRightKeyCode = localStorage.getItem('horizontalKeyRightCode');\n\t\tif (savedRightKeyCode) {\n\t\t\tthis.rightKeyCode = savedRightKeyCode;\n\t\t}\n\n\t\t//! コアコンポーネントを初期化。\n\t\tthis.buffer = new MorseBuffer();\n\t\tthis.timer = new TimerManager();\n\t\tthis.audio = new AudioGenerator({\n\t\t\tfrequency: 700,\n\t\t\tvolume: 0.5,\n\t\t\twpm: this.currentWPM\n\t\t});\n\n\t\t//! トレーナーを初期化。\n\t\tthis.initializeTrainer();\n\t}\n\n\t/**\n\t * トレーナーを初期化する\n\t */\n\tprivate initializeTrainer(): void {\n\t\tthis.timings = TimingCalculator.calculate(this.currentWPM);\n\n\t\tthis.trainer = new HorizontalKeyTrainer(\n\t\t\tthis.buffer,\n\t\t\tthis.timer,\n\t\t\tthis.timings,\n\t\t\t{\n\t\t\t\tonElementStart: (_element: '.' | '-', duration: number) => {\n\t\t\t\t\t//! 要素送信開始時に指定時間だけ音を鳴らす。\n\t\t\t\t\t// scheduleToneに0を渡すと現在時刻から再生される\n\t\t\t\t\tthis.audio.scheduleTone(0, duration);\n\t\t\t\t},\n\t\t\t\tonSpacingEvaluated: () => {\n\t\t\t\t\t//! スペーシング評価が完了したら画面を更新。\n\t\t\t\t\tthis.updateDisplay();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tiambicMode: this.iambicMode,\n\t\t\t\tpaddleLayout: this.paddleLayout\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * ビューをレンダリングする\n\t */\n\trender(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"settings-icon\" id=\"settingsIcon\">\n\t\t\t\t<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<div class=\"header-top\">\n\t\t\t\t\t\t<button class=\"back-btn\">${t('common.backToMenu')}</button>\n\t\t\t\t\t\t<h1>${t('horizontalKey.title')}</h1>\n\t\t\t\t\t\t<div id=\"languageSwitcherContainer\">\n\t\t\t\t\t\t\t${this.languageSwitcher.render()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"paddle-container\">\n\t\t\t\t\t<button class=\"paddle-button dit\" id=\"left-paddle\">\n\t\t\t\t\t\t${t('horizontalKey.dit')}\n\t\t\t\t\t\t<span class=\"paddle-label\">${t('horizontalKey.ditLabel')}</span>\n\t\t\t\t\t\t<span class=\"paddle-key\">${t('horizontalKey.jKey')}</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button class=\"paddle-button dah\" id=\"right-paddle\">\n\t\t\t\t\t\t${t('horizontalKey.dah')}\n\t\t\t\t\t\t<span class=\"paddle-label\">${t('horizontalKey.dahLabel')}</span>\n\t\t\t\t\t\t<span class=\"paddle-key\">${t('horizontalKey.kKey')}</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"practice-container\">\n\t\t\t\t\t<div class=\"display-area\">\n\t\t\t\t\t\t<div class=\"display-section\">\n\t\t\t\t\t\t\t<h3>${t('horizontalKey.morseSignal')}</h3>\n\t\t\t\t\t\t\t<div class=\"display-output morse-buffer\" id=\"morse-buffer\">${t('horizontalKey.morseBufferPlaceholder')}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"display-section\">\n\t\t\t\t\t\t\t<h3>${t('horizontalKey.decodedResult')}</h3>\n\t\t\t\t\t\t\t<div class=\"display-output\" id=\"decoded-text\">${t('horizontalKey.decodedTextPlaceholder')}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"action-area\">\n\t\t\t\t\t\t<button class=\"btn btn-large btn-danger\" id=\"clear-btn\">${t('horizontalKey.clear')}</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"status-area\">\n\t\t\t\t\t\t<div class=\"status-item\">\n\t\t\t\t\t\t\t<span class=\"label\">${t('horizontalKey.currentSpeed')}</span>\n\t\t\t\t\t\t\t<span class=\"value\" id=\"current-wpm\">${this.currentWPM}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"status-item\">\n\t\t\t\t\t\t\t<span class=\"label\">${t('horizontalKey.iambicMode')}</span>\n\t\t\t\t\t\t\t<span class=\"value\" id=\"current-iambic-mode\">${this.iambicMode}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"status-item\">\n\t\t\t\t\t\t\t<span class=\"label\">${t('horizontalKey.charCount')}</span>\n\t\t\t\t\t\t\t<span class=\"value\" id=\"char-count\">0</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"timing-diagram-section\">\n\t\t\t\t\t\t<h3>${t('horizontalKey.timingDiagramTitle')}</h3>\n\t\t\t\t\t\t<div id=\"timing-diagram-content\" class=\"timing-diagram-content\">\n\t\t\t\t\t\t\t${t('horizontalKey.timingDiagramPlaceholder')}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"timing-diagram-section timing-evaluation-section\">\n\t\t\t\t\t\t<h3>${t('horizontalKey.spacingEvaluation')}</h3>\n\t\t\t\t\t\t<div class=\"timing-stats-grid\">\n\t\t\t\t\t\t\t<div class=\"timing-stat-card\">\n\t\t\t\t\t\t\t\t<div class=\"timing-stat-label\">${t('horizontalKey.avgAccuracy')}</div>\n\t\t\t\t\t\t\t\t<div class=\"timing-stat-value\" id=\"timing-avg-accuracy\">--%</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"timing-stat-card\">\n\t\t\t\t\t\t\t\t<div class=\"timing-stat-label\">${t('horizontalKey.avgError')}</div>\n\t\t\t\t\t\t\t\t<div class=\"timing-stat-value\" id=\"timing-avg-error\">--ms</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"timing-stat-card\">\n\t\t\t\t\t\t\t\t<div class=\"timing-stat-label\">${t('horizontalKey.evaluationCount')}</div>\n\t\t\t\t\t\t\t\t<div class=\"timing-stat-value\" id=\"timing-count\">0</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"timing-element-stats\">\n\t\t\t\t\t\t\t<div class=\"timing-element-stat\">\n\t\t\t\t\t\t\t\t<h4>${t('horizontalKey.charSpacing')}</h4>\n\t\t\t\t\t\t\t\t<div class=\"timing-element-detail\">\n\t\t\t\t\t\t\t\t\t<span>${t('horizontalKey.expected')} <span id=\"timing-char-expected\">--ms</span></span>\n\t\t\t\t\t\t\t\t\t<span>${t('horizontalKey.accuracy')} <span id=\"timing-char-accuracy\">--%</span></span>\n\t\t\t\t\t\t\t\t\t<span>${t('horizontalKey.error')} <span id=\"timing-char-error\">--ms</span></span>\n\t\t\t\t\t\t\t\t\t<span>${t('horizontalKey.count')} <span id=\"timing-char-count\">0</span></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"timing-element-stat\">\n\t\t\t\t\t\t\t\t<h4>${t('horizontalKey.wordSpacing')}</h4>\n\t\t\t\t\t\t\t\t<div class=\"timing-element-detail\">\n\t\t\t\t\t\t\t\t\t<span>${t('horizontalKey.expected')} <span id=\"timing-word-expected\">--ms</span></span>\n\t\t\t\t\t\t\t\t\t<span>${t('horizontalKey.accuracy')} <span id=\"timing-word-accuracy\">--%</span></span>\n\t\t\t\t\t\t\t\t\t<span>${t('horizontalKey.error')} <span id=\"timing-word-error\">--ms</span></span>\n\t\t\t\t\t\t\t\t\t<span>${t('horizontalKey.count')} <span id=\"timing-word-count\">0</span></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t\t<h3>${t('horizontalKey.howToUse')}</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>${t('horizontalKey.instruction1')}</li>\n\t\t\t\t\t\t\t<li>${t('horizontalKey.instruction2')}</li>\n\t\t\t\t\t\t\t<li>${t('horizontalKey.instruction3')}</li>\n\t\t\t\t\t\t\t<li>${t('horizontalKey.instruction4')}</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\t//! イベントリスナーを設定。\n\t\tthis.attachEventListeners();\n\t\t//! 定期更新を開始。\n\t\tthis.startUpdate();\n\t}\n\n\t/**\n\t * イベントリスナーを設定する\n\t */\n\tprivate attachEventListeners(): void {\n\t\t//! 戻るボタン。\n\t\tconst backBtn = document.querySelector('.back-btn');\n\t\tbackBtn?.addEventListener('click', () => {\n\t\t\twindow.location.hash = '#menu';\n\t\t});\n\n\t\t//! 設定アイコン。\n\t\tdocument.getElementById('settingsIcon')?.addEventListener('click', () => {\n\t\t\tthis.openSettingsModal();\n\t\t});\n\n\t\t//! クリアボタン。\n\t\tconst clearBtn = document.getElementById('clear-btn');\n\t\tclearBtn?.addEventListener('click', () => {\n\t\t\tthis.trainer.clear();\n\t\t\tthis.updateDisplay();\n\t\t});\n\n\t\t//! キーボードイベント（設定されたキー）。\n\t\tthis.keyPressHandler = (e: KeyboardEvent) => {\n\t\t\tif (e.repeat) return;\n\n\t\t\tif (e.code === this.leftKeyCode) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleLeftPaddlePress();\n\t\t\t} else if (e.code === this.rightKeyCode) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleRightPaddlePress();\n\t\t\t}\n\t\t};\n\n\t\tthis.keyReleaseHandler = (e: KeyboardEvent) => {\n\t\t\tif (e.code === this.leftKeyCode) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleLeftPaddleRelease();\n\t\t\t} else if (e.code === this.rightKeyCode) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleRightPaddleRelease();\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener('keydown', this.keyPressHandler);\n\t\twindow.addEventListener('keyup', this.keyReleaseHandler);\n\n\t\t//! ボタンイベント（左パドル）。\n\t\tconst leftPaddle = document.getElementById('left-paddle');\n\t\tif (leftPaddle) {\n\t\t\tleftPaddle.addEventListener('mousedown', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleLeftPaddlePress();\n\t\t\t});\n\t\t\tleftPaddle.addEventListener('mouseup', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleLeftPaddleRelease();\n\t\t\t});\n\t\t\tleftPaddle.addEventListener('mouseleave', () => {\n\t\t\t\tif (this.leftPressed) this.handleLeftPaddleRelease();\n\t\t\t});\n\t\t\tleftPaddle.addEventListener('touchstart', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleLeftPaddlePress();\n\t\t\t});\n\t\t\tleftPaddle.addEventListener('touchend', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleLeftPaddleRelease();\n\t\t\t});\n\t\t\tleftPaddle.addEventListener('touchcancel', () => {\n\t\t\t\tif (this.leftPressed) this.handleLeftPaddleRelease();\n\t\t\t});\n\t\t}\n\n\t\t//! ボタンイベント（右パドル）。\n\t\tconst rightPaddle = document.getElementById('right-paddle');\n\t\tif (rightPaddle) {\n\t\t\trightPaddle.addEventListener('mousedown', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleRightPaddlePress();\n\t\t\t});\n\t\t\trightPaddle.addEventListener('mouseup', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleRightPaddleRelease();\n\t\t\t});\n\t\t\trightPaddle.addEventListener('mouseleave', () => {\n\t\t\t\tif (this.rightPressed) this.handleRightPaddleRelease();\n\t\t\t});\n\t\t\trightPaddle.addEventListener('touchstart', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleRightPaddlePress();\n\t\t\t});\n\t\t\trightPaddle.addEventListener('touchend', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.handleRightPaddleRelease();\n\t\t\t});\n\t\t\trightPaddle.addEventListener('touchcancel', () => {\n\t\t\t\tif (this.rightPressed) this.handleRightPaddleRelease();\n\t\t\t});\n\t\t}\n\n\t\t//! LanguageSwitcherのイベントリスナーを設定。\n\t\tconst languageSwitcherContainer = document.getElementById('languageSwitcherContainer');\n\t\tif (languageSwitcherContainer) {\n\t\t\tthis.languageSwitcher.attachEventListeners(languageSwitcherContainer);\n\t\t}\n\t}\n\n\t/**\n\t * 左パドル押下処理\n\t */\n\tprivate handleLeftPaddlePress(): void {\n\t\tif (this.leftPressed) return;\n\t\tthis.leftPressed = true;\n\t\tthis.trainer.leftPaddlePress();\n\n\t\tconst leftPaddle = document.getElementById('left-paddle');\n\t\tif (leftPaddle) leftPaddle.classList.add('pressed');\n\t}\n\n\t/**\n\t * 左パドル解放処理\n\t */\n\tprivate handleLeftPaddleRelease(): void {\n\t\tif (!this.leftPressed) return;\n\t\tthis.leftPressed = false;\n\t\tthis.trainer.leftPaddleRelease();\n\n\t\tconst leftPaddle = document.getElementById('left-paddle');\n\t\tif (leftPaddle) leftPaddle.classList.remove('pressed');\n\t}\n\n\t/**\n\t * 右パドル押下処理\n\t */\n\tprivate handleRightPaddlePress(): void {\n\t\tif (this.rightPressed) return;\n\t\tthis.rightPressed = true;\n\t\tthis.trainer.rightPaddlePress();\n\n\t\tconst rightPaddle = document.getElementById('right-paddle');\n\t\tif (rightPaddle) rightPaddle.classList.add('pressed');\n\t}\n\n\t/**\n\t * 右パドル解放処理\n\t */\n\tprivate handleRightPaddleRelease(): void {\n\t\tif (!this.rightPressed) return;\n\t\tthis.rightPressed = false;\n\t\tthis.trainer.rightPaddleRelease();\n\n\t\tconst rightPaddle = document.getElementById('right-paddle');\n\t\tif (rightPaddle) rightPaddle.classList.remove('pressed');\n\t}\n\n\t/**\n\t * パドルラベルを更新する\n\t */\n\tprivate updatePaddleLabels(): void {\n\t\tconst leftPaddle = document.getElementById('left-paddle');\n\t\tconst rightPaddle = document.getElementById('right-paddle');\n\n\t\tif (this.paddleLayout === 'normal') {\n\t\t\tif (leftPaddle) {\n\t\t\t\tleftPaddle.className = 'paddle-button dit';\n\t\t\t\tleftPaddle.innerHTML = `\n\t\t\t\t\tDIT\n\t\t\t\t\t<span class=\"paddle-label\">(短点)</span>\n\t\t\t\t\t<span class=\"paddle-key\">J キー</span>\n\t\t\t\t`;\n\t\t\t}\n\t\t\tif (rightPaddle) {\n\t\t\t\trightPaddle.className = 'paddle-button dah';\n\t\t\t\trightPaddle.innerHTML = `\n\t\t\t\t\tDAH\n\t\t\t\t\t<span class=\"paddle-label\">(長点)</span>\n\t\t\t\t\t<span class=\"paddle-key\">K キー</span>\n\t\t\t\t`;\n\t\t\t}\n\t\t} else {\n\t\t\tif (leftPaddle) {\n\t\t\t\tleftPaddle.className = 'paddle-button dah';\n\t\t\t\tleftPaddle.innerHTML = `\n\t\t\t\t\tDAH\n\t\t\t\t\t<span class=\"paddle-label\">(長点)</span>\n\t\t\t\t\t<span class=\"paddle-key\">J キー</span>\n\t\t\t\t`;\n\t\t\t}\n\t\t\tif (rightPaddle) {\n\t\t\t\trightPaddle.className = 'paddle-button dit';\n\t\t\t\trightPaddle.innerHTML = `\n\t\t\t\t\tDIT\n\t\t\t\t\t<span class=\"paddle-label\">(短点)</span>\n\t\t\t\t\t<span class=\"paddle-key\">K キー</span>\n\t\t\t\t`;\n\t\t\t}\n\t\t}\n\n\t\t//! イベントリスナーを再設定。\n\t\tthis.attachEventListeners();\n\t}\n\n\t/**\n\t * 定期更新を開始する\n\t */\n\tprivate startUpdate(): void {\n\t\t//! 100msごとに画面を更新。\n\t\tthis.updateIntervalId = window.setInterval(() => {\n\t\t\tthis.updateDisplay();\n\t\t}, 100);\n\t}\n\n\t/**\n\t * 表示を更新する\n\t */\n\tprivate updateDisplay(): void {\n\t\tconst morseBuffer = document.getElementById('morse-buffer');\n\t\tconst decodedText = document.getElementById('decoded-text');\n\t\tconst charCount = document.getElementById('char-count');\n\n\t\tif (morseBuffer) {\n\t\t\tconst buffer = this.trainer.getBuffer();\n\t\t\tconst sequence = this.trainer.getSequence();\n\t\t\tconst fullDisplay = sequence ? `${buffer} ${sequence}` : buffer;\n\t\t\tmorseBuffer.textContent = fullDisplay || t('horizontalKey.morseBufferPlaceholder');\n\t\t}\n\n\t\tif (decodedText) {\n\t\t\tconst text = this.trainer.getDecoded();\n\t\t\tdecodedText.textContent = text || t('horizontalKey.decodedTextPlaceholder');\n\t\t}\n\n\t\tif (charCount) {\n\t\t\tconst text = this.trainer.getDecoded();\n\t\t\tcharCount.textContent = text.length.toString();\n\t\t}\n\n\t\t//! スペーシング評価統計を更新。\n\t\tconst stats = this.trainer.getSpacingStatistics();\n\t\tconst spacingStats = this.trainer.getStatisticsBySpacingType();\n\n\t\tconst avgAccuracyEl = document.getElementById('timing-avg-accuracy');\n\t\tconst avgErrorEl = document.getElementById('timing-avg-error');\n\t\tconst countEl = document.getElementById('timing-count');\n\n\t\tif (avgAccuracyEl) {\n\t\t\tavgAccuracyEl.textContent = stats.count > 0\n\t\t\t\t? `${stats.averageAccuracy.toFixed(1)} ± ${stats.standardDeviation.toFixed(1)}%`\n\t\t\t\t: '--%';\n\t\t}\n\n\t\tif (avgErrorEl) {\n\t\t\tavgErrorEl.textContent = stats.count > 0\n\t\t\t\t? `${Math.round(stats.averageAbsoluteError)}ms`\n\t\t\t\t: '--ms';\n\t\t}\n\n\t\tif (countEl) {\n\t\t\tcountEl.textContent = stats.count.toString();\n\t\t}\n\n\t\t//! 文字間スペース統計。\n\t\tconst charExpectedEl = document.getElementById('timing-char-expected');\n\t\tconst charAccuracyEl = document.getElementById('timing-char-accuracy');\n\t\tconst charErrorEl = document.getElementById('timing-char-error');\n\t\tconst charCountEl = document.getElementById('timing-char-count');\n\n\t\tif (charExpectedEl) {\n\t\t\tcharExpectedEl.textContent = `${Math.round(this.timings.charGap)}ms`;\n\t\t}\n\n\t\tif (charAccuracyEl) {\n\t\t\tcharAccuracyEl.textContent = spacingStats.character.count > 0\n\t\t\t\t? `${spacingStats.character.averageAccuracy.toFixed(1)} ± ${spacingStats.character.standardDeviation.toFixed(1)}%`\n\t\t\t\t: '--%';\n\t\t}\n\n\t\tif (charErrorEl) {\n\t\t\tcharErrorEl.textContent = spacingStats.character.count > 0\n\t\t\t\t? `${Math.round(spacingStats.character.averageAbsoluteError)}ms`\n\t\t\t\t: '--ms';\n\t\t}\n\n\t\tif (charCountEl) {\n\t\t\tcharCountEl.textContent = spacingStats.character.count.toString();\n\t\t}\n\n\t\t//! 単語間スペース統計。\n\t\tconst wordExpectedEl = document.getElementById('timing-word-expected');\n\t\tconst wordAccuracyEl = document.getElementById('timing-word-accuracy');\n\t\tconst wordErrorEl = document.getElementById('timing-word-error');\n\t\tconst wordCountEl = document.getElementById('timing-word-count');\n\n\t\tif (wordExpectedEl) {\n\t\t\twordExpectedEl.textContent = `${Math.round(this.timings.wordGap)}ms`;\n\t\t}\n\n\t\tif (wordAccuracyEl) {\n\t\t\twordAccuracyEl.textContent = spacingStats.word.count > 0\n\t\t\t\t? `${spacingStats.word.averageAccuracy.toFixed(1)} ± ${spacingStats.word.standardDeviation.toFixed(1)}%`\n\t\t\t\t: '--%';\n\t\t}\n\n\t\tif (wordErrorEl) {\n\t\t\twordErrorEl.textContent = spacingStats.word.count > 0\n\t\t\t\t? `${Math.round(spacingStats.word.averageAbsoluteError)}ms`\n\t\t\t\t: '--ms';\n\t\t}\n\n\t\tif (wordCountEl) {\n\t\t\twordCountEl.textContent = spacingStats.word.count.toString();\n\t\t}\n\n\t\t//! タイミング図を更新。\n\t\tthis.updateTimingDiagram();\n\t}\n\n\t/**\n\t * タイミング図を更新する\n\t */\n\tprivate updateTimingDiagram(): void {\n\t\tconst wordData = this.trainer.getLastWordTimingData();\n\t\tconst container = document.getElementById('timing-diagram-content');\n\n\t\tif (!container) return;\n\n\t\tif (!wordData) {\n\t\t\tcontainer.innerHTML = '（文字が確定すると表示されます）';\n\t\t\treturn;\n\t\t}\n\n\t\t//! タイミング図HTMLを生成。\n\t\tconst html = this.generateTimingDiagramHTML(wordData);\n\t\tcontainer.innerHTML = html;\n\t}\n\n\t/**\n\t * タイミング図のHTMLを生成する\n\t */\n\tprivate generateTimingDiagramHTML(wordData: WordTimingData): string {\n\t\t//! タイミングチャート（PlantUML風）を生成。\n\t\tconst timingChart = this.generateTimingChart(wordData);\n\n\t\treturn `\n\t\t\t<div class=\"timing-diagram-header\">\n\t\t\t\t<span class=\"timing-diagram-char\">${wordData.decodedChar}</span>\n\t\t\t\t<span class=\"timing-diagram-morse\">${wordData.morseCode}</span>\n\t\t\t</div>\n\t\t\t${timingChart}\n\t\t`;\n\t}\n\n\t/**\n\t * タイミングチャート（PlantUML風）を生成する\n\t */\n\tprivate generateTimingChart(wordData: WordTimingData): string {\n\t\tif (wordData.paddleInputs.length === 0) {\n\t\t\treturn '<div class=\"timing-chart-empty\">（パドル入力データなし）</div>';\n\t\t}\n\n\t\t//! パドル入力イベントを時刻順にソート。\n\t\tconst sortedPaddleInputs = [...wordData.paddleInputs].sort((a, b) => a.timestamp - b.timestamp);\n\n\t\t//! 時間範囲を決定（最初のイベントから最後のイベントまで）。\n\t\tconst allTimestamps = [\n\t\t\t...sortedPaddleInputs.map(e => e.timestamp),\n\t\t\t...wordData.elements.map(e => e.startTime),\n\t\t\t...wordData.elements.map(e => e.endTime),\n\t\t\t...wordData.squeezeIntervals.flatMap(s => [s.startTime, s.endTime])\n\t\t];\n\t\tconst startTime = Math.min(...allTimestamps);\n\t\tconst endTime = Math.max(...allTimestamps);\n\t\tconst totalTime = endTime - startTime;\n\n\t\t//! 3本の信号ラインを生成。\n\t\tconst ditInputLine = this.generatePaddleSignalLine('left', wordData, startTime, totalTime);\n\t\tconst dahInputLine = this.generatePaddleSignalLine('right', wordData, startTime, totalTime);\n\t\tconst outputLine = this.generateOutputSignalLine(wordData, startTime, totalTime);\n\n\t\t//! スクイーズ区間のハイライトを生成。\n\t\tconst squeezeHighlights = wordData.squeezeIntervals.map(interval => {\n\t\t\tconst offsetPercent = ((interval.startTime - startTime) / totalTime) * 100;\n\t\t\tconst widthPercent = ((interval.endTime - interval.startTime) / totalTime) * 100;\n\t\t\treturn `<div class=\"squeeze-highlight\" style=\"left: ${offsetPercent}%; width: ${widthPercent}%\"></div>`;\n\t\t}).join('');\n\n\t\t//! パドル入力がない期間（両方のパドルが解放されている期間）を抽出。\n\t\tconst paddleGaps: { startTime: number; endTime: number }[] = [];\n\t\tlet leftDown = false;\n\t\tlet rightDown = false;\n\t\tlet gapStartTime: number | null = null;\n\n\t\tfor (const event of sortedPaddleInputs) {\n\t\t\tconst prevBothReleased = !leftDown && !rightDown;\n\n\t\t\tif (event.paddle === 'left') {\n\t\t\t\tleftDown = (event.state === 'press');\n\t\t\t} else {\n\t\t\t\trightDown = (event.state === 'press');\n\t\t\t}\n\n\t\t\tconst currentBothReleased = !leftDown && !rightDown;\n\n\t\t\tif (prevBothReleased && !currentBothReleased) {\n\t\t\t\t//! ギャップ終了（どちらかのパドルが押された）。\n\t\t\t\tif (gapStartTime !== null) {\n\t\t\t\t\tpaddleGaps.push({\n\t\t\t\t\t\tstartTime: gapStartTime,\n\t\t\t\t\t\tendTime: event.timestamp\n\t\t\t\t\t});\n\t\t\t\t\tgapStartTime = null;\n\t\t\t\t}\n\t\t\t} else if (!prevBothReleased && currentBothReleased) {\n\t\t\t\t//! ギャップ開始（両方のパドルが解放された）。\n\t\t\t\tgapStartTime = event.timestamp;\n\t\t\t}\n\t\t}\n\n\t\t//! ギャップのハイライトを生成。\n\t\tconst gapHighlights = paddleGaps.map(gap => {\n\t\t\tconst offsetPercent = ((gap.startTime - startTime) / totalTime) * 100;\n\t\t\tconst widthPercent = ((gap.endTime - gap.startTime) / totalTime) * 100;\n\t\t\treturn `<div class=\"gap-highlight\" style=\"left: ${offsetPercent}%; width: ${widthPercent}%\"></div>`;\n\t\t}).join('');\n\n\t\t//! 時間軸を生成。\n\t\tconst timeAxis = this.generateTimeAxis(totalTime);\n\n\t\t//! デバッグ情報を生成。\n\t\tconst debugInfo = this.generateDebugInfo(wordData, startTime, paddleGaps);\n\n\t\treturn `\n\t\t\t<div class=\"timing-chart-section\">\n\t\t\t\t<h4>タイミングチャート</h4>\n\t\t\t\t<div class=\"timing-chart-container\">\n\t\t\t\t\t<div class=\"timing-chart-signals\">\n\t\t\t\t\t\t<div class=\"squeeze-highlights-layer\">\n\t\t\t\t\t\t\t${squeezeHighlights}\n\t\t\t\t\t\t\t${gapHighlights}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t${ditInputLine}\n\t\t\t\t\t\t${dahInputLine}\n\t\t\t\t\t\t${outputLine}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"timing-chart-axis\">${timeAxis}</div>\n\t\t\t\t</div>\n\t\t\t\t${debugInfo}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\t/**\n\t * パドル信号ラインを生成する\n\t */\n\tprivate generatePaddleSignalLine(\n\t\tpaddle: 'left' | 'right',\n\t\twordData: WordTimingData,\n\t\tstartTime: number,\n\t\ttotalTime: number\n\t): string {\n\t\tconst label = paddle === 'left' ? 'Dit入力' : 'Dash入力';\n\t\t//! 該当パドルのイベントを抽出して時刻順にソート。\n\t\tconst events = wordData.paddleInputs\n\t\t\t.filter(e => e.paddle === paddle)\n\t\t\t.sort((a, b) => a.timestamp - b.timestamp);\n\n\t\t//! 信号の状態変化を時系列で追跡。\n\t\tlet isHigh = false;\n\t\tconst segments: { start: number; end: number; high: boolean }[] = [];\n\t\tlet lastTime = startTime;\n\n\t\tfor (const event of events) {\n\t\t\tif (event.timestamp > lastTime) {\n\t\t\t\tsegments.push({\n\t\t\t\t\tstart: lastTime,\n\t\t\t\t\tend: event.timestamp,\n\t\t\t\t\thigh: isHigh,\n\t\t\t\t});\n\t\t\t}\n\t\t\tisHigh = (event.state === 'press');\n\t\t\tlastTime = event.timestamp;\n\t\t}\n\n\t\t// 最後のセグメント\n\t\tsegments.push({\n\t\t\tstart: lastTime,\n\t\t\tend: startTime + totalTime,\n\t\t\thigh: isHigh,\n\t\t});\n\n\t\t//! セグメントをHTMLに変換。\n\t\tconst segmentsHTML = segments.map(seg => {\n\t\t\tconst offsetPercent = ((seg.start - startTime) / totalTime) * 100;\n\t\t\tconst widthPercent = ((seg.end - seg.start) / totalTime) * 100;\n\t\t\tconst heightClass = seg.high ? 'signal-high' : 'signal-low';\n\t\t\treturn `<div class=\"signal-segment ${heightClass}\" style=\"left: ${offsetPercent}%; width: ${widthPercent}%\"></div>`;\n\t\t}).join('');\n\n\t\treturn `\n\t\t\t<div class=\"timing-chart-signal\">\n\t\t\t\t<div class=\"signal-label\">${label}</div>\n\t\t\t\t<div class=\"signal-timeline\">${segmentsHTML}</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\t/**\n\t * 出力信号ラインを生成する\n\t */\n\tprivate generateOutputSignalLine(\n\t\twordData: WordTimingData,\n\t\tstartTime: number,\n\t\ttotalTime: number\n\t): string {\n\t\t//! 要素の送信期間をセグメントとして生成（時刻順にソート）。\n\t\tconst segments: { start: number; end: number; element: '.' | '-' }[] = [];\n\n\t\tfor (const element of wordData.elements) {\n\t\t\tsegments.push({\n\t\t\t\tstart: element.startTime,\n\t\t\t\tend: element.endTime,\n\t\t\t\telement: element.element,\n\t\t\t});\n\t\t}\n\n\t\t//! 開始時刻順にソート。\n\t\tsegments.sort((a, b) => a.start - b.start);\n\n\t\t//! セグメントをHTMLに変換。\n\t\tlet lastEnd = startTime;\n\t\tconst segmentsHTML: string[] = [];\n\n\t\tfor (const seg of segments) {\n\t\t\t// ギャップ（Low）\n\t\t\tif (seg.start > lastEnd) {\n\t\t\t\tconst offsetPercent = ((lastEnd - startTime) / totalTime) * 100;\n\t\t\t\tconst widthPercent = ((seg.start - lastEnd) / totalTime) * 100;\n\t\t\t\tsegmentsHTML.push(\n\t\t\t\t\t`<div class=\"signal-segment signal-low\" style=\"left: ${offsetPercent}%; width: ${widthPercent}%\"></div>`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// 要素（High）\n\t\t\tconst offsetPercent = ((seg.start - startTime) / totalTime) * 100;\n\t\t\tconst widthPercent = ((seg.end - seg.start) / totalTime) * 100;\n\t\t\tconst elementClass = seg.element === '.' ? 'output-dit' : 'output-dah';\n\t\t\tsegmentsHTML.push(\n\t\t\t\t`<div class=\"signal-segment signal-high ${elementClass}\" style=\"left: ${offsetPercent}%; width: ${widthPercent}%\">\n\t\t\t\t\t<span class=\"element-label\">${seg.element}</span>\n\t\t\t\t</div>`\n\t\t\t);\n\n\t\t\tlastEnd = seg.end;\n\t\t}\n\n\t\t// 最後のギャップ\n\t\tif (lastEnd < startTime + totalTime) {\n\t\t\tconst offsetPercent = ((lastEnd - startTime) / totalTime) * 100;\n\t\t\tconst widthPercent = ((startTime + totalTime - lastEnd) / totalTime) * 100;\n\t\t\tsegmentsHTML.push(\n\t\t\t\t`<div class=\"signal-segment signal-low\" style=\"left: ${offsetPercent}%; width: ${widthPercent}%\"></div>`\n\t\t\t);\n\t\t}\n\n\t\treturn `\n\t\t\t<div class=\"timing-chart-signal\">\n\t\t\t\t<div class=\"signal-label\">出力</div>\n\t\t\t\t<div class=\"signal-timeline\">${segmentsHTML.join('')}</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\t/**\n\t * 時間軸を生成する\n\t */\n\tprivate generateTimeAxis(totalTime: number): string {\n\t\tconst step = totalTime / 4;\n\t\treturn `\n\t\t\t<span class=\"axis-tick\" style=\"left: 0%\">0ms</span>\n\t\t\t<span class=\"axis-tick\" style=\"left: 25%\">${Math.round(step)}ms</span>\n\t\t\t<span class=\"axis-tick\" style=\"left: 50%\">${Math.round(step * 2)}ms</span>\n\t\t\t<span class=\"axis-tick\" style=\"left: 75%\">${Math.round(step * 3)}ms</span>\n\t\t\t<span class=\"axis-tick\" style=\"left: 100%\">${Math.round(totalTime)}ms</span>\n\t\t`;\n\t}\n\n\t/**\n\t * デバッグ情報を生成する\n\t */\n\tprivate generateDebugInfo(\n\t\twordData: WordTimingData,\n\t\tstartTime: number,\n\t\tpaddleGaps: { startTime: number; endTime: number }[]\n\t): string {\n\t\t//! パドル入力イベントをソートして整理。\n\t\tconst sortedInputs = [...wordData.paddleInputs].sort((a, b) => a.timestamp - b.timestamp);\n\n\t\t//! イベントリストを生成。\n\t\tconst eventLines = sortedInputs.map(event => {\n\t\t\tconst relativeTime = event.timestamp - startTime;\n\t\t\tconst paddleLabel = event.paddle === 'left' ? 'Dit' : 'Dash';\n\t\t\tconst stateLabel = event.state === 'press' ? '押下' : '解放';\n\t\t\treturn `${relativeTime.toFixed(0)}ms: ${paddleLabel}${stateLabel}`;\n\t\t});\n\n\t\t//! スクイーズ区間リストを生成。\n\t\tconst squeezeLines = wordData.squeezeIntervals.map(interval => {\n\t\t\tconst startRelative = interval.startTime - startTime;\n\t\t\tconst endRelative = interval.endTime - startTime;\n\t\t\tconst duration = interval.endTime - interval.startTime;\n\t\t\treturn `Squeeze ON: ${startRelative.toFixed(0)}ms, OFF: ${endRelative.toFixed(0)}ms (${duration.toFixed(0)}ms)`;\n\t\t});\n\n\t\t//! 無入力期間（ギャップ）リストを生成。\n\t\tconst gapLines = paddleGaps.map(gap => {\n\t\t\tconst startRelative = gap.startTime - startTime;\n\t\t\tconst endRelative = gap.endTime - startTime;\n\t\t\tconst duration = gap.endTime - gap.startTime;\n\t\t\treturn `Gap ON: ${startRelative.toFixed(0)}ms, OFF: ${endRelative.toFixed(0)}ms (${duration.toFixed(0)}ms)`;\n\t\t});\n\n\t\treturn `\n\t\t\t<div class=\"timing-debug-info\">\n\t\t\t\t<div class=\"debug-section\">\n\t\t\t\t\t<h5>パドル入力イベント（相対時刻）</h5>\n\t\t\t\t\t<div class=\"debug-events\">\n\t\t\t\t\t\t${eventLines.length > 0 ? eventLines.join('<br>') : '（イベントなし）'}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"debug-section\">\n\t\t\t\t\t<h5>スクイーズ区間</h5>\n\t\t\t\t\t<div class=\"debug-squeezes\">\n\t\t\t\t\t\t${squeezeLines.length > 0 ? squeezeLines.join('<br>') : '（スクイーズなし）'}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"debug-section\">\n\t\t\t\t\t<h5>無入力期間</h5>\n\t\t\t\t\t<div class=\"debug-gaps\">\n\t\t\t\t\t\t${gapLines.length > 0 ? gapLines.join('<br>') : '（ギャップなし）'}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\t/**\n\t * 設定モーダルを開く\n\t */\n\tprivate openSettingsModal(): void {\n\t\t//! 現在の設定値を取得。\n\t\tconst currentValues: SettingValues = {\n\t\t\tvolume: Math.round(this.audio.getVolume() * 100),\n\t\t\tfrequency: this.audio.getFrequency(),\n\t\t\twpm: this.currentWPM,\n\t\t\tiambicMode: this.iambicMode,\n\t\t\tpaddleLayout: this.paddleLayout,\n\t\t\tleftKeyCode: this.leftKeyCode,\n\t\t\trightKeyCode: this.rightKeyCode\n\t\t};\n\n\t\t//! 設定変更前の値を保存（キャンセル時の復元用）。\n\t\tconst savedSettings = {\n\t\t\tvolume: this.audio.getVolume(),\n\t\t\tfrequency: this.audio.getFrequency(),\n\t\t\twpm: this.currentWPM,\n\t\t\tiambicMode: this.iambicMode,\n\t\t\tpaddleLayout: this.paddleLayout,\n\t\t\tleftKeyCode: this.leftKeyCode,\n\t\t\trightKeyCode: this.rightKeyCode\n\t\t};\n\n\t\t//! SettingsModalを作成。\n\t\tconst modal = new SettingsModal(\n\t\t\t'horizontal-key-settings-modal',\n\t\t\tALL_SETTING_ITEMS,\n\t\t\tcurrentValues,\n\t\t\t{\n\t\t\t\tonSave: (values: SettingValues) => {\n\t\t\t\t\t//! 設定を保存。\n\t\t\t\t\tthis.audio.setVolume((values.volume as number) / 100);\n\t\t\t\t\tthis.audio.setFrequency(values.frequency as number);\n\t\t\t\t\tthis.audio.setWPM(values.wpm as number);\n\t\t\t\t\tthis.currentWPM = values.wpm as number;\n\t\t\t\t\tthis.iambicMode = values.iambicMode as IambicMode;\n\t\t\t\t\tthis.paddleLayout = values.paddleLayout as PaddleLayout;\n\t\t\t\t\tthis.leftKeyCode = values.leftKeyCode as string;\n\t\t\t\t\tthis.rightKeyCode = values.rightKeyCode as string;\n\n\t\t\t\t\t//! localStorageに保存。\n\t\t\t\t\tlocalStorage.setItem('horizontalKeyWPM', this.currentWPM.toString());\n\t\t\t\t\tlocalStorage.setItem('horizontalKeyIambicMode', this.iambicMode);\n\t\t\t\t\tlocalStorage.setItem('horizontalKeyPaddleLayout', this.paddleLayout);\n\t\t\t\t\tlocalStorage.setItem('horizontalKeyLeftCode', this.leftKeyCode);\n\t\t\t\t\tlocalStorage.setItem('horizontalKeyRightCode', this.rightKeyCode);\n\n\t\t\t\t\t//! 現在のWPM表示を更新。\n\t\t\t\t\tconst currentWpmDisplay = document.getElementById('current-wpm');\n\t\t\t\t\tif (currentWpmDisplay) currentWpmDisplay.textContent = this.currentWPM.toString();\n\n\t\t\t\t\t//! 現在のIambicモード表示を更新。\n\t\t\t\t\tconst currentIambicModeDisplay = document.getElementById('current-iambic-mode');\n\t\t\t\t\tif (currentIambicModeDisplay) currentIambicModeDisplay.textContent = this.iambicMode;\n\n\t\t\t\t\t//! パドルレイアウトに応じてラベルを更新。\n\t\t\t\t\tthis.updatePaddleLabels();\n\n\t\t\t\t\t//! トレーナーを再初期化。\n\t\t\t\t\tthis.initializeTrainer();\n\t\t\t\t},\n\t\t\t\tonCancel: () => {\n\t\t\t\t\t//! 設定を元に戻す。\n\t\t\t\t\tthis.audio.setVolume(savedSettings.volume);\n\t\t\t\t\tthis.audio.setFrequency(savedSettings.frequency);\n\t\t\t\t\tthis.audio.setWPM(savedSettings.wpm);\n\t\t\t\t\tthis.currentWPM = savedSettings.wpm;\n\t\t\t\t\tthis.iambicMode = savedSettings.iambicMode;\n\t\t\t\t\tthis.paddleLayout = savedSettings.paddleLayout;\n\t\t\t\t\tthis.leftKeyCode = savedSettings.leftKeyCode;\n\t\t\t\t\tthis.rightKeyCode = savedSettings.rightKeyCode;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t//! モーダルを表示。\n\t\tmodal.show('horizontal-key');\n\t}\n\n\t/**\n\t * ビューを破棄する\n\t */\n\tdestroy(): void {\n\t\t//! イベントリスナーを削除。\n\t\tif (this.keyPressHandler) {\n\t\t\twindow.removeEventListener('keydown', this.keyPressHandler);\n\t\t\tthis.keyPressHandler = null;\n\t\t}\n\t\tif (this.keyReleaseHandler) {\n\t\t\twindow.removeEventListener('keyup', this.keyReleaseHandler);\n\t\t\tthis.keyReleaseHandler = null;\n\t\t}\n\n\t\t//! 定期更新を停止。\n\t\tif (this.updateIntervalId !== null) {\n\t\t\tclearInterval(this.updateIntervalId);\n\t\t\tthis.updateIntervalId = null;\n\t\t}\n\n\t\t//! トレーナーをクリア。\n\t\tthis.trainer.clear();\n\t}\n}\n","/**\n * フラッシュカードTSVローダー\n */\n\nimport type { FlashcardEntry } from 'morse-engine';\n\n/**\n * TSVファイルからフラッシュカードデータをロードする\n * @param url - TSVファイルのURL\n * @returns FlashcardEntryの配列\n */\nexport async function loadFlashcardData(url: string): Promise<FlashcardEntry[]> {\n\t//! TSVファイルを取得。\n\tconst response = await fetch(url);\n\tif (!response.ok) {\n\t\tthrow new Error(`Failed to load flashcard data: ${response.statusText}`);\n\t}\n\n\tconst text = await response.text();\n\treturn parseTSV(text);\n}\n\n/**\n * TSVテキストをパースしてFlashcardEntry配列に変換する\n * @param text - TSVテキスト\n * @returns FlashcardEntryの配列\n */\nfunction parseTSV(text: string): FlashcardEntry[] {\n\t//! 行に分割。\n\tconst lines = text.split('\\n').filter(line => line.trim());\n\tif (lines.length === 0) return [];\n\n\t//! 先頭行はヘッダーなのでスキップ。\n\tconst dataLines = lines.slice(1);\n\n\treturn dataLines.map((line, index) => {\n\t\t//! タブで分割。\n\t\tconst columns = line.split('\\t');\n\n\t\t//! 最低限6列（タグ、頻度、略語、英文、和訳、説明）必要。\n\t\tif (columns.length < 6) {\n\t\t\t//! 開発環境でのみ警告を出力。\n\t\t\tif (import.meta.env.DEV) {\n\t\t\t\tconsole.warn(`Line ${index + 2} has insufficient columns, skipping`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tconst entry: FlashcardEntry = {\n\t\t\ttags: columns[0].trim(),\n\t\t\tfrequency: parseInt(columns[1].trim(), 10) || 1,\n\t\t\tabbreviation: columns[2].trim(),\n\t\t\tenglish: columns[3].trim(),\n\t\t\tjapanese: columns[4].trim(),\n\t\t\tdescription: columns[5]?.trim(),\n\t\t\texample: columns[6]?.trim()\n\t\t};\n\n\t\treturn entry;\n\t}).filter((entry): entry is FlashcardEntry => entry !== null);\n}\n","/**\n * フラッシュカードビュー\n * CW略語・Q符号学習\n */\n\nimport type { View } from '../../router';\nimport {\n\tFlashcardTrainer,\n\tFlashcardState,\n\tAudioGenerator,\n\tMorseCodec,\n\ttype FlashcardEntry,\n\ttype ExamQuestion,\n\ttype ExamResult,\n\ttype QuestionType,\n\ttype LearnQuestionType,\n\ttype Progress,\n\ttype SortColumn,\n\ttype SortDirection,\n\ttype DisplayMode\n} from 'morse-engine';\nimport { loadFlashcardData } from '../../utils/flashcard-loader';\nimport { SettingsModal, ALL_SETTING_ITEMS, type SettingValues } from 'morse-engine';\nimport { t } from '../../i18n';\nimport { LanguageSwitcher } from '../components/LanguageSwitcher';\n\n/**\n * 画面状態（ローディングと結果表示用）\n */\ntype ViewState = 'loading' | 'browse' | 'learn' | 'exam' | 'exam-result';\n\n/**\n * フラッシュカードビュークラス\n */\nexport class FlashcardView implements View {\n\tprivate languageSwitcher = new LanguageSwitcher();\n\tprivate allEntries: FlashcardEntry[] = [];\n\tprivate filteredEntries: FlashcardEntry[] = [];\n\tprivate currentState: ViewState = 'loading';\n\n\t// フィルター関連\n\tprivate selectedTags: Set<string> = new Set();\n\tprivate selectedFrequencies: Set<number> = new Set([5]);\n\tprivate searchQuery = '';\n\n\t// 一覧表示関連\n\tprivate displayMode: DisplayMode = 'card';\n\tprivate sortColumn: SortColumn = 'abbreviation';\n\tprivate sortDirection: SortDirection = 'asc';\n\n\t// 学習モード関連\n\tprivate learnQuestionType: LearnQuestionType = 'abbr-to-meaning';\n\tprivate learnCards: FlashcardEntry[] = [];\n\tprivate currentLearnIndex = 0;\n\tprivate isFlipped = false;\n\tprivate reviewMode = false;\n\tprivate progress: Progress = {\n\t\tknown: new Set(),\n\t\tunknown: new Set()\n\t};\n\n\t// 試験関連\n\tprivate questionType: QuestionType = 'abbr-to-meaning';\n\tprivate questionCount: number | 'all' = 10;\n\tprivate questions: ExamQuestion[] = [];\n\tprivate currentQuestionIndex = 0;\n\tprivate results: ExamResult[] = [];\n\n\t// 音声関連\n\tprivate audio: AudioGenerator;\n\tprivate currentlyPlaying: string | null = null;\n\n\tconstructor() {\n\t\tthis.audio = new AudioGenerator({\n\t\t\tfrequency: 700,\n\t\t\tvolume: 0.5,\n\t\t\twpm: 20\n\t\t});\n\t\t//! ライブラリから状態を読み込む。\n\t\tthis.progress = FlashcardState.loadProgress();\n\t\tconst filters = FlashcardState.loadFilters();\n\t\tthis.selectedTags = filters.selectedTags;\n\t\tthis.selectedFrequencies = filters.selectedFrequencies;\n\t\tthis.searchQuery = filters.searchQuery;\n\n\t\tconst viewState = FlashcardState.loadViewState();\n\t\tthis.displayMode = viewState.displayMode;\n\t\tthis.sortColumn = viewState.sortColumn;\n\t\tthis.sortDirection = viewState.sortDirection;\n\t\tthis.learnQuestionType = viewState.learnQuestionType;\n\t\tthis.questionType = viewState.examQuestionType as QuestionType;\n\t}\n\n\t/**\n\t * 進捗データを保存する\n\t */\n\tprivate saveProgress(): void {\n\t\tFlashcardState.saveProgress(this.progress);\n\t}\n\n\t/**\n\t * 進捗データをクリアする\n\t */\n\tprivate clearProgress(): void {\n\t\tthis.progress = { known: new Set(), unknown: new Set() };\n\t\tFlashcardState.clearProgress();\n\t}\n\n\t/**\n\t * フィルター状態を保存する\n\t */\n\tprivate saveFilters(): void {\n\t\tFlashcardState.saveFilters({\n\t\t\tselectedTags: this.selectedTags,\n\t\t\tselectedFrequencies: this.selectedFrequencies,\n\t\t\tsearchQuery: this.searchQuery\n\t\t});\n\t}\n\n\tasync render(): Promise<void> {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tif (this.currentState === 'loading') {\n\t\t\t//! ローディング画面を表示。\n\t\t\tapp.innerHTML = `\n\t\t\t\t<div class=\"container\">\n\t\t\t\t\t<header class=\"header\">\n\t\t\t\t\t\t<div class=\"header-top\">\n\t\t\t\t\t\t\t<button class=\"back-btn\">${t('common.backToMenu')}</button>\n\t\t\t\t\t\t\t<h1>${t('flashcard.title')}</h1>\n\t\t\t\t\t\t\t<div id=\"languageSwitcherContainer\">\n\t\t\t\t\t\t\t\t${this.languageSwitcher.render()}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</header>\n\t\t\t\t\t<div class=\"loading-container\">\n\t\t\t\t\t\t<p>${t('flashcard.loading')}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tconst backBtn = document.querySelector('.back-btn');\n\t\t\tbackBtn?.addEventListener('click', () => {\n\t\t\t\twindow.location.hash = '#menu';\n\t\t\t});\n\n\t\t\t//! データをロード。\n\t\t\ttry {\n\t\t\t\tthis.allEntries = await loadFlashcardData('/flashcard.tsv');\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\t//! データロード完了後、保存されていたviewModeを復元。\n\t\t\t\tconst viewState = FlashcardState.loadViewState();\n\t\t\t\tthis.currentState = viewState.viewMode;\n\t\t\t\tthis.render();\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Failed to load flashcard data:', error);\n\t\t\t\tapp.innerHTML = `\n\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t<header class=\"header\">\n\t\t\t\t\t\t\t<div class=\"header-top\">\n\t\t\t\t\t\t\t\t<button class=\"back-btn\">${t('common.backToMenu')}</button>\n\t\t\t\t\t\t\t\t<h1>${t('flashcard.title')}</h1>\n\t\t\t\t\t\t\t\t<div id=\"languageSwitcherContainer\">\n\t\t\t\t\t\t\t\t\t${this.languageSwitcher.render()}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<div class=\"error-container\">\n\t\t\t\t\t\t\t<p>${t('flashcard.loadError')}</p>\n\t\t\t\t\t\t\t<p>${t('flashcard.error')} ${error}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t`;\n\t\t\t}\n\t\t} else if (this.currentState === 'browse') {\n\t\t\tthis.renderBrowseMode();\n\t\t} else if (this.currentState === 'learn') {\n\t\t\tthis.renderLearnMode();\n\t\t} else if (this.currentState === 'exam') {\n\t\t\tthis.renderExamMode();\n\t\t} else if (this.currentState === 'exam-result') {\n\t\t\tthis.renderExamResultMode();\n\t\t}\n\t}\n\n\t/**\n\t * 共通のフィルターセクションHTMLを生成\n\t */\n\tprivate renderFilterSection(): string {\n\t\tconst allTags = FlashcardTrainer.getAllTags(this.allEntries);\n\n\t\treturn `\n\t\t\t<div class=\"filter-section\">\n\t\t\t\t<h3>${t('flashcard.filter.title')}</h3>\n\n\t\t\t\t<div class=\"filter-group\">\n\t\t\t\t\t<label>${t('flashcard.filter.tagLabel')}</label>\n\t\t\t\t\t<div class=\"tag-filter\" id=\"tag-filter\">\n\t\t\t\t\t\t${allTags.map(tag => `\n\t\t\t\t\t\t\t<label class=\"tag-checkbox\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" value=\"${tag}\" ${this.selectedTags.has(tag) ? 'checked' : ''}>\n\t\t\t\t\t\t\t\t<span>${tag}</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t`).join('')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"filter-group\">\n\t\t\t\t\t<label>${t('flashcard.filter.frequencyLabel')}</label>\n\t\t\t\t\t<div class=\"frequency-filter\" id=\"frequency-filter\">\n\t\t\t\t\t\t${[5, 4, 3, 2, 1].map(freq => `\n\t\t\t\t\t\t\t<label class=\"frequency-checkbox\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" value=\"${freq}\" ${this.selectedFrequencies.has(freq) ? 'checked' : ''}>\n\t\t\t\t\t\t\t\t<span>★${freq}</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t`).join('')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"filter-group\">\n\t\t\t\t\t<label for=\"search-input\">${t('flashcard.filter.searchLabel')}</label>\n\t\t\t\t\t<input type=\"text\" id=\"search-input\" class=\"search-input\" placeholder=\"${t('flashcard.filter.searchPlaceholder')}\" value=\"${this.searchQuery}\">\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"filter-stats\">\n\t\t\t\t\t<span>${t('flashcard.filter.filteredCount')} <strong id=\"filtered-count\">${this.filteredEntries.length}</strong> ${t('flashcard.filter.items')}</span>\n\t\t\t\t\t<span>${t('flashcard.filter.totalCount')} <strong>${this.allEntries.length}</strong> ${t('flashcard.filter.items')}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\t/**\n\t * 一覧モード（browse）をレンダリング\n\t */\n\tprivate renderBrowseMode(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"settings-icon\" id=\"settingsIcon\">\n\t\t\t\t<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<div class=\"header-top\">\n\t\t\t\t\t\t<button class=\"back-btn\">${t('common.backToMenu')}</button>\n\t\t\t\t\t\t<h1>${t('flashcard.title')}</h1>\n\t\t\t\t\t\t<div id=\"languageSwitcherContainer\">\n\t\t\t\t\t\t\t${this.languageSwitcher.render()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"tabs\">\n\t\t\t\t\t<button class=\"tab-button active\" data-tab=\"browse\">${t('flashcard.tabs.browse')}</button>\n\t\t\t\t\t<button class=\"tab-button\" data-tab=\"learn\">${t('flashcard.tabs.learn')}</button>\n\t\t\t\t\t<button class=\"tab-button\" data-tab=\"exam\">${t('flashcard.tabs.exam')}</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"flashcard-container\">\n\t\t\t\t\t${this.renderFilterSection()}\n\n\t\t\t\t\t<div class=\"entries-section\" id=\"entries-section\">\n\t\t\t\t\t\t<!-- ここに一覧が表示される -->\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t\t<h3>${t('flashcard.browse.howToUse')}</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>${t('flashcard.browse.instruction1')}</li>\n\t\t\t\t\t\t\t<li>${t('flashcard.browse.instruction2')}</li>\n\t\t\t\t\t\t\t<li>${t('flashcard.browse.instruction3')}</li>\n\t\t\t\t\t\t\t<li>${t('flashcard.browse.instruction4')}</li>\n\t\t\t\t\t\t\t<li>${t('flashcard.browse.instruction5')}</li>\n\t\t\t\t\t\t\t<li>${t('flashcard.browse.instruction6')}</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.renderEntries();\n\t\tthis.attachBrowseModeListeners();\n\t}\n\n\t/**\n\t * エントリー一覧を表示\n\t */\n\tprivate renderEntries(): void {\n\t\tconst container = document.getElementById('entries-section');\n\t\tif (!container) return;\n\n\t\tif (this.displayMode === 'card') {\n\t\t\tthis.renderCardView(container);\n\t\t} else {\n\t\t\tthis.renderListView(container);\n\t\t}\n\t}\n\n\t/**\n\t * カード表示\n\t */\n\tprivate renderCardView(container: HTMLElement): void {\n\t\tcontainer.innerHTML = `\n\t\t\t<div class=\"entries-header\">\n\t\t\t\t<h3>${t('flashcard.browse.entriesHeader')} (${this.filteredEntries.length}${t('flashcard.browse.entriesCount')})</h3>\n\t\t\t\t<button id=\"toggle-display-btn\" class=\"toggle-display-btn\">${t('flashcard.browse.toggleList')}</button>\n\t\t\t</div>\n\t\t\t<div class=\"entries-grid\">\n\t\t\t\t${this.filteredEntries.map(entry => `\n\t\t\t\t\t<div class=\"entry-card ${this.currentlyPlaying === entry.abbreviation ? 'playing' : ''}\" data-abbr=\"${entry.abbreviation}\">\n\t\t\t\t\t\t<div class=\"entry-header\">\n\t\t\t\t\t\t\t<div class=\"entry-abbr\">${this.formatAbbreviation(entry.abbreviation)}</div>\n\t\t\t\t\t\t\t<div class=\"entry-frequency\" title=\"${t('flashcard.filter.frequencyLabel')}: ${entry.frequency}/5\">${'★'.repeat(entry.frequency)}${'☆'.repeat(5 - entry.frequency)}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"entry-english\">${entry.english}</div>\n\t\t\t\t\t\t<div class=\"entry-japanese\">${entry.japanese}</div>\n\t\t\t\t\t\t${entry.description ? `<div class=\"entry-description\">${entry.description}</div>` : ''}\n\t\t\t\t\t\t${entry.example ? `<div class=\"entry-example\">${t('flashcard.browse.examplePrefix')}${entry.example}</div>` : ''}\n\t\t\t\t\t\t<div class=\"entry-tags\">${entry.tags}</div>\n\t\t\t\t\t</div>\n\t\t\t\t`).join('')}\n\t\t\t</div>\n\t\t`;\n\n\t\t//! カードクリックでモールス再生。\n\t\tcontainer.querySelectorAll('.entry-card').forEach(card => {\n\t\t\tcard.addEventListener('click', () => {\n\t\t\t\tconst abbr = card.getAttribute('data-abbr');\n\t\t\t\tif (abbr) this.playMorse(abbr);\n\t\t\t});\n\t\t});\n\n\t\t//! 表示モード切り替えボタン。\n\t\tconst toggleBtn = document.getElementById('toggle-display-btn');\n\t\tif (toggleBtn) {\n\t\t\ttoggleBtn.addEventListener('click', () => {\n\t\t\t\tthis.displayMode = 'list';\n\t\t\t\tFlashcardState.saveDisplayMode(this.displayMode);\n\t\t\t\tthis.renderEntries();\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * リスト表示\n\t */\n\tprivate renderListView(container: HTMLElement): void {\n\t\tcontainer.innerHTML = `\n\t\t\t<div class=\"entries-header\">\n\t\t\t\t<h3>${t('flashcard.browse.entriesHeader')} (${this.filteredEntries.length}${t('flashcard.browse.entriesCount')})</h3>\n\t\t\t\t<button id=\"toggle-display-btn\" class=\"toggle-display-btn\">${t('flashcard.browse.toggleCard')}</button>\n\t\t\t</div>\n\t\t\t<div class=\"list-table-container\">\n\t\t\t\t<table class=\"list-table\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th class=\"sortable\" data-column=\"abbreviation\">${t('flashcard.browse.tableHeaders.abbreviation')}${this.getSortIndicator('abbreviation')}</th>\n\t\t\t\t\t\t\t<th class=\"sortable\" data-column=\"english\">${t('flashcard.browse.tableHeaders.english')}${this.getSortIndicator('english')}</th>\n\t\t\t\t\t\t\t<th class=\"sortable\" data-column=\"japanese\">${t('flashcard.browse.tableHeaders.japanese')}${this.getSortIndicator('japanese')}</th>\n\t\t\t\t\t\t\t<th class=\"sortable\" data-column=\"frequency\">${t('flashcard.browse.tableHeaders.frequency')}${this.getSortIndicator('frequency')}</th>\n\t\t\t\t\t\t\t<th class=\"sortable\" data-column=\"tags\">${t('flashcard.browse.tableHeaders.tags')}${this.getSortIndicator('tags')}</th>\n\t\t\t\t\t\t\t<th>${t('flashcard.browse.tableHeaders.description')}</th>\n\t\t\t\t\t\t\t<th>${t('flashcard.browse.tableHeaders.example')}</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t${this.filteredEntries.map(entry => `\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td class=\"list-abbr\">\n\t\t\t\t\t\t\t\t\t<button class=\"abbr-play-btn ${this.currentlyPlaying === entry.abbreviation ? 'playing' : ''}\" data-abbr=\"${entry.abbreviation}\">\n\t\t\t\t\t\t\t\t\t\t${this.formatAbbreviation(entry.abbreviation)}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>${entry.english}</td>\n\t\t\t\t\t\t\t\t<td>${entry.japanese}</td>\n\t\t\t\t\t\t\t\t<td title=\"${t('flashcard.filter.frequencyLabel')}: ${entry.frequency}/5\">${'★'.repeat(entry.frequency)}${'☆'.repeat(5 - entry.frequency)}</td>\n\t\t\t\t\t\t\t\t<td>${entry.tags}</td>\n\t\t\t\t\t\t\t\t<td>${entry.description || ''}</td>\n\t\t\t\t\t\t\t\t<td>${entry.example || ''}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t`).join('')}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t`;\n\n\t\t//! ソートヘッダーのイベントリスナー。\n\t\tconst sortHeaders = container.querySelectorAll('th.sortable');\n\t\tsortHeaders.forEach(header => {\n\t\t\theader.addEventListener('click', () => {\n\t\t\t\tconst column = header.getAttribute('data-column') as SortColumn;\n\t\t\t\tif (column) this.toggleSort(column);\n\t\t\t});\n\t\t});\n\n\t\t//! 略語再生ボタンのイベントリスナー。\n\t\tconst playButtons = container.querySelectorAll('.abbr-play-btn');\n\t\tplayButtons.forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst abbr = btn.getAttribute('data-abbr');\n\t\t\t\tif (abbr) this.playMorse(abbr);\n\t\t\t});\n\t\t});\n\n\t\t//! 表示モード切り替えボタン。\n\t\tconst toggleBtn = document.getElementById('toggle-display-btn');\n\t\tif (toggleBtn) {\n\t\t\ttoggleBtn.addEventListener('click', () => {\n\t\t\t\tthis.displayMode = 'card';\n\t\t\t\tFlashcardState.saveDisplayMode(this.displayMode);\n\t\t\t\tthis.renderEntries();\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * 学習モードをレンダリング\n\t */\n\tprivate renderLearnMode(): void {\n\t\tif (this.learnCards.length === 0) {\n\t\t\t//! セットアップ画面を表示。\n\t\t\tthis.renderLearnSetup();\n\t\t} else {\n\t\t\t//! 学習カードを表示。\n\t\t\tthis.renderLearnCard();\n\t\t}\n\t}\n\n\t/**\n\t * 学習モードセットアップ画面\n\t */\n\tprivate renderLearnSetup(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\t//! カード枚数を計算。\n\t\tlet cardCount = this.filteredEntries.length;\n\t\tif (this.reviewMode) {\n\t\t\tcardCount = this.filteredEntries.filter(e =>\n\t\t\t\tthis.progress.unknown.has(e.abbreviation)\n\t\t\t).length;\n\t\t}\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"settings-icon\" id=\"settingsIcon\">\n\t\t\t\t<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<div class=\"header-top\">\n\t\t\t\t\t\t<button class=\"back-btn\">${t('common.backToMenu')}</button>\n\t\t\t\t\t\t<h1>${t('flashcard.title')}</h1>\n\t\t\t\t\t\t<div id=\"languageSwitcherContainer\">\n\t\t\t\t\t\t\t${this.languageSwitcher.render()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"tabs\">\n\t\t\t\t\t<button class=\"tab-button\" data-tab=\"browse\">${t('flashcard.tabs.browse')}</button>\n\t\t\t\t\t<button class=\"tab-button active\" data-tab=\"learn\">${t('flashcard.tabs.learn')}</button>\n\t\t\t\t\t<button class=\"tab-button\" data-tab=\"exam\">${t('flashcard.tabs.exam')}</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"flashcard-container\">\n\t\t\t\t\t${this.renderFilterSection()}\n\n\t\t\t\t\t<div class=\"learn-setup-section\">\n\t\t\t\t\t\t<h3>${t('flashcard.learn.setupTitle')}</h3>\n\n\t\t\t\t\t\t<div class=\"filter-group\">\n\t\t\t\t\t\t\t<label>${t('flashcard.learn.modeLabel')}</label>\n\t\t\t\t\t\t\t<div class=\"mode-buttons\">\n\t\t\t\t\t\t\t\t<button class=\"mode-btn ${this.reviewMode ? 'active' : ''}\" id=\"review-mode-btn\">\n\t\t\t\t\t\t\t\t\t${t('flashcard.learn.reviewMode')}${this.progress.unknown.size}${t('flashcard.learn.reviewModeCount')}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"filter-group\">\n\t\t\t\t\t\t\t<label>${t('flashcard.learn.questionTypeLabel')}</label>\n\t\t\t\t\t\t\t<div class=\"question-type-buttons\">\n\t\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.learnQuestionType === 'abbr-to-meaning' ? 'active' : ''}\" data-type=\"abbr-to-meaning\">${t('flashcard.learn.questionTypes.abbrToMeaning')}</button>\n\t\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.learnQuestionType === 'meaning-to-abbr' ? 'active' : ''}\" data-type=\"meaning-to-abbr\">${t('flashcard.learn.questionTypes.meaningToAbbr')}</button>\n\t\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.learnQuestionType === 'morse-to-abbr' ? 'active' : ''}\" data-type=\"morse-to-abbr\">${t('flashcard.learn.questionTypes.morseToAbbr')}</button>\n\t\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.learnQuestionType === 'morse-to-meaning' ? 'active' : ''}\" data-type=\"morse-to-meaning\">${t('flashcard.learn.questionTypes.morseToMeaning')}</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"filter-stats\">\n\t\t\t\t\t\t\t<span>${t('flashcard.learn.availableCards')} <strong>${cardCount}</strong> ${t('flashcard.learn.cardsUnit')}</span>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"action-area\">\n\t\t\t\t\t\t\t<button class=\"btn btn-large btn-primary\" id=\"start-learn-btn\" ${cardCount === 0 ? 'disabled' : ''}>${t('flashcard.learn.startButton')}</button>\n\t\t\t\t\t\t\t<button class=\"btn btn-large btn-secondary\" id=\"clear-progress-btn\">${t('flashcard.learn.clearProgressButton')}</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t\t<h3>${t('flashcard.learn.howToUse')}</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>${t('flashcard.learn.instruction1')}</li>\n\t\t\t\t\t\t\t<li>${t('flashcard.learn.instruction2')}</li>\n\t\t\t\t\t\t\t<li>${t('flashcard.learn.instruction3')}</li>\n\t\t\t\t\t\t\t<li>${t('flashcard.learn.instruction4')}</li>\n\t\t\t\t\t\t\t<li>${t('flashcard.learn.instruction5')}</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachCommonListeners();\n\t\tthis.attachLearnSetupListeners();\n\t}\n\n\t/**\n\t * 学習セットアップのイベントリスナー\n\t */\n\tprivate attachLearnSetupListeners(): void {\n\t\t//! タグフィルター。\n\t\tconst tagFilter = document.getElementById('tag-filter');\n\t\ttagFilter?.addEventListener('change', (e) => {\n\t\t\tconst target = e.target as HTMLInputElement;\n\t\t\tif (target.type === 'checkbox') {\n\t\t\t\tif (target.checked) {\n\t\t\t\t\tthis.selectedTags.add(target.value);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedTags.delete(target.value);\n\t\t\t\t}\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\tthis.renderLearnSetup();\n\t\t\t}\n\t\t});\n\n\t\t//! 使用頻度フィルター。\n\t\tconst frequencyFilter = document.getElementById('frequency-filter');\n\t\tfrequencyFilter?.addEventListener('change', (e) => {\n\t\t\tconst target = e.target as HTMLInputElement;\n\t\t\tif (target.type === 'checkbox') {\n\t\t\t\tconst freq = parseInt(target.value, 10);\n\t\t\t\tif (target.checked) {\n\t\t\t\t\tthis.selectedFrequencies.add(freq);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedFrequencies.delete(freq);\n\t\t\t\t}\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\tthis.renderLearnSetup();\n\t\t\t}\n\t\t});\n\n\t\t//! 検索。\n\t\tconst searchInput = document.getElementById('learn-search-input') as HTMLInputElement;\n\t\tsearchInput?.addEventListener('input', () => {\n\t\t\tthis.searchQuery = searchInput.value;\n\t\t\tthis.updateFilteredEntries();\n\t\t\tthis.renderLearnSetup();\n\t\t});\n\n\t\t//! 復習モードボタン。\n\t\tconst reviewModeBtn = document.getElementById('review-mode-btn');\n\t\treviewModeBtn?.addEventListener('click', () => {\n\t\t\tthis.reviewMode = !this.reviewMode;\n\t\t\tthis.renderLearnSetup();\n\t\t});\n\n\t\t//! 出題形式ボタン。\n\t\tconst questionTypeBtns = document.querySelectorAll('.question-type-btn');\n\t\tquestionTypeBtns.forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst type = btn.getAttribute('data-type') as LearnQuestionType;\n\t\t\t\tif (type) {\n\t\t\t\t\tthis.learnQuestionType = type;\n\t\t\t\t\tFlashcardState.saveLearnQuestionType(this.learnQuestionType);\n\t\t\t\t\tthis.renderLearnSetup();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! 学習開始ボタン。\n\t\tconst startLearnBtn = document.getElementById('start-learn-btn');\n\t\tstartLearnBtn?.addEventListener('click', () => {\n\t\t\tthis.startLearn();\n\t\t});\n\n\t\t//! 進捗リセットボタン。\n\t\tconst clearProgressBtn = document.getElementById('clear-progress-btn');\n\t\tclearProgressBtn?.addEventListener('click', () => {\n\t\t\tif (confirm(t('flashcard.learn.confirmReset'))) {\n\t\t\t\tthis.clearProgress();\n\t\t\t\tthis.renderLearnSetup();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * 学習を開始\n\t */\n\tprivate startLearn(): void {\n\t\t//! フィルタリング済みのエントリーから学習カードを作成。\n\t\tlet cards = [...this.filteredEntries];\n\n\t\tif (this.reviewMode) {\n\t\t\t//! 復習モード: わからないカードのみ。\n\t\t\tcards = cards.filter(e => this.progress.unknown.has(e.abbreviation));\n\t\t}\n\n\t\tif (cards.length === 0) {\n\t\t\talert(t('flashcard.learn.noCards'));\n\t\t\treturn;\n\t\t}\n\n\t\t//! シャッフル。\n\t\tcards = cards.sort(() => Math.random() - 0.5);\n\n\t\tthis.learnCards = cards;\n\t\tthis.currentLearnIndex = 0;\n\t\tthis.isFlipped = false;\n\t\tthis.renderLearnCard();\n\t}\n\n\t/**\n\t * 学習カードを表示\n\t */\n\tprivate renderLearnCard(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tconst card = this.learnCards[this.currentLearnIndex];\n\t\tconst currentNum = this.currentLearnIndex + 1;\n\t\tconst totalNum = this.learnCards.length;\n\n\t\t//! 問題と正解のコンテンツを生成。\n\t\tlet frontContent = '';\n\t\tlet backContent = '';\n\n\t\tswitch (this.learnQuestionType) {\n\t\t\tcase 'abbr-to-meaning':\n\t\t\t\tfrontContent = `\n\t\t\t\t\t<div class=\"card-label\">${t('flashcard.learn.cardLabels.abbreviation')}</div>\n\t\t\t\t\t<div class=\"card-content-abbr\">${this.formatAbbreviation(card.abbreviation)}</div>\n\t\t\t\t`;\n\t\t\t\tbackContent = `\n\t\t\t\t\t<div class=\"card-label\">${t('flashcard.learn.cardLabels.meaning')}</div>\n\t\t\t\t\t<div class=\"card-content-text\">${card.english}</div>\n\t\t\t\t\t<div class=\"card-content-text\">${card.japanese}</div>\n\t\t\t\t`;\n\t\t\t\tbreak;\n\t\t\tcase 'meaning-to-abbr':\n\t\t\t\tfrontContent = `\n\t\t\t\t\t<div class=\"card-label\">${t('flashcard.learn.cardLabels.meaning')}</div>\n\t\t\t\t\t<div class=\"card-content-text\">${card.english}</div>\n\t\t\t\t\t<div class=\"card-content-text\">${card.japanese}</div>\n\t\t\t\t`;\n\t\t\t\tbackContent = `\n\t\t\t\t\t<div class=\"card-label\">${t('flashcard.learn.cardLabels.abbreviation')}</div>\n\t\t\t\t\t<div class=\"card-content-abbr\">${this.formatAbbreviation(card.abbreviation)}</div>\n\t\t\t\t`;\n\t\t\t\tbreak;\n\t\t\tcase 'morse-to-abbr':\n\t\t\t\tfrontContent = `\n\t\t\t\t\t<div class=\"card-label\">${t('flashcard.learn.cardLabels.morseToAbbrPrompt')}</div>\n\t\t\t\t\t<button class=\"play-morse-btn\" id=\"play-morse-btn\">${t('flashcard.learn.playMorseButton')}</button>\n\t\t\t\t`;\n\t\t\t\tbackContent = `\n\t\t\t\t\t<div class=\"card-label\">${t('flashcard.learn.cardLabels.abbreviation')}</div>\n\t\t\t\t\t<div class=\"card-content-abbr\">${this.formatAbbreviation(card.abbreviation)}</div>\n\t\t\t\t`;\n\t\t\t\tbreak;\n\t\t\tcase 'morse-to-meaning':\n\t\t\t\tfrontContent = `\n\t\t\t\t\t<div class=\"card-label\">${t('flashcard.learn.cardLabels.morseToMeaningPrompt')}</div>\n\t\t\t\t\t<button class=\"play-morse-btn\" id=\"play-morse-btn\">${t('flashcard.learn.playMorseButton')}</button>\n\t\t\t\t`;\n\t\t\t\tbackContent = `\n\t\t\t\t\t<div class=\"card-label\">${t('flashcard.learn.cardLabels.meaning')}</div>\n\t\t\t\t\t<div class=\"card-content-abbr\">${this.formatAbbreviation(card.abbreviation)}</div>\n\t\t\t\t\t<div class=\"card-content-text\">${card.english}</div>\n\t\t\t\t\t<div class=\"card-content-text\">${card.japanese}</div>\n\t\t\t\t`;\n\t\t\t\tbreak;\n\t\t}\n\n\t\t//! 判定ボタンのHTML。\n\t\tconst isKnown = this.progress.known.has(card.abbreviation);\n\t\tconst isUnknown = this.progress.unknown.has(card.abbreviation);\n\t\tconst judgmentButtons = `\n\t\t\t<div class=\"judgment-controls\">\n\t\t\t\t<button id=\"mark-unknown-btn\" class=\"judgment-button unknown ${isUnknown ? 'active' : ''}\">\n\t\t\t\t\t${t('flashcard.learn.judgmentButtons.unknown')}\n\t\t\t\t</button>\n\t\t\t\t<button id=\"mark-known-btn\" class=\"judgment-button known ${isKnown ? 'active' : ''}\">\n\t\t\t\t\t${t('flashcard.learn.judgmentButtons.known')}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t`;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"container learning-view\">\n\t\t\t\t<div class=\"learning-header\">\n\t\t\t\t\t<button id=\"back-to-setup-btn\" class=\"back-btn\">${t('flashcard.learn.backToSetup')}</button>\n\t\t\t\t\t<div class=\"progress-indicator\">${currentNum}${t('flashcard.learn.progressIndicator')}${totalNum}</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"card-container\">\n\t\t\t\t\t<div class=\"flashcard ${this.isFlipped ? 'flipped' : ''}\" id=\"flashcard\">\n\t\t\t\t\t\t<div class=\"card-front\">\n\t\t\t\t\t\t\t${frontContent}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"card-back\">\n\t\t\t\t\t\t\t${backContent}\n\t\t\t\t\t\t\t${card.description ? `<div class=\"card-description\">${card.description}</div>` : ''}\n\t\t\t\t\t\t\t${card.example ? `<div class=\"card-example\">${t('flashcard.browse.examplePrefix')}${card.example}</div>` : ''}\n\t\t\t\t\t\t\t<div class=\"card-tags\">${card.tags} / ${'★'.repeat(card.frequency)}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"card-controls\">\n\t\t\t\t\t<button id=\"flip-card-btn\" class=\"control-button\">\n\t\t\t\t\t\t${this.isFlipped ? t('flashcard.learn.flipToQuestion') : t('flashcard.learn.flipToAnswer')} ${t('flashcard.learn.spaceHint')}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t${this.isFlipped ? judgmentButtons : ''}\n\n\t\t\t\t<div class=\"navigation-controls\">\n\t\t\t\t\t<button id=\"prev-card-btn\" class=\"nav-button\" ${this.currentLearnIndex === 0 ? 'disabled' : ''}>\n\t\t\t\t\t\t${t('flashcard.learn.navigation.prev')}\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"next-card-btn\" class=\"nav-button\" ${this.currentLearnIndex >= this.learnCards.length - 1 ? 'disabled' : ''}>\n\t\t\t\t\t\t${t('flashcard.learn.navigation.next')}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachLearnCardListeners();\n\t}\n\n\t/**\n\t * 学習カードのイベントリスナー\n\t */\n\tprivate attachLearnCardListeners(): void {\n\t\t//! 設定に戻るボタン。\n\t\tconst backToSetupBtn = document.getElementById('back-to-setup-btn');\n\t\tbackToSetupBtn?.addEventListener('click', () => {\n\t\t\tthis.learnCards = [];\n\t\t\tthis.currentLearnIndex = 0;\n\t\t\tthis.isFlipped = false;\n\t\t\tthis.renderLearnSetup();\n\t\t});\n\n\t\t//! フリップボタン。\n\t\tconst flipCardBtn = document.getElementById('flip-card-btn');\n\t\tflipCardBtn?.addEventListener('click', () => {\n\t\t\tthis.isFlipped = !this.isFlipped;\n\t\t\tthis.renderLearnCard();\n\t\t});\n\n\t\t//! スペースキーでフリップ。\n\t\tconst spaceHandler = (e: KeyboardEvent) => {\n\t\t\tif (e.code === 'Space' && e.target === document.body) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.isFlipped = !this.isFlipped;\n\t\t\t\tthis.renderLearnCard();\n\t\t\t}\n\t\t};\n\t\tdocument.addEventListener('keydown', spaceHandler);\n\n\t\t//! モールス再生ボタン。\n\t\tconst playMorseBtn = document.getElementById('play-morse-btn');\n\t\tif (playMorseBtn) {\n\t\t\tplayMorseBtn.addEventListener('click', () => {\n\t\t\t\tconst card = this.learnCards[this.currentLearnIndex];\n\t\t\t\tthis.playMorse(card.abbreviation);\n\t\t\t});\n\t\t}\n\n\t\t//! 判定ボタン（わからない）。\n\t\tconst markUnknownBtn = document.getElementById('mark-unknown-btn');\n\t\tmarkUnknownBtn?.addEventListener('click', () => {\n\t\t\tconst card = this.learnCards[this.currentLearnIndex];\n\t\t\tthis.progress.unknown.add(card.abbreviation);\n\t\t\tthis.progress.known.delete(card.abbreviation);\n\t\t\tthis.saveProgress();\n\t\t\tthis.moveToNextCard();\n\t\t});\n\n\t\t//! 判定ボタン（わかる）。\n\t\tconst markKnownBtn = document.getElementById('mark-known-btn');\n\t\tmarkKnownBtn?.addEventListener('click', () => {\n\t\t\tconst card = this.learnCards[this.currentLearnIndex];\n\t\t\tthis.progress.known.add(card.abbreviation);\n\t\t\tthis.progress.unknown.delete(card.abbreviation);\n\t\t\tthis.saveProgress();\n\t\t\tthis.moveToNextCard();\n\t\t});\n\n\t\t//! 前のカードボタン。\n\t\tconst prevCardBtn = document.getElementById('prev-card-btn');\n\t\tprevCardBtn?.addEventListener('click', () => {\n\t\t\tif (this.currentLearnIndex > 0) {\n\t\t\t\tthis.currentLearnIndex--;\n\t\t\t\tthis.isFlipped = false;\n\t\t\t\tthis.renderLearnCard();\n\t\t\t}\n\t\t});\n\n\t\t//! 次のカードボタン。\n\t\tconst nextCardBtn = document.getElementById('next-card-btn');\n\t\tnextCardBtn?.addEventListener('click', () => {\n\t\t\tif (this.currentLearnIndex < this.learnCards.length - 1) {\n\t\t\t\tthis.currentLearnIndex++;\n\t\t\t\tthis.isFlipped = false;\n\t\t\t\tthis.renderLearnCard();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * 次のカードに移動する（判定ボタンクリック時の自動遷移用）\n\t */\n\tprivate moveToNextCard(): void {\n\t\tif (this.currentLearnIndex < this.learnCards.length - 1) {\n\t\t\t//! 次のカードがあれば移動。\n\t\t\tthis.currentLearnIndex++;\n\t\t\tthis.isFlipped = false;\n\t\t\tthis.renderLearnCard();\n\t\t} else {\n\t\t\t//! 最後のカードの場合は学習完了。\n\t\t\talert(t('flashcard.learn.completed'));\n\t\t\tthis.learnCards = [];\n\t\t\tthis.currentLearnIndex = 0;\n\t\t\tthis.isFlipped = false;\n\t\t\tthis.renderLearnSetup();\n\t\t}\n\t}\n\n\t/**\n\t * 試験モードをレンダリング\n\t */\n\tprivate renderExamMode(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tif (this.questions.length === 0) {\n\t\t\t// 試験設定画面\n\t\t\tthis.renderExamSetup();\n\t\t} else {\n\t\t\t// 試験実施画面\n\t\t\tthis.renderExamQuestion();\n\t\t}\n\t}\n\n\t/**\n\t * 試験設定画面\n\t */\n\tprivate renderExamSetup(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"settings-icon\" id=\"settingsIcon\">\n\t\t\t\t<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t<h1>CW略語・Q符号学習</h1>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"tabs\">\n\t\t\t\t\t<button class=\"tab-button\" data-tab=\"browse\">一覧</button>\n\t\t\t\t\t<button class=\"tab-button\" data-tab=\"learn\">学習モード</button>\n\t\t\t\t\t<button class=\"tab-button active\" data-tab=\"exam\">試験モード</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"flashcard-container\">\n\t\t\t\t\t${this.renderFilterSection()}\n\n\t\t\t\t\t<div class=\"exam-setup-section\">\n\t\t\t\t\t\t<h3>出題形式</h3>\n\t\t\t\t\t\t<div class=\"question-type-buttons\">\n\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.questionType === 'abbr-to-meaning' ? 'active' : ''}\" data-type=\"abbr-to-meaning\">略語→意味（基礎）</button>\n\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.questionType === 'meaning-to-abbr' ? 'active' : ''}\" data-type=\"meaning-to-abbr\">意味→略語（応用）</button>\n\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.questionType === 'morse-to-abbr' ? 'active' : ''}\" data-type=\"morse-to-abbr\">モールス音→略語（実践）</button>\n\t\t\t\t\t\t\t<button class=\"question-type-btn ${this.questionType === 'morse-to-meaning' ? 'active' : ''}\" data-type=\"morse-to-meaning\">モールス音→意味（実践）</button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<h3>問題数</h3>\n\t\t\t\t\t\t<div class=\"question-count-buttons\">\n\t\t\t\t\t\t\t<button class=\"question-count-btn ${this.questionCount === 5 ? 'active' : ''}\" data-count=\"5\">5問</button>\n\t\t\t\t\t\t\t<button class=\"question-count-btn ${this.questionCount === 10 ? 'active' : ''}\" data-count=\"10\">10問</button>\n\t\t\t\t\t\t\t<button class=\"question-count-btn ${this.questionCount === 20 ? 'active' : ''}\" data-count=\"20\">20問</button>\n\t\t\t\t\t\t\t<button class=\"question-count-btn ${this.questionCount === 50 ? 'active' : ''}\" data-count=\"50\">50問</button>\n\t\t\t\t\t\t\t<button class=\"question-count-btn ${this.questionCount === 'all' ? 'active' : ''}\" data-count=\"all\">全問</button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"action-area\">\n\t\t\t\t\t\t\t<button class=\"btn btn-large btn-primary\" id=\"start-exam-btn\">試験開始</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t\t<h3>使い方</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>フィルターで出題範囲を絞り込みます</li>\n\t\t\t\t\t\t\t<li>出題形式を選択します（略語→意味、意味→略語、モールス音から）</li>\n\t\t\t\t\t\t\t<li>問題数を選択します（5問〜全問）</li>\n\t\t\t\t\t\t\t<li>4つの選択肢から正解を選びます</li>\n\t\t\t\t\t\t\t<li>80%以上で合格です</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachExamSetupListeners();\n\t}\n\n\t/**\n\t * 試験問題画面\n\t */\n\tprivate renderExamQuestion(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tconst question = this.questions[this.currentQuestionIndex];\n\t\tconst progress = this.currentQuestionIndex + 1;\n\t\tconst total = this.questions.length;\n\n\t\tlet questionText = '';\n\t\tswitch (question.type) {\n\t\t\tcase 'abbr-to-meaning':\n\t\t\t\tquestionText = `次の略語の意味は？<br><strong class=\"question-text\">${question.entry.abbreviation}</strong>`;\n\t\t\t\tbreak;\n\t\t\tcase 'meaning-to-abbr':\n\t\t\t\tquestionText = `次の意味を表す略語は？<br><strong class=\"question-text\">${question.entry.english} / ${question.entry.japanese}</strong>`;\n\t\t\t\tbreak;\n\t\t\tcase 'morse-to-abbr':\n\t\t\t\tquestionText = `モールス音を聞いて、対応する略語は？<br><button id=\"replay-morse-btn\" class=\"btn btn-secondary\">🔊 もう一度再生</button>`;\n\t\t\t\tbreak;\n\t\t\tcase 'morse-to-meaning':\n\t\t\t\tquestionText = `モールス音を聞いて、対応する意味は？<br><button id=\"replay-morse-btn\" class=\"btn btn-secondary\">🔊 もう一度再生</button>`;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<h1>CW略語・Q符号学習 - 試験中</h1>\n\t\t\t\t\t<button class=\"back-btn\">中断</button>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"exam-container\">\n\t\t\t\t\t<div class=\"exam-progress\">\n\t\t\t\t\t\t<span>問題 <strong>${progress}</strong> / ${total}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"question-area\">\n\t\t\t\t\t\t<p class=\"question\">${questionText}</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"choices-area\">\n\t\t\t\t\t\t${question.choices.map((choice, index) => `\n\t\t\t\t\t\t\t<button class=\"choice-btn\" data-choice=\"${choice}\">\n\t\t\t\t\t\t\t\t${index + 1}. ${choice}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t`).join('')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachExamQuestionListeners();\n\n\t\t//! モールス音が必要な場合は自動再生。\n\t\tif (question.type === 'morse-to-abbr' || question.type === 'morse-to-meaning') {\n\t\t\tsetTimeout(() => this.playMorse(question.entry.abbreviation), 500);\n\t\t}\n\t}\n\n\t/**\n\t * 試験結果画面\n\t */\n\tprivate renderExamResultMode(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tconst score = FlashcardTrainer.calculateScore(this.results);\n\t\tconst isPassed = FlashcardTrainer.isPassed(score.percentage);\n\t\tconst wrongAnswers = FlashcardTrainer.getWrongAnswers(this.results);\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<h1>CW略語・Q符号学習 - 結果</h1>\n\t\t\t\t\t<button class=\"back-btn\">メニューに戻る</button>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"result-container\">\n\t\t\t\t\t<div class=\"score-area ${isPassed ? 'passed' : 'failed'}\">\n\t\t\t\t\t\t<h2>${isPassed ? '合格！' : '不合格'}</h2>\n\t\t\t\t\t\t<div class=\"score-display\">\n\t\t\t\t\t\t\t<span class=\"score-percentage\">${score.percentage}%</span>\n\t\t\t\t\t\t\t<span class=\"score-detail\">${score.correct} / ${score.total} 問正解</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t${wrongAnswers.length > 0 ? `\n\t\t\t\t\t\t<div class=\"wrong-answers-section\">\n\t\t\t\t\t\t\t<h3>間違えた問題（${wrongAnswers.length}件）</h3>\n\t\t\t\t\t\t\t<div class=\"wrong-answers-list\">\n\t\t\t\t\t\t\t\t${this.results.filter(r => !r.isCorrect).map(result => `\n\t\t\t\t\t\t\t\t\t<div class=\"wrong-answer-item\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"wrong-answer-question\">\n\t\t\t\t\t\t\t\t\t\t\t<strong>${result.question.entry.abbreviation}</strong>\n\t\t\t\t\t\t\t\t\t\t\t<span>${result.question.entry.english} / ${result.question.entry.japanese}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"wrong-answer-detail\">\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"wrong-label\">あなたの回答:</span>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"wrong-user-answer\">${result.userAnswer}</span>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"correct-label\">正解:</span>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"correct-answer\">${result.question.correctAnswer}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t${result.question.entry.description ? `\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"wrong-answer-description\">\n\t\t\t\t\t\t\t\t\t\t\t\t${result.question.entry.description}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t` : ''}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t`).join('')}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t` : `\n\t\t\t\t\t\t<div class=\"perfect-score\">\n\t\t\t\t\t\t\t<p>すべて正解しました！</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`}\n\n\t\t\t\t\t<div class=\"action-area\">\n\t\t\t\t\t\t<button class=\"btn btn-primary btn-large\" id=\"retry-btn\">もう一度</button>\n\t\t\t\t\t\t<button class=\"btn btn-secondary btn-large\" id=\"back-to-setup-btn\">設定に戻る</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachResultListeners();\n\t}\n\n\t/**\n\t * browseモードのイベントリスナーを設定\n\t */\n\tprivate attachBrowseModeListeners(): void {\n\t\tthis.attachCommonListeners();\n\n\t\t//! タグフィルター。\n\t\tconst tagFilter = document.getElementById('tag-filter');\n\t\ttagFilter?.addEventListener('change', (e) => {\n\t\t\tconst target = e.target as HTMLInputElement;\n\t\t\tif (target.type === 'checkbox') {\n\t\t\t\tif (target.checked) {\n\t\t\t\t\tthis.selectedTags.add(target.value);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedTags.delete(target.value);\n\t\t\t\t}\n\t\t\t\tthis.saveFilters();\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\tthis.updateFilteredCount();\n\t\t\t\tthis.renderEntries();\n\t\t\t}\n\t\t});\n\n\t\t//! 使用頻度フィルター。\n\t\tconst frequencyFilter = document.getElementById('frequency-filter');\n\t\tfrequencyFilter?.addEventListener('change', (e) => {\n\t\t\tconst target = e.target as HTMLInputElement;\n\t\t\tif (target.type === 'checkbox') {\n\t\t\t\tconst freq = parseInt(target.value, 10);\n\t\t\t\tif (target.checked) {\n\t\t\t\t\tthis.selectedFrequencies.add(freq);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedFrequencies.delete(freq);\n\t\t\t\t}\n\t\t\t\tthis.saveFilters();\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\tthis.updateFilteredCount();\n\t\t\t\tthis.renderEntries();\n\t\t\t}\n\t\t});\n\n\t\t//! 検索。\n\t\tconst searchInput = document.getElementById('search-input') as HTMLInputElement;\n\t\tsearchInput?.addEventListener('input', () => {\n\t\t\tthis.searchQuery = searchInput.value;\n\t\t\tthis.saveFilters();\n\t\t\tthis.updateFilteredEntries();\n\t\t\tthis.updateFilteredCount();\n\t\t\tthis.renderEntries();\n\t\t});\n\t}\n\n\t/**\n\t * 試験設定のイベントリスナーを設定\n\t */\n\tprivate attachExamSetupListeners(): void {\n\t\tthis.attachCommonListeners();\n\n\t\t//! タグフィルター。\n\t\tconst tagFilter = document.getElementById('tag-filter');\n\t\ttagFilter?.addEventListener('change', (e) => {\n\t\t\tconst target = e.target as HTMLInputElement;\n\t\t\tif (target.type === 'checkbox') {\n\t\t\t\tif (target.checked) {\n\t\t\t\t\tthis.selectedTags.add(target.value);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedTags.delete(target.value);\n\t\t\t\t}\n\t\t\t\tthis.saveFilters();\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\tthis.updateFilteredCount();\n\t\t\t}\n\t\t});\n\n\t\t//! 使用頻度フィルター。\n\t\tconst frequencyFilter = document.getElementById('frequency-filter');\n\t\tfrequencyFilter?.addEventListener('change', (e) => {\n\t\t\tconst target = e.target as HTMLInputElement;\n\t\t\tif (target.type === 'checkbox') {\n\t\t\t\tconst freq = parseInt(target.value, 10);\n\t\t\t\tif (target.checked) {\n\t\t\t\t\tthis.selectedFrequencies.add(freq);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedFrequencies.delete(freq);\n\t\t\t\t}\n\t\t\t\tthis.saveFilters();\n\t\t\t\tthis.updateFilteredEntries();\n\t\t\t\tthis.updateFilteredCount();\n\t\t\t}\n\t\t});\n\n\t\t//! 検索。\n\t\tconst searchInput = document.getElementById('search-input') as HTMLInputElement;\n\t\tsearchInput?.addEventListener('input', () => {\n\t\t\tthis.searchQuery = searchInput.value;\n\t\t\tthis.saveFilters();\n\t\t\tthis.updateFilteredEntries();\n\t\t\tthis.updateFilteredCount();\n\t\t});\n\n\t\t//! 出題形式ボタン。\n\t\tconst questionTypeBtns = document.querySelectorAll('.question-type-btn');\n\t\tquestionTypeBtns.forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst type = btn.getAttribute('data-type') as QuestionType;\n\t\t\t\tif (type) {\n\t\t\t\t\tthis.questionType = type;\n\t\t\t\t\tFlashcardState.saveExamQuestionType(this.questionType as LearnQuestionType);\n\t\t\t\t\tthis.renderExamSetup();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! 問題数ボタン。\n\t\tconst questionCountBtns = document.querySelectorAll('.question-count-btn');\n\t\tquestionCountBtns.forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst count = btn.getAttribute('data-count');\n\t\t\t\tif (count) {\n\t\t\t\t\tthis.questionCount = count === 'all' ? 'all' : parseInt(count, 10);\n\t\t\t\t\tthis.renderExamSetup();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! 試験開始ボタン。\n\t\tconst startExamBtn = document.getElementById('start-exam-btn');\n\t\tstartExamBtn?.addEventListener('click', () => {\n\t\t\tthis.startExam();\n\t\t});\n\t}\n\n\t/**\n\t * 試験問題のイベントリスナーを設定\n\t */\n\tprivate attachExamQuestionListeners(): void {\n\t\t//! 中断ボタン。\n\t\tconst backBtn = document.querySelector('.back-btn');\n\t\tbackBtn?.addEventListener('click', () => {\n\t\t\tif (confirm('試験を中断してメニューに戻りますか？')) {\n\t\t\t\twindow.location.hash = '#menu';\n\t\t\t}\n\t\t});\n\n\t\t//! モールス再生ボタン。\n\t\tconst replayBtn = document.getElementById('replay-morse-btn');\n\t\tif (replayBtn) {\n\t\t\tconst question = this.questions[this.currentQuestionIndex];\n\t\t\treplayBtn.addEventListener('click', () => {\n\t\t\t\tthis.playMorse(question.entry.abbreviation);\n\t\t\t});\n\t\t}\n\n\t\t//! 選択肢ボタン。\n\t\tconst choiceBtns = document.querySelectorAll('.choice-btn');\n\t\tchoiceBtns.forEach(btn => {\n\t\t\tbtn.addEventListener('click', (e) => {\n\t\t\t\tconst target = e.currentTarget as HTMLButtonElement;\n\t\t\t\tconst userAnswer = target.dataset.choice || '';\n\t\t\t\tthis.handleAnswer(userAnswer);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * 結果画面のイベントリスナーを設定\n\t */\n\tprivate attachResultListeners(): void {\n\t\t//! 戻るボタン。\n\t\tconst backBtn = document.querySelector('.back-btn');\n\t\tbackBtn?.addEventListener('click', () => {\n\t\t\twindow.location.hash = '#menu';\n\t\t});\n\n\t\t//! もう一度ボタン。\n\t\tconst retryBtn = document.getElementById('retry-btn');\n\t\tretryBtn?.addEventListener('click', () => {\n\t\t\tthis.questions = [];\n\t\t\tthis.results = [];\n\t\t\tthis.currentQuestionIndex = 0;\n\t\t\tthis.currentState = 'exam';\n\t\t\tthis.render();\n\t\t});\n\n\t\t//! 設定に戻るボタン。\n\t\tconst backToSetupBtn = document.getElementById('back-to-setup-btn');\n\t\tbackToSetupBtn?.addEventListener('click', () => {\n\t\t\tthis.questions = [];\n\t\t\tthis.results = [];\n\t\t\tthis.currentQuestionIndex = 0;\n\t\t\tthis.currentState = 'exam';\n\t\t\tthis.render();\n\t\t});\n\t}\n\n\t/**\n\t * 共通のイベントリスナーを設定（タブ切り替えなど）\n\t */\n\tprivate attachCommonListeners(): void {\n\t\t//! 戻るボタン。\n\t\tconst backBtn = document.querySelector('.back-btn');\n\t\tbackBtn?.addEventListener('click', () => {\n\t\t\twindow.location.hash = '#menu';\n\t\t});\n\n\t\t//! 設定アイコン。\n\t\tdocument.getElementById('settingsIcon')?.addEventListener('click', () => {\n\t\t\tthis.openSettingsModal();\n\t\t});\n\n\t\t//! 言語切り替え。\n\t\tconst languageSwitcherContainer = document.getElementById('languageSwitcherContainer');\n\t\tif (languageSwitcherContainer) {\n\t\t\tthis.languageSwitcher.attachEventListeners(languageSwitcherContainer);\n\t\t}\n\n\t\t//! タブ切り替え。\n\t\tconst tabButtons = document.querySelectorAll('.tab-button');\n\t\ttabButtons.forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst tab = btn.getAttribute('data-tab');\n\t\t\t\tif (tab === 'browse') {\n\t\t\t\t\tthis.currentState = 'browse';\n\t\t\t\t\tFlashcardState.saveViewMode('browse');\n\t\t\t\t\tthis.render();\n\t\t\t\t} else if (tab === 'learn') {\n\t\t\t\t\tthis.currentState = 'learn';\n\t\t\t\t\tFlashcardState.saveViewMode('learn');\n\t\t\t\t\tthis.render();\n\t\t\t\t} else if (tab === 'exam') {\n\t\t\t\t\tthis.questions = [];\n\t\t\t\t\tthis.results = [];\n\t\t\t\t\tthis.currentQuestionIndex = 0;\n\t\t\t\t\tthis.currentState = 'exam';\n\t\t\t\t\tFlashcardState.saveViewMode('exam');\n\t\t\t\t\tthis.render();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * フィルター適用後のエントリー数を更新\n\t */\n\tprivate updateFilteredCount(): void {\n\t\tconst filteredCountElem = document.getElementById('filtered-count');\n\t\tif (filteredCountElem) {\n\t\t\tfilteredCountElem.textContent = this.filteredEntries.length.toString();\n\t\t}\n\n\t\t//! 問題数の最大値も更新（試験モードの場合）。\n\t\tconst questionCountInput = document.getElementById('question-count') as HTMLInputElement;\n\t\tif (questionCountInput) {\n\t\t\tquestionCountInput.max = this.filteredEntries.length.toString();\n\t\t\tif (parseInt(questionCountInput.value, 10) > this.filteredEntries.length) {\n\t\t\t\tquestionCountInput.value = this.filteredEntries.length.toString();\n\t\t\t\tthis.questionCount = this.filteredEntries.length;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * フィルタリングされたエントリーを更新\n\t */\n\tprivate updateFilteredEntries(): void {\n\t\tlet entries = this.allEntries;\n\n\t\t//! タグでフィルタリング。\n\t\tentries = FlashcardTrainer.filterByTags(entries, this.selectedTags);\n\n\t\t//! 使用頻度でフィルタリング。\n\t\tentries = FlashcardTrainer.filterByFrequencies(entries, this.selectedFrequencies);\n\n\t\t//! 検索クエリでフィルタリング。\n\t\tentries = FlashcardTrainer.filterByQuery(entries, this.searchQuery);\n\n\t\t//! ソート適用。\n\t\tthis.filteredEntries = this.sortEntries(entries);\n\t}\n\n\t/**\n\t * エントリーをソート\n\t */\n\tprivate sortEntries(entries: FlashcardEntry[]): FlashcardEntry[] {\n\t\tconst ascending = this.sortDirection === 'asc';\n\n\t\tswitch (this.sortColumn) {\n\t\t\tcase 'abbreviation':\n\t\t\t\treturn FlashcardTrainer.sortByAbbreviation(entries, ascending);\n\t\t\tcase 'english':\n\t\t\t\treturn FlashcardTrainer.sortByEnglish(entries, ascending);\n\t\t\tcase 'japanese':\n\t\t\t\treturn FlashcardTrainer.sortByJapanese(entries, ascending);\n\t\t\tcase 'frequency':\n\t\t\t\treturn FlashcardTrainer.sortByFrequency(entries, ascending);\n\t\t\tcase 'tags':\n\t\t\t\treturn FlashcardTrainer.sortByTags(entries, ascending);\n\t\t\tdefault:\n\t\t\t\treturn entries;\n\t\t}\n\t}\n\n\t/**\n\t * ソートを切り替え\n\t */\n\tprivate toggleSort(column: SortColumn): void {\n\t\tif (this.sortColumn === column) {\n\t\t\t//! 同じ列なら方向を反転。\n\t\t\tthis.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n\t\t} else {\n\t\t\t//! 異なる列なら昇順で開始。\n\t\t\tthis.sortColumn = column;\n\t\t\tthis.sortDirection = 'asc';\n\t\t}\n\t\t//! ソート状態を保存。\n\t\tFlashcardState.saveSortState(this.sortColumn, this.sortDirection);\n\t\tthis.updateFilteredEntries();\n\t\tthis.renderEntries();\n\t}\n\n\t/**\n\t * ソートインジケーターを取得\n\t */\n\tprivate getSortIndicator(column: SortColumn): string {\n\t\tif (this.sortColumn !== column) return '';\n\t\treturn this.sortDirection === 'asc' ? ' ▲' : ' ▼';\n\t}\n\n\t/**\n\t * 略語をフォーマット（プロサインをオーバーラインで表示）\n\t */\n\tprivate formatAbbreviation(abbr: string): string {\n\t\tconst prosignMatch = abbr.match(/^\\[([A-Z]+)\\]$/);\n\t\tif (prosignMatch) {\n\t\t\treturn `<span class=\"prosign\">${prosignMatch[1]}</span>`;\n\t\t}\n\t\treturn abbr;\n\t}\n\n\t/**\n\t * モールス符号を再生\n\t */\n\tprivate async playMorse(text: string): Promise<void> {\n\t\ttry {\n\t\t\t//! 既に再生中の場合は停止。\n\t\t\tif (this.currentlyPlaying === text) {\n\t\t\t\tthis.audio.stopContinuousTone();\n\t\t\t\tthis.currentlyPlaying = null;\n\t\t\t\tthis.renderEntries();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//! 別のものが再生中なら停止。\n\t\t\tif (this.currentlyPlaying) {\n\t\t\t\tthis.audio.stopContinuousTone();\n\t\t\t}\n\n\t\t\tthis.currentlyPlaying = text;\n\t\t\tthis.renderEntries();\n\n\t\t\t//! モールス符号に変換。\n\t\t\tconst morseSequence = MorseCodec.textToMorse(text);\n\t\t\tif (morseSequence) {\n\t\t\t\t//! シンプルな再生実装（scheduleToneを使用）。\n\t\t\t\tfor (const char of morseSequence) {\n\t\t\t\t\tif (char === '.') {\n\t\t\t\t\t\tthis.audio.scheduleTone(0, 60);  // 短点\n\t\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 120));\n\t\t\t\t\t} else if (char === '-') {\n\t\t\t\t\t\tthis.audio.scheduleTone(0, 180);  // 長点\n\t\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 240));\n\t\t\t\t\t} else if (char === ' ') {\n\t\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 60));  // 要素間スペース\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.currentlyPlaying = null;\n\t\t\tthis.renderEntries();\n\t\t} catch (error) {\n\t\t\tconsole.error('モールス再生エラー:', error);\n\t\t\tthis.currentlyPlaying = null;\n\t\t\tthis.renderEntries();\n\t\t}\n\t}\n\n\t/**\n\t * 試験を開始\n\t */\n\tprivate startExam(): void {\n\t\tif (this.filteredEntries.length === 0) {\n\t\t\talert('該当するエントリーがありません。フィルターを調整してください。');\n\t\t\treturn;\n\t\t}\n\n\t\tconst count = this.questionCount === 'all' ? this.filteredEntries.length : this.questionCount;\n\t\tconst actualCount = Math.min(count, this.filteredEntries.length);\n\t\tif (actualCount === 0) {\n\t\t\talert('問題数を1以上に設定してください。');\n\t\t\treturn;\n\t\t}\n\n\t\t//! 問題を生成。\n\t\tthis.questions = FlashcardTrainer.generateExamQuestions(\n\t\t\tthis.filteredEntries,\n\t\t\tthis.questionType,\n\t\t\tactualCount\n\t\t);\n\n\t\tthis.currentQuestionIndex = 0;\n\t\tthis.results = [];\n\t\tthis.render();\n\t}\n\n\t/**\n\t * 回答を処理\n\t */\n\tprivate handleAnswer(userAnswer: string): void {\n\t\tconst question = this.questions[this.currentQuestionIndex];\n\t\tconst isCorrect = FlashcardTrainer.checkAnswer(question, userAnswer);\n\n\t\t//! 結果を記録。\n\t\tthis.results.push({\n\t\t\tquestion,\n\t\t\tuserAnswer,\n\t\t\tisCorrect\n\t\t});\n\n\t\t//! 次の問題に進むか結果表示。\n\t\tthis.currentQuestionIndex++;\n\t\tif (this.currentQuestionIndex < this.questions.length) {\n\t\t\tthis.render();\n\t\t} else {\n\t\t\tthis.currentState = 'exam-result';\n\t\t\tthis.render();\n\t\t}\n\t}\n\n\t/**\n\t * 設定モーダルを開く\n\t */\n\tprivate openSettingsModal(): void {\n\t\t//! 現在の設定値を取得（0-100の範囲に変換）。\n\t\tconst currentValues: SettingValues = {\n\t\t\tvolume: Math.round(this.audio.getVolume() * 100),\n\t\t\tfrequency: this.audio.getFrequency(),\n\t\t\twpm: this.audio.getWPM()\n\t\t};\n\n\t\t//! 設定変更前の値を保存（キャンセル時の復元用）。\n\t\tconst savedSettings = {\n\t\t\tvolume: this.audio.getVolume(),\n\t\t\tfrequency: this.audio.getFrequency(),\n\t\t\twpm: this.audio.getWPM()\n\t\t};\n\n\t\t//! SettingsModalを作成。\n\t\tconst modal = new SettingsModal(\n\t\t\t'flashcard-settings-modal',\n\t\t\tALL_SETTING_ITEMS,\n\t\t\tcurrentValues,\n\t\t\t{\n\t\t\t\tonSave: (values: SettingValues) => {\n\t\t\t\t\t//! 設定を保存。\n\t\t\t\t\tthis.audio.setVolume((values.volume as number) / 100);\n\t\t\t\t\tthis.audio.setFrequency(values.frequency as number);\n\t\t\t\t\tthis.audio.setWPM(values.wpm as number);\n\t\t\t\t},\n\t\t\t\tonCancel: () => {\n\t\t\t\t\t//! 設定を元に戻す。\n\t\t\t\t\tthis.audio.setVolume(savedSettings.volume);\n\t\t\t\t\tthis.audio.setFrequency(savedSettings.frequency);\n\t\t\t\t\tthis.audio.setWPM(savedSettings.wpm);\n\t\t\t\t},\n\t\t\t\tonTestPlay: async () => {\n\t\t\t\t\t//! テスト再生。\n\t\t\t\t\tawait this.playMorse('CQ');\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t//! モーダルを表示。\n\t\tmodal.show('flashcard');\n\t}\n\n\t/**\n\t * ビューを破棄\n\t */\n\tdestroy(): void {\n\t\t//! 音声を停止。\n\t\tif (this.currentlyPlaying) {\n\t\t\tthis.audio.stopContinuousTone();\n\t\t}\n\t}\n}\n","/**\n * コッホ法トレーニングビュー\n */\n\nimport type { View } from '../../router';\nimport {\n\tKochTrainer,\n\tKOCH_SEQUENCE,\n\tAudioGenerator,\n\tMorseCodec,\n\ttype PracticeSettings\n} from 'morse-engine';\nimport { SettingsModal, ALL_SETTING_ITEMS, type SettingValues } from 'morse-engine';\n\ntype ViewMode = 'learning' | 'custom';\n\ninterface LessonState {\n\tcurrentLesson: number;\n\tisPlaying: boolean;\n\tuserInput: string;\n\tcorrectAnswer: string;\n\tgroups: string[];\n\tcurrentGroupIndex: number;\n}\n\ninterface CustomState {\n\tselectedChars: Set<string>;\n\tisCustomRunning: boolean;\n\tcustomUserInput: string;\n\tcustomCorrectAnswer: string;\n\tcustomGroups: string[];\n\tcustomCurrentGroupIndex: number;\n\tcustomIsPlaying: boolean;\n}\n\ninterface KochSettings {\n\tcharacterSpeed: number;\n\teffectiveSpeed: number;\n\tfrequency: number;\n\tvolume: number;\n\tpracticeDuration: number;\n\tgroupSize: number;\n\tshowInput: boolean;\n}\n\nconst DEFAULT_SETTINGS: KochSettings = {\n\tcharacterSpeed: 20,\n\teffectiveSpeed: 15,\n\tfrequency: 700,\n\tvolume: 0.7,\n\tpracticeDuration: 60,\n\tgroupSize: 5,\n\tshowInput: true\n};\n\n/**\n * コッホ法トレーニングビュークラス\n */\nexport class KochView implements View {\n\tprivate audio: AudioGenerator;\n\tprivate viewMode: ViewMode = 'learning';\n\tprivate settings: KochSettings = { ...DEFAULT_SETTINGS };\n\n\tprivate state: LessonState = {\n\t\tcurrentLesson: 1,\n\t\tisPlaying: false,\n\t\tuserInput: '',\n\t\tcorrectAnswer: '',\n\t\tgroups: [],\n\t\tcurrentGroupIndex: 0,\n\t};\n\n\tprivate customState: CustomState = {\n\t\tselectedChars: new Set(),\n\t\tisCustomRunning: false,\n\t\tcustomUserInput: '',\n\t\tcustomCorrectAnswer: '',\n\t\tcustomGroups: [],\n\t\tcustomCurrentGroupIndex: 0,\n\t\tcustomIsPlaying: false,\n\t};\n\n\tconstructor() {\n\t\t//! 設定を読み込む。\n\t\tthis.loadSettings();\n\t\tthis.loadProgress();\n\t\tthis.loadViewMode();\n\t\tthis.loadSelectedChars();\n\n\t\t//! AudioGeneratorを初期化。\n\t\tthis.audio = new AudioGenerator({\n\t\t\tfrequency: this.settings.frequency,\n\t\t\tvolume: this.settings.volume,\n\t\t\twpm: this.settings.characterSpeed,\n\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t});\n\t}\n\n\t//! ========== 設定管理 ==========\n\n\tprivate loadSettings(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.koch.settings');\n\t\t\tif (saved) {\n\t\t\t\tthis.settings = { ...DEFAULT_SETTINGS, ...JSON.parse(saved) };\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load settings:', error);\n\t\t}\n\t}\n\n\tprivate saveSettings(): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem('v10.koch.settings', JSON.stringify(this.settings));\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save settings:', error);\n\t\t}\n\t}\n\n\tprivate loadProgress(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.koch.currentLesson');\n\t\t\tif (saved) {\n\t\t\t\tthis.state.currentLesson = parseInt(saved, 10);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load progress:', error);\n\t\t}\n\t}\n\n\tprivate saveProgress(): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem('v10.koch.currentLesson', this.state.currentLesson.toString());\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save progress:', error);\n\t\t}\n\t}\n\n\tprivate loadViewMode(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.koch.viewMode') as ViewMode | null;\n\t\t\tif (saved && ['learning', 'custom'].includes(saved)) {\n\t\t\t\tthis.viewMode = saved;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load view mode:', error);\n\t\t}\n\t}\n\n\tprivate saveViewMode(): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem('v10.koch.viewMode', this.viewMode);\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save view mode:', error);\n\t\t}\n\t}\n\n\tprivate loadSelectedChars(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.koch.selectedChars');\n\t\t\tif (saved) {\n\t\t\t\tconst chars = JSON.parse(saved) as string[];\n\t\t\t\tthis.customState.selectedChars = new Set(chars);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load selected chars:', error);\n\t\t}\n\t}\n\n\tprivate saveSelectedChars(): void {\n\t\ttry {\n\t\t\tconst chars = Array.from(this.customState.selectedChars);\n\t\t\tlocalStorage.setItem('v10.koch.selectedChars', JSON.stringify(chars));\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save selected chars:', error);\n\t\t}\n\t}\n\n\t//! ========== レッスン管理 ==========\n\n\tprivate async startLesson(): Promise<void> {\n\t\tconst chars = KochTrainer.getCharsForLesson(this.state.currentLesson);\n\t\tconst practiceSettings: PracticeSettings = {\n\t\t\tgroupSize: this.settings.groupSize,\n\t\t\tduration: this.settings.practiceDuration,\n\t\t\twpm: this.settings.characterSpeed\n\t\t};\n\t\tthis.state.groups = KochTrainer.generateRandomGroups(chars, practiceSettings);\n\t\tthis.state.currentGroupIndex = 0;\n\t\tthis.state.userInput = '';\n\t\tthis.state.correctAnswer = this.state.groups.join('');\n\t\tthis.state.isPlaying = false;\n\n\t\t//! AudioGeneratorの設定を更新。\n\t\tthis.audio.updateSettings({\n\t\t\tfrequency: this.settings.frequency,\n\t\t\tvolume: this.settings.volume,\n\t\t\twpm: this.settings.characterSpeed,\n\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t});\n\n\t\tthis.renderPractice();\n\t}\n\n\tprivate async playMorse(): Promise<void> {\n\t\tif (this.state.isPlaying) return;\n\n\t\tthis.state.isPlaying = true;\n\t\tthis.state.currentGroupIndex = 0;\n\t\tthis.updateProgress();\n\t\tthis.updatePlaybackButtons();\n\n\t\t//! モールス信号を再生。\n\t\tfor (let i = 0; i < this.state.groups.length && this.state.isPlaying; i++) {\n\t\t\tconst group = this.state.groups[i];\n\t\t\tconst morse = MorseCodec.textToMorse(group);\n\t\t\tawait this.audio.playMorseString(morse + ' /');\n\n\t\t\tthis.state.currentGroupIndex = i + 1;\n\t\t\tthis.updateProgress();\n\t\t}\n\n\t\tthis.state.isPlaying = false;\n\t\tthis.updatePlaybackButtons();\n\t\tif (this.state.currentGroupIndex >= this.state.groups.length) {\n\t\t\tthis.showResult();\n\t\t}\n\t}\n\n\tprivate pauseMorse(): void {\n\t\tthis.state.isPlaying = false;\n\t\tthis.audio.stopPlaying();\n\t\tthis.updatePlaybackButtons();\n\t}\n\n\tprivate stopLesson(): void {\n\t\tthis.state.isPlaying = false;\n\t\tthis.audio.stopPlaying();\n\t\tthis.render();\n\t}\n\n\tprivate showResult(): void {\n\t\tconst accuracy = KochTrainer.calculateAccuracy(this.state.correctAnswer, this.state.userInput);\n\t\tconst passed = accuracy >= 90;\n\n\t\tconst resultContainer = document.getElementById('resultContainer');\n\t\tif (!resultContainer) return;\n\n\t\tresultContainer.innerHTML = `\n\t\t\t<div class=\"result ${passed ? 'passed' : 'failed'}\">\n\t\t\t\t<h2>${passed ? '合格！' : '不合格'}</h2>\n\t\t\t\t<div class=\"accuracy\">正答率: ${accuracy.toFixed(1)}%</div>\n\t\t\t\t<div class=\"comparison\">\n\t\t\t\t\t<div>送信: ${this.state.correctAnswer}</div>\n\t\t\t\t\t<div>入力: ${this.state.userInput || '（未入力）'}</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"actions\">\n\t\t\t\t\t${passed ? `<button class=\"btn primary\" id=\"nextLessonBtn\">次のレッスンへ</button>` : ''}\n\t\t\t\t\t<button class=\"btn\" id=\"retryBtn\">もう一度</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tif (passed && this.state.currentLesson < 40) {\n\t\t\tthis.state.currentLesson++;\n\t\t\tthis.saveProgress();\n\n\t\t\tdocument.getElementById('nextLessonBtn')?.addEventListener('click', () => {\n\t\t\t\tthis.render();\n\t\t\t});\n\t\t}\n\n\t\tdocument.getElementById('retryBtn')?.addEventListener('click', () => {\n\t\t\tthis.render();\n\t\t});\n\t}\n\n\tprivate updateProgress(): void {\n\t\tconst progressEl = document.getElementById('lessonProgress');\n\t\tconst progressBar = document.getElementById('progressBar');\n\n\t\tif (progressEl && progressBar) {\n\t\t\tconst percent = (this.state.currentGroupIndex / this.state.groups.length) * 100;\n\t\t\tprogressEl.textContent = `進行: ${this.state.currentGroupIndex}/${this.state.groups.length} (${percent.toFixed(0)}%)`;\n\t\t\tprogressBar.style.width = `${percent}%`;\n\t\t}\n\n\t\tthis.updatePlaybackButtons();\n\t}\n\n\tprivate updatePlaybackButtons(): void {\n\t\tconst playBtn = document.getElementById('playBtn') as HTMLButtonElement;\n\t\tconst pauseBtn = document.getElementById('pauseBtn') as HTMLButtonElement;\n\n\t\tif (playBtn && pauseBtn) {\n\t\t\tif (this.state.isPlaying) {\n\t\t\t\tplayBtn.disabled = true;\n\t\t\t\tpauseBtn.disabled = false;\n\t\t\t} else {\n\t\t\t\tplayBtn.disabled = false;\n\t\t\t\tpauseBtn.disabled = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t//! ========== カスタムモード管理 ==========\n\n\tprivate async startCustom(): Promise<void> {\n\t\tconst chars = Array.from(this.customState.selectedChars);\n\t\tconst practiceSettings: PracticeSettings = {\n\t\t\tgroupSize: this.settings.groupSize,\n\t\t\tduration: this.settings.practiceDuration,\n\t\t\twpm: this.settings.characterSpeed\n\t\t};\n\t\tthis.customState.customGroups = KochTrainer.generateRandomGroups(chars, practiceSettings);\n\t\tthis.customState.customCurrentGroupIndex = 0;\n\t\tthis.customState.customUserInput = '';\n\t\tthis.customState.customCorrectAnswer = this.customState.customGroups.join('');\n\t\tthis.customState.customIsPlaying = false;\n\t\tthis.customState.isCustomRunning = true;\n\n\t\t//! AudioGeneratorの設定を更新。\n\t\tthis.audio.updateSettings({\n\t\t\tfrequency: this.settings.frequency,\n\t\t\tvolume: this.settings.volume,\n\t\t\twpm: this.settings.characterSpeed,\n\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t});\n\n\t\tthis.render();\n\t\tthis.renderCustomPractice();\n\t}\n\n\tprivate async playCustomMorse(): Promise<void> {\n\t\tif (this.customState.customIsPlaying) return;\n\n\t\tthis.customState.customIsPlaying = true;\n\t\tthis.customState.customCurrentGroupIndex = 0;\n\t\tthis.updateCustomProgress();\n\t\tthis.updateCustomPlaybackButtons();\n\n\t\t//! モールス信号を再生。\n\t\tfor (let i = 0; i < this.customState.customGroups.length && this.customState.customIsPlaying; i++) {\n\t\t\tconst group = this.customState.customGroups[i];\n\t\t\tconst morse = MorseCodec.textToMorse(group);\n\t\t\tawait this.audio.playMorseString(morse + ' /');\n\n\t\t\tthis.customState.customCurrentGroupIndex = i + 1;\n\t\t\tthis.updateCustomProgress();\n\t\t}\n\n\t\tthis.customState.customIsPlaying = false;\n\t\tthis.updateCustomPlaybackButtons();\n\t}\n\n\tprivate pauseCustomMorse(): void {\n\t\tthis.customState.customIsPlaying = false;\n\t\tthis.audio.stopPlaying();\n\t\tthis.updateCustomPlaybackButtons();\n\t}\n\n\tprivate stopCustom(): void {\n\t\tthis.customState.customIsPlaying = false;\n\t\tthis.audio.stopPlaying();\n\t\tthis.customState.isCustomRunning = false;\n\t\tthis.render();\n\t}\n\n\tprivate updateCustomProgress(): void {\n\t\tconst progressEl = document.getElementById('customProgress');\n\t\tconst progressBar = document.getElementById('customProgressBar');\n\n\t\tif (progressEl && progressBar) {\n\t\t\tconst percent = (this.customState.customCurrentGroupIndex / this.customState.customGroups.length) * 100;\n\t\t\tprogressEl.textContent = `進行: ${this.customState.customCurrentGroupIndex}/${this.customState.customGroups.length} (${percent.toFixed(0)}%)`;\n\t\t\tprogressBar.style.width = `${percent}%`;\n\t\t}\n\n\t\tthis.updateCustomPlaybackButtons();\n\t}\n\n\tprivate updateCustomPlaybackButtons(): void {\n\t\tconst playBtn = document.getElementById('customPlayBtn') as HTMLButtonElement;\n\t\tconst pauseBtn = document.getElementById('customPauseBtn') as HTMLButtonElement;\n\n\t\tif (playBtn && pauseBtn) {\n\t\t\tif (this.customState.customIsPlaying) {\n\t\t\t\tplayBtn.disabled = true;\n\t\t\t\tpauseBtn.disabled = false;\n\t\t\t} else {\n\t\t\t\tplayBtn.disabled = false;\n\t\t\t\tpauseBtn.disabled = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate showCustomResult(): void {\n\t\tconst resultContainer = document.getElementById('customResultContainer');\n\t\tif (!resultContainer) return;\n\n\t\t//! lib側の関数を使用して正答率を計算。\n\t\tconst accuracy = KochTrainer.calculateAccuracy(\n\t\t\tthis.customState.customCorrectAnswer,\n\t\t\tthis.customState.customUserInput\n\t\t);\n\n\t\tconst userAnswer = this.customState.customUserInput.replace(/\\s+/g, '');\n\t\tconst correctAnswer = this.customState.customCorrectAnswer.replace(/\\s+/g, '');\n\n\t\tresultContainer.innerHTML = `\n\t\t\t<div class=\"result\">\n\t\t\t\t<h2>練習結果</h2>\n\t\t\t\t<div class=\"accuracy\">正答率: ${accuracy}%</div>\n\t\t\t\t<div class=\"comparison\">\n\t\t\t\t\t<div>送信: ${correctAnswer}</div>\n\t\t\t\t\t<div>あなたの入力: ${userAnswer}</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"actions\">\n\t\t\t\t\t<button id=\"retryCustomBtn\" class=\"btn\">もう一度</button>\n\t\t\t\t\t<button id=\"backToCustomMenuBtn\" class=\"btn primary\">戻る</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tdocument.getElementById('retryCustomBtn')?.addEventListener('click', () => {\n\t\t\tthis.customState.isCustomRunning = false;\n\t\t\tthis.render();\n\t\t\tthis.startCustom();\n\t\t});\n\n\t\tdocument.getElementById('backToCustomMenuBtn')?.addEventListener('click', () => {\n\t\t\tthis.customState.isCustomRunning = false;\n\t\t\tthis.render();\n\t\t});\n\t}\n\n\t//! ========== 設定モーダル ==========\n\n\tprivate showSettings(): void {\n\t\t//! 現在の設定値を取得（volumeを0-100の範囲に変換）。\n\t\tconst currentValues: SettingValues = {\n\t\t\tvolume: Math.round(this.settings.volume * 100),\n\t\t\tfrequency: this.settings.frequency,\n\t\t\twpm: this.settings.characterSpeed,\n\t\t\tcharacterSpeed: this.settings.characterSpeed,\n\t\t\teffectiveSpeed: this.settings.effectiveSpeed,\n\t\t\tpracticeDuration: this.settings.practiceDuration,\n\t\t\tgroupSize: this.settings.groupSize,\n\t\t\tshowInput: this.settings.showInput\n\t\t};\n\n\t\t//! 設定変更前の値を保存（キャンセル時の復元用）。\n\t\tconst savedSettings = { ...this.settings };\n\n\t\t//! SettingsModalを作成。\n\t\tconst modal = new SettingsModal(\n\t\t\t'koch-settings-modal',\n\t\t\tALL_SETTING_ITEMS,\n\t\t\tcurrentValues,\n\t\t\t{\n\t\t\t\tonSave: (values: SettingValues) => {\n\t\t\t\t\t//! 実効速度は文字速度を上限とする。\n\t\t\t\t\tlet effSpeed = values.effectiveSpeed as number;\n\t\t\t\t\tconst charSpeed = values.characterSpeed as number;\n\t\t\t\t\tif (effSpeed > charSpeed) {\n\t\t\t\t\t\teffSpeed = charSpeed;\n\t\t\t\t\t}\n\n\t\t\t\t\t//! 設定を保存。\n\t\t\t\t\tthis.settings.characterSpeed = charSpeed;\n\t\t\t\t\tthis.settings.effectiveSpeed = effSpeed;\n\t\t\t\t\tthis.settings.frequency = values.frequency as number;\n\t\t\t\t\tthis.settings.volume = (values.volume as number) / 100;\n\t\t\t\t\tthis.settings.practiceDuration = values.practiceDuration as number;\n\t\t\t\t\tthis.settings.groupSize = values.groupSize as number;\n\t\t\t\t\tthis.settings.showInput = values.showInput as boolean;\n\n\t\t\t\t\tthis.saveSettings();\n\n\t\t\t\t\t//! AudioGeneratorを更新。\n\t\t\t\t\tthis.audio.updateSettings({\n\t\t\t\t\t\tfrequency: this.settings.frequency,\n\t\t\t\t\t\tvolume: this.settings.volume,\n\t\t\t\t\t\twpm: this.settings.characterSpeed,\n\t\t\t\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t\t\t\t});\n\n\t\t\t\t\t//! 練習中の場合、表示を更新。\n\t\t\t\t\tif (this.state.groups.length > 0) {\n\t\t\t\t\t\tthis.renderPractice();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonCancel: () => {\n\t\t\t\t\t//! 設定を元に戻す。\n\t\t\t\t\tthis.settings = { ...savedSettings };\n\t\t\t\t\tthis.audio.updateSettings({\n\t\t\t\t\t\tfrequency: savedSettings.frequency,\n\t\t\t\t\t\tvolume: savedSettings.volume,\n\t\t\t\t\t\twpm: savedSettings.characterSpeed,\n\t\t\t\t\t\teffectiveWpm: savedSettings.effectiveSpeed\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t//! モーダルを表示。\n\t\tmodal.show('koch');\n\t}\n\n\t//! ========== レンダリング ==========\n\n\trender(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"settings-icon\" id=\"settingsIcon\">\n\t\t\t\t<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<button class=\"back-btn\" id=\"back-btn\">メニューに戻る</button>\n\t\t\t\t\t<h1>コッホ法トレーニング</h1>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"tabs\">\n\t\t\t\t\t<button class=\"tab-button ${this.viewMode === 'learning' ? 'active' : ''}\" data-tab=\"learning\">基本学習</button>\n\t\t\t\t\t<button class=\"tab-button ${this.viewMode === 'custom' ? 'active' : ''}\" data-tab=\"custom\">任意文字列練習</button>\n\t\t\t\t</div>\n\n\t\t\t\t${this.renderModeContent()}\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachEventListeners();\n\t}\n\n\tprivate renderModeContent(): string {\n\t\tswitch (this.viewMode) {\n\t\t\tcase 'learning':\n\t\t\t\treturn this.renderLearningMode();\n\t\t\tcase 'custom':\n\t\t\t\treturn this.renderCustomMode();\n\t\t\tdefault:\n\t\t\t\treturn this.renderLearningMode();\n\t\t}\n\t}\n\n\tprivate renderLearningMode(): string {\n\t\tconst chars = KochTrainer.getCharsForLesson(this.state.currentLesson);\n\t\tconst lessonList = KOCH_SEQUENCE.slice(0, 40).map((_, index) => {\n\t\t\tconst lessonNum = index + 1;\n\t\t\tconst lessonChars = KochTrainer.getCharsForLesson(lessonNum);\n\t\t\tconst isCurrent = lessonNum === this.state.currentLesson;\n\t\t\tconst isPassed = lessonNum < this.state.currentLesson;\n\t\t\treturn `\n\t\t\t\t<div class=\"lesson-item ${isCurrent ? 'current' : ''} ${isPassed ? 'passed' : ''}\" data-lesson=\"${lessonNum}\">\n\t\t\t\t\t<div class=\"lesson-num\">L${lessonNum}</div>\n\t\t\t\t\t<div class=\"lesson-chars\">${lessonChars.join('')}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}).join('');\n\n\t\treturn `\n\t\t\t<div class=\"flashcard-container\">\n\t\t\t\t<div class=\"lesson-info\">\n\t\t\t\t\t<h2>レッスン ${this.state.currentLesson} / 40</h2>\n\t\t\t\t\t<div class=\"chars\">学習文字: ${chars.join('')}</div>\n\t\t\t\t\t<button id=\"startBtn\" class=\"btn btn-primary\">練習開始</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"practiceContainer\"></div>\n\t\t\t\t<div id=\"resultContainer\"></div>\n\n\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t<h3>使い方</h3>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>「練習開始」をクリックしてモールス信号を聞く</li>\n\t\t\t\t\t\t<li>聞こえた文字を入力</li>\n\t\t\t\t\t\t<li>90%以上の正答率で次のレッスンへ</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"lesson-list-section\">\n\t\t\t\t\t<h3>レッスン一覧</h3>\n\t\t\t\t\t<div class=\"lesson-list\">\n\t\t\t\t\t\t${lessonList}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tprivate renderCustomMode(): string {\n\t\tif (!this.customState.isCustomRunning) {\n\t\t\t//! 文字選択画面。\n\t\t\tconst charButtons = KOCH_SEQUENCE.map(char => `\n\t\t\t\t<button class=\"char-select-btn ${this.customState.selectedChars.has(char) ? 'selected' : ''}\" data-char=\"${char}\">\n\t\t\t\t\t${char}\n\t\t\t\t</button>\n\t\t\t`).join('');\n\n\t\t\treturn `\n\t\t\t\t<div class=\"flashcard-container\">\n\t\t\t\t\t<div class=\"lesson-info\">\n\t\t\t\t\t\t<h2>任意文字列練習モード</h2>\n\t\t\t\t\t\t<p>練習したい文字を選択してください（最低2文字）</p>\n\t\t\t\t\t\t<div class=\"char-selection\">\n\t\t\t\t\t\t\t${charButtons}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button id=\"startCustomBtn\" class=\"btn btn-primary\" ${this.customState.selectedChars.size < 2 ? 'disabled' : ''}>練習開始</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"instructions\">\n\t\t\t\t\t\t<h3>使い方</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>練習したい文字をクリックして選択</li>\n\t\t\t\t\t\t\t<li>2文字以上選択すると練習開始可能</li>\n\t\t\t\t\t\t\t<li>選択した文字のみでランダムな練習問題が生成されます</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t} else {\n\t\t\t//! 練習実行画面。\n\t\t\treturn `\n\t\t\t\t<div class=\"flashcard-container\">\n\t\t\t\t\t<div id=\"customPracticeContainer\"></div>\n\t\t\t\t\t<div id=\"customResultContainer\"></div>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\t}\n\n\tprivate renderPractice(): void {\n\t\tconst practiceContainer = document.getElementById('practiceContainer');\n\t\tif (!practiceContainer) return;\n\n\t\tconst chars = KochTrainer.getCharsForLesson(this.state.currentLesson);\n\n\t\tpracticeContainer.innerHTML = `\n\t\t\t<div class=\"practice-area\">\n\t\t\t\t<div class=\"progress-section\">\n\t\t\t\t\t<div class=\"progress-bar-container\">\n\t\t\t\t\t\t<div id=\"progressBar\" class=\"progress-bar\" style=\"width: 0%\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"lessonProgress\" class=\"progress-text\">準備完了 - 再生ボタンを押してください</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"playback-controls\">\n\t\t\t\t\t<button id=\"playBtn\" class=\"control-btn\" title=\"再生\">\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M8 5v14l11-7z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"pauseBtn\" class=\"control-btn\" title=\"一時停止\" disabled>\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M6 4h4v16H6V4zm8 0h4v16h-4V4z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"stopBtn\" class=\"control-btn\" title=\"停止\">\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<rect x=\"6\" y=\"6\" width=\"12\" height=\"12\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<textarea id=\"userInput\" class=\"input-area\" placeholder=\"聞こえた文字を入力...\" ${this.settings.showInput ? '' : 'style=\"opacity: 0.3; pointer-events: none;\"'}></textarea>\n\t\t\t\t${this.renderKeyboard(chars)}\n\t\t\t</div>\n\t\t`;\n\n\t\tconst inputEl = document.getElementById('userInput') as HTMLTextAreaElement;\n\t\tif (inputEl) {\n\t\t\tinputEl.addEventListener('input', (e) => {\n\t\t\t\tthis.state.userInput = (e.target as HTMLTextAreaElement).value.toUpperCase();\n\t\t\t});\n\t\t}\n\n\t\tdocument.getElementById('playBtn')?.addEventListener('click', () => {\n\t\t\tthis.playMorse();\n\t\t});\n\n\t\tdocument.getElementById('pauseBtn')?.addEventListener('click', () => {\n\t\t\tthis.pauseMorse();\n\t\t});\n\n\t\tdocument.getElementById('stopBtn')?.addEventListener('click', () => {\n\t\t\tthis.stopLesson();\n\t\t});\n\n\t\t//! キーボードボタンのイベント設定。\n\t\tthis.setupKeyboardEvents(chars);\n\t\tthis.updatePlaybackButtons();\n\t}\n\n\tprivate renderCustomPractice(): void {\n\t\tconst container = document.getElementById('customPracticeContainer');\n\t\tif (!container) return;\n\n\t\tcontainer.innerHTML = `\n\t\t\t<div class=\"practice-area\">\n\t\t\t\t<div class=\"progress-section\">\n\t\t\t\t\t<div class=\"progress-bar-container\">\n\t\t\t\t\t\t<div id=\"customProgressBar\" class=\"progress-bar\" style=\"width: 0%\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"customProgress\" class=\"progress-text\">準備完了 - 再生ボタンを押してください</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"playback-controls\">\n\t\t\t\t\t<button id=\"customPlayBtn\" class=\"control-btn\" title=\"再生\">\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M8 5v14l11-7z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"customPauseBtn\" class=\"control-btn\" title=\"一時停止\" disabled>\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M6 4h4v16H6V4zm8 0h4v16h-4V4z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"customStopBtn\" class=\"control-btn\" title=\"停止\">\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<rect x=\"6\" y=\"6\" width=\"12\" height=\"12\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t${this.settings.showInput ? `\n\t\t\t\t\t<textarea id=\"customInputArea\" class=\"input-area\" placeholder=\"聞こえた文字を入力してください...\"></textarea>\n\t\t\t\t` : ''}\n\n\t\t\t\t<button id=\"customEndBtn\" class=\"btn btn-primary\">結果を見る</button>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.setupCustomControls();\n\t}\n\n\tprivate renderKeyboard(availableChars: string[]): string {\n\t\tconst groups: string[][] = [];\n\n\t\t//! KOCH_SEQUENCEをgroupSizeごとに分割。\n\t\tfor (let i = 0; i < KOCH_SEQUENCE.length; i += this.settings.groupSize) {\n\t\t\tgroups.push(KOCH_SEQUENCE.slice(i, i + this.settings.groupSize));\n\t\t}\n\n\t\treturn `\n\t\t\t<div class=\"keyboard\">\n\t\t\t\t<div class=\"keyboard-header\">\n\t\t\t\t\t<small>グループベースキーボード（学習済み文字のみ有効）</small>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"keyboard-controls\">\n\t\t\t\t\t<button id=\"spaceBtn\" class=\"key-btn special\">スペース</button>\n\t\t\t\t\t<button id=\"backspaceBtn\" class=\"key-btn special\">1字削除</button>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"keyboard-groups-wrapper\">\n\t\t\t\t\t<div class=\"keyboard-groups\">\n\t\t\t\t\t\t${groups.map((group, groupIndex) => `\n\t\t\t\t\t\t\t<div class=\"keyboard-group\">\n\t\t\t\t\t\t\t\t<div class=\"group-label\">G${groupIndex + 1}</div>\n\t\t\t\t\t\t\t\t<div class=\"group-keys\">\n\t\t\t\t\t\t\t\t\t${group.map(char => {\n\t\t\t\t\t\t\t\t\t\tconst isLearned = availableChars.includes(char);\n\t\t\t\t\t\t\t\t\t\treturn `\n\t\t\t\t\t\t\t\t\t\t\t<button class=\"key-btn ${isLearned ? '' : 'disabled'}\"\n\t\t\t\t\t\t\t\t\t\t\t        data-char=\"${char}\"\n\t\t\t\t\t\t\t\t\t\t\t        ${isLearned ? '' : 'disabled'}>\n\t\t\t\t\t\t\t\t\t\t\t\t${char}\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t`;\n\t\t\t\t\t\t\t\t\t}).join('')}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t`).join('')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tprivate setupKeyboardEvents(availableChars: string[]): void {\n\t\tconst inputEl = document.getElementById('userInput') as HTMLTextAreaElement;\n\t\tif (!inputEl) return;\n\n\t\t//! 文字キー。\n\t\tdocument.querySelectorAll('.key-btn:not(.special)').forEach(btn => {\n\t\t\tbtn.addEventListener('click', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tconst char = (e.target as HTMLButtonElement).getAttribute('data-char');\n\t\t\t\tif (char && availableChars.includes(char)) {\n\t\t\t\t\tinputEl.value += char;\n\t\t\t\t\tthis.state.userInput = inputEl.value.toUpperCase();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! スペースキー。\n\t\tdocument.getElementById('spaceBtn')?.addEventListener('click', (e) => {\n\t\t\te.preventDefault();\n\t\t\tinputEl.value += ' ';\n\t\t\tthis.state.userInput = inputEl.value.toUpperCase();\n\t\t});\n\n\t\t//! バックスペースキー。\n\t\tdocument.getElementById('backspaceBtn')?.addEventListener('click', (e) => {\n\t\t\te.preventDefault();\n\t\t\tinputEl.value = inputEl.value.slice(0, -1);\n\t\t\tthis.state.userInput = inputEl.value.toUpperCase();\n\t\t});\n\t}\n\n\tprivate setupCustomControls(): void {\n\t\t//! 入力欄のイベントリスナー。\n\t\tconst inputEl = document.getElementById('customInputArea') as HTMLTextAreaElement;\n\t\tif (inputEl) {\n\t\t\tinputEl.addEventListener('input', (e) => {\n\t\t\t\tthis.customState.customUserInput = (e.target as HTMLTextAreaElement).value.toUpperCase();\n\t\t\t});\n\t\t}\n\n\t\tdocument.getElementById('customPlayBtn')?.addEventListener('click', () => {\n\t\t\tthis.playCustomMorse();\n\t\t});\n\n\t\tdocument.getElementById('customPauseBtn')?.addEventListener('click', () => {\n\t\t\tthis.pauseCustomMorse();\n\t\t});\n\n\t\tdocument.getElementById('customStopBtn')?.addEventListener('click', () => {\n\t\t\tthis.stopCustom();\n\t\t});\n\n\t\tdocument.getElementById('customEndBtn')?.addEventListener('click', () => {\n\t\t\tthis.showCustomResult();\n\t\t});\n\n\t\tthis.updateCustomPlaybackButtons();\n\t}\n\n\tprivate attachEventListeners(): void {\n\t\t//! 戻るボタン。\n\t\tdocument.getElementById('back-btn')?.addEventListener('click', () => {\n\t\t\twindow.location.hash = '#menu';\n\t\t});\n\n\t\t//! 設定アイコン。\n\t\tdocument.getElementById('settingsIcon')?.addEventListener('click', () => {\n\t\t\tthis.showSettings();\n\t\t});\n\n\t\t//! タブボタン。\n\t\tdocument.querySelectorAll('.tab-button').forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst tab = btn.getAttribute('data-tab') as ViewMode;\n\t\t\t\tif (tab) {\n\t\t\t\t\tthis.viewMode = tab;\n\t\t\t\t\tthis.saveViewMode();\n\t\t\t\t\tthis.render();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! モード別のイベントリスナーを設定。\n\t\tthis.setupModeEventListeners();\n\t}\n\n\tprivate setupModeEventListeners(): void {\n\t\tif (this.viewMode === 'learning') {\n\t\t\tdocument.getElementById('startBtn')?.addEventListener('click', () => {\n\t\t\t\tthis.startLesson();\n\t\t\t});\n\n\t\t\t//! レッスンアイテムのクリックイベント。\n\t\t\tdocument.querySelectorAll('.lesson-item').forEach(item => {\n\t\t\t\titem.addEventListener('click', () => {\n\t\t\t\t\tconst lessonNum = parseInt(item.getAttribute('data-lesson') || '1', 10);\n\t\t\t\t\tthis.state.currentLesson = lessonNum;\n\t\t\t\t\tthis.saveProgress();\n\t\t\t\t\tthis.render();\n\t\t\t\t\twindow.scrollTo({ top: 0, behavior: 'smooth' });\n\t\t\t\t});\n\t\t\t});\n\t\t} else if (this.viewMode === 'custom') {\n\t\t\tif (!this.customState.isCustomRunning) {\n\t\t\t\tdocument.getElementById('startCustomBtn')?.addEventListener('click', () => {\n\t\t\t\t\tthis.startCustom();\n\t\t\t\t});\n\n\t\t\t\t//! 文字選択ボタン。\n\t\t\t\tdocument.querySelectorAll('.char-select-btn').forEach(btn => {\n\t\t\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\t\t\tconst char = btn.getAttribute('data-char');\n\t\t\t\t\t\tif (char) {\n\t\t\t\t\t\t\tif (this.customState.selectedChars.has(char)) {\n\t\t\t\t\t\t\t\tthis.customState.selectedChars.delete(char);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.customState.selectedChars.add(char);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.saveSelectedChars();\n\t\t\t\t\t\t\tthis.render();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy(): void {\n\t\t//! 音声を停止。\n\t\tthis.audio.stopPlaying();\n\t}\n}\n","/**\n * 聞き取り練習ビュー\n */\n\nimport type { View } from '../../router';\nimport {\n\tListeningTrainer,\n\tAudioGenerator,\n\tMorseCodec,\n\ttype ListeningTemplate,\n\ttype TemplateCategory\n} from 'morse-engine';\nimport { downloadBlob, sanitizeFilename } from '../../utils/download-helper';\nimport { SettingsModal, ALL_SETTING_ITEMS, type SettingValues } from 'morse-engine';\n\ninterface ListeningSettings {\n\tcharacterSpeed: number;\n\teffectiveSpeed: number;\n\tfrequency: number;\n\tbFrequency: number;  // B側（相手方）の周波数\n\tvolume: number;\n}\n\nconst DEFAULT_SETTINGS: ListeningSettings = {\n\tcharacterSpeed: 20,\n\teffectiveSpeed: 15,\n\tfrequency: 700,\n\tbFrequency: 600,  // B側のデフォルト周波数\n\tvolume: 0.7\n};\n\ninterface State {\n\tcurrentCategory: TemplateCategory | 'custom';\n\tselectedTemplate: ListeningTemplate | null;\n\tisPlaying: boolean;\n\tuserInput: string;\n\tshowResult: boolean;\n\tshowAnswer: boolean;\n\tshowDialogFormat: boolean;\n}\n\n/**\n * 聞き取り練習ビュークラス\n */\nexport class ListeningView implements View {\n\tprivate audio: AudioGenerator;  // A側（自局）のAudioGenerator\n\tprivate audioB: AudioGenerator;  // B側（相手方）のAudioGenerator\n\tprivate settings: ListeningSettings = { ...DEFAULT_SETTINGS };\n\n\tprivate state: State = {\n\t\tcurrentCategory: 'qso',\n\t\tselectedTemplate: null,\n\t\tisPlaying: false,\n\t\tuserInput: '',\n\t\tshowResult: false,\n\t\tshowAnswer: false,\n\t\tshowDialogFormat: false\n\t};\n\n\tprivate customTemplates: ListeningTemplate[] = [];\n\n\tconstructor() {\n\t\t//! 設定を読み込む。\n\t\tthis.loadSettings();\n\t\tthis.loadCategory();\n\t\tthis.loadCustomTemplates();\n\n\t\t//! A側のAudioGeneratorを初期化。\n\t\tthis.audio = new AudioGenerator({\n\t\t\tfrequency: this.settings.frequency,\n\t\t\tvolume: this.settings.volume,\n\t\t\twpm: this.settings.characterSpeed,\n\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t});\n\n\t\t//! B側のAudioGeneratorを初期化。\n\t\tthis.audioB = new AudioGenerator({\n\t\t\tfrequency: this.settings.bFrequency,\n\t\t\tvolume: this.settings.volume,\n\t\t\twpm: this.settings.characterSpeed,\n\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t});\n\t}\n\n\t//! ========== 設定管理 ==========\n\n\tprivate loadSettings(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.listening.settings');\n\t\t\tif (saved) {\n\t\t\t\tthis.settings = { ...DEFAULT_SETTINGS, ...JSON.parse(saved) };\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load settings:', error);\n\t\t}\n\t}\n\n\tprivate saveSettings(): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem('v10.listening.settings', JSON.stringify(this.settings));\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save settings:', error);\n\t\t}\n\t}\n\n\tprivate loadCategory(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.listening.category') as TemplateCategory | 'custom' | null;\n\t\t\tif (saved && ['qso', 'text100', 'text200', 'text300', 'custom'].includes(saved)) {\n\t\t\t\tthis.state.currentCategory = saved;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load category:', error);\n\t\t}\n\t}\n\n\tprivate saveCategory(): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem('v10.listening.category', this.state.currentCategory);\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save category:', error);\n\t\t}\n\t}\n\n\tprivate loadCustomTemplates(): void {\n\t\ttry {\n\t\t\tconst saved = localStorage.getItem('v10.listening.customTemplates');\n\t\t\tif (saved) {\n\t\t\t\tthis.customTemplates = JSON.parse(saved);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load custom templates:', error);\n\t\t}\n\t}\n\n\tprivate saveCustomTemplates(): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem('v10.listening.customTemplates', JSON.stringify(this.customTemplates));\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to save custom templates:', error);\n\t\t}\n\t}\n\n\t//! ========== テンプレート管理 ==========\n\n\tprivate getTemplates(): ListeningTemplate[] {\n\t\tif (this.state.currentCategory === 'custom') {\n\t\t\t//! ランダムQSO生成ボタンを追加。\n\t\t\tconst randomButton: ListeningTemplate = {\n\t\t\t\tid: 'qso-random-generate',\n\t\t\t\tcategory: 'qso',\n\t\t\t\ttitle: 'ランダムQSO生成',\n\t\t\t\tcontent: ''\n\t\t\t};\n\t\t\treturn [randomButton, ...this.customTemplates];\n\t\t} else {\n\t\t\tconst builtin = ListeningTrainer.getBuiltinTemplates(this.state.currentCategory);\n\t\t\t//! QSOカテゴリーにはランダムQSO生成ボタンを追加。\n\t\t\tif (this.state.currentCategory === 'qso') {\n\t\t\t\tconst randomButton: ListeningTemplate = {\n\t\t\t\t\tid: 'qso-random-generate',\n\t\t\t\t\tcategory: 'qso',\n\t\t\t\t\ttitle: 'ランダムQSO生成',\n\t\t\t\t\tcontent: ''\n\t\t\t\t};\n\t\t\t\treturn [randomButton, ...builtin];\n\t\t\t}\n\t\t\treturn builtin;\n\t\t}\n\t}\n\n\t//! ========== 再生制御 ==========\n\n\tprivate async playMorse(): Promise<void> {\n\t\tif (!this.state.selectedTemplate || this.state.isPlaying) return;\n\n\t\tthis.state.isPlaying = true;\n\t\tthis.updatePlaybackButtons();\n\n\t\t//! テンプレートに応じて再生（dialogがあればA/B交互、なければcontentを再生）。\n\t\tif (this.state.showDialogFormat && this.state.selectedTemplate.dialog) {\n\t\t\t//! 対話形式で再生（A側とB側を交互に再生）。\n\t\t\tawait this.playDialogQSO(this.state.selectedTemplate);\n\t\t} else if (this.state.selectedTemplate.content) {\n\t\t\t//! 通常モードで再生（全体をA側で再生）。\n\t\t\tconst morse = MorseCodec.textToMorse(this.state.selectedTemplate.content);\n\t\t\tawait this.audio.playMorseString(morse);\n\t\t}\n\n\t\tthis.state.isPlaying = false;\n\t\tthis.updatePlaybackButtons();\n\t}\n\n\t/**\n\t * テンプレートからテキストを取得する\n\t * @param template - テンプレート\n\t * @returns 表示用テキスト\n\t */\n\tprivate getTemplateText(template: ListeningTemplate): string {\n\t\tif (template.dialog && template.dialog.length > 0) {\n\t\t\treturn template.dialog.map(seg => seg.text).join(' BT ');\n\t\t}\n\t\treturn template.content || '';\n\t}\n\n\t/**\n\t * 対話形式のQSOを再生する\n\t * A側とB側を交互に異なる周波数で再生\n\t * @param template - 再生するテンプレート\n\t */\n\tprivate async playDialogQSO(template: ListeningTemplate): Promise<void> {\n\t\t//! dialogがない場合（テキストカテゴリ）はcontentを再生。\n\t\tif (!template.dialog || template.dialog.length === 0) {\n\t\t\tif (template.content) {\n\t\t\t\tconst morse = MorseCodec.textToMorse(template.content);\n\t\t\t\tawait this.audio.playMorseString(morse);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t//! 各セグメントを交互にA側とB側で再生。\n\t\tfor (let i = 0; i < template.dialog.length; i++) {\n\t\t\tconst segment = template.dialog[i];\n\t\t\tconst morse = MorseCodec.textToMorse(segment.text);\n\n\t\t\t//! A側またはB側のAudioGeneratorを選択。\n\t\t\tconst generator = segment.side === 'A' ? this.audio : this.audioB;\n\t\t\tawait generator.playMorseString(morse);\n\n\t\t\t//! セグメント間に短い間隔を入れる。\n\t\t\tif (i < template.dialog.length - 1) {\n\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 500));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate pauseMorse(): void {\n\t\tthis.audio.stopPlaying();\n\t\tthis.state.isPlaying = false;\n\t\tthis.updatePlaybackButtons();\n\t}\n\n\tprivate stopMorse(): void {\n\t\tthis.audio.stopPlaying();\n\t\tthis.state.isPlaying = false;\n\t\tthis.state.userInput = '';\n\t\tthis.state.showResult = false;\n\t\tthis.state.showAnswer = false;\n\t\tthis.renderPracticeArea();\n\t}\n\n\n\tprivate updatePlaybackButtons(): void {\n\t\tconst playBtn = document.getElementById('playBtn') as HTMLButtonElement;\n\t\tconst pauseBtn = document.getElementById('pauseBtn') as HTMLButtonElement;\n\n\t\tif (playBtn) playBtn.disabled = this.state.isPlaying;\n\t\tif (pauseBtn) pauseBtn.disabled = !this.state.isPlaying;\n\t}\n\n\t//! ========== 採点と結果表示 ==========\n\n\tprivate checkAnswer(): void {\n\t\tif (!this.state.selectedTemplate) return;\n\n\t\tthis.state.showResult = true;\n\t\tthis.state.showAnswer = true;\n\t\tthis.renderPracticeArea();\n\t}\n\n\tprivate toggleAnswer(): void {\n\t\tthis.state.showAnswer = !this.state.showAnswer;\n\t\tthis.renderPracticeArea();\n\t}\n\n\tprivate toggleDialogFormat(): void {\n\t\tthis.state.showDialogFormat = !this.state.showDialogFormat;\n\t\tthis.renderAnswer();\n\t}\n\n\t//! ========== カスタムテンプレート管理 ==========\n\n\tprivate showCustomTemplateDialog(template?: ListeningTemplate): void {\n\t\tconst isEdit = !!template;\n\t\tconst title = isEdit ? template.title : '';\n\t\tconst content = isEdit ? template.content : '';\n\n\t\tconst modal = document.createElement('div');\n\t\tmodal.className = 'modal-overlay';\n\t\tmodal.innerHTML = `\n\t\t\t<div class=\"modal\">\n\t\t\t\t<h2>${isEdit ? 'テンプレート編集' : 'テンプレート新規作成'}</h2>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label for=\"templateTitle\">タイトル:</label>\n\t\t\t\t\t<input type=\"text\" id=\"templateTitle\" value=\"${title}\" placeholder=\"タイトルを入力\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label for=\"templateContent\">内容:</label>\n\t\t\t\t\t<textarea id=\"templateContent\" placeholder=\"モールス信号に変換するテキストを入力\">${content}</textarea>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"modal-actions\">\n\t\t\t\t\t<button id=\"saveTemplateBtn\" class=\"btn btn-primary\">保存</button>\n\t\t\t\t\t<button id=\"cancelTemplateBtn\" class=\"btn\">キャンセル</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t\tdocument.body.appendChild(modal);\n\n\t\t//! 保存ボタン。\n\t\tdocument.getElementById('saveTemplateBtn')?.addEventListener('click', () => {\n\t\t\tconst titleInput = document.getElementById('templateTitle') as HTMLInputElement;\n\t\t\tconst contentInput = document.getElementById('templateContent') as HTMLTextAreaElement;\n\n\t\t\tif (!titleInput.value.trim() || !contentInput.value.trim()) {\n\t\t\t\talert('タイトルと内容を入力してください');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isEdit && template) {\n\t\t\t\t//! 既存テンプレートを更新。\n\t\t\t\ttemplate.title = titleInput.value.trim();\n\t\t\t\ttemplate.content = contentInput.value.trim().toUpperCase();\n\t\t\t} else {\n\t\t\t\t//! 新規テンプレートを追加。\n\t\t\t\tconst newTemplate: ListeningTemplate = {\n\t\t\t\t\tid: `custom-${Date.now()}`,\n\t\t\t\t\tcategory: 'qso',\n\t\t\t\t\ttitle: titleInput.value.trim(),\n\t\t\t\t\tcontent: contentInput.value.trim().toUpperCase()\n\t\t\t\t};\n\t\t\t\tthis.customTemplates.push(newTemplate);\n\t\t\t}\n\n\t\t\tthis.saveCustomTemplates();\n\t\t\tmodal.remove();\n\t\t\tthis.render();\n\t\t});\n\n\t\t//! キャンセルボタン。\n\t\tdocument.getElementById('cancelTemplateBtn')?.addEventListener('click', () => {\n\t\t\tmodal.remove();\n\t\t});\n\n\t\t//! モーダル外クリックで閉じる。\n\t\tmodal.addEventListener('click', (e) => {\n\t\t\tif (e.target === modal) {\n\t\t\t\tmodal.remove();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate deleteCustomTemplate(id: string): void {\n\t\tif (confirm('この定型文を削除しますか?')) {\n\t\t\tthis.customTemplates = this.customTemplates.filter(t => t.id !== id);\n\t\t\tthis.saveCustomTemplates();\n\t\t\tthis.render();\n\t\t}\n\t}\n\n\t//! ========== 設定モーダル ==========\n\n\tprivate showSettings(): void {\n\t\t//! 現在の設定値を取得（volumeを0-100の範囲に変換）。\n\t\tconst currentValues: SettingValues = {\n\t\t\tcharacterSpeed: this.settings.characterSpeed,\n\t\t\teffectiveSpeed: this.settings.effectiveSpeed,\n\t\t\tfrequency: this.settings.frequency,\n\t\t\tbFrequency: this.settings.bFrequency,\n\t\t\tvolume: Math.round(this.settings.volume * 100)\n\t\t};\n\n\t\t//! 設定変更前の値を保存（キャンセル時の復元用）。\n\t\tconst savedSettings = { ...this.settings };\n\n\t\t//! SettingsModalを作成。\n\t\tconst modal = new SettingsModal(\n\t\t\t'listening-settings-modal',\n\t\t\tALL_SETTING_ITEMS,\n\t\t\tcurrentValues,\n\t\t\t{\n\t\t\t\tonSave: (values: SettingValues) => {\n\t\t\t\t\t//! 実効速度は文字速度を上限とする。\n\t\t\t\t\tlet effSpeed = values.effectiveSpeed as number;\n\t\t\t\t\tconst charSpeed = values.characterSpeed as number;\n\t\t\t\t\tif (effSpeed > charSpeed) {\n\t\t\t\t\t\teffSpeed = charSpeed;\n\t\t\t\t\t}\n\n\t\t\t\t\t//! 設定を保存。\n\t\t\t\t\tthis.settings.characterSpeed = charSpeed;\n\t\t\t\t\tthis.settings.effectiveSpeed = effSpeed;\n\t\t\t\t\tthis.settings.frequency = values.frequency as number;\n\t\t\t\t\tthis.settings.bFrequency = values.bFrequency as number;\n\t\t\t\t\tthis.settings.volume = (values.volume as number) / 100;\n\n\t\t\t\t\tthis.saveSettings();\n\n\t\t\t\t\t//! A側のAudioGeneratorを更新。\n\t\t\t\t\tthis.audio.updateSettings({\n\t\t\t\t\t\tfrequency: this.settings.frequency,\n\t\t\t\t\t\tvolume: this.settings.volume,\n\t\t\t\t\t\twpm: this.settings.characterSpeed,\n\t\t\t\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t\t\t\t});\n\n\t\t\t\t\t//! B側のAudioGeneratorを更新。\n\t\t\t\t\tthis.audioB.updateSettings({\n\t\t\t\t\t\tfrequency: this.settings.bFrequency,\n\t\t\t\t\t\tvolume: this.settings.volume,\n\t\t\t\t\t\twpm: this.settings.characterSpeed,\n\t\t\t\t\t\teffectiveWpm: this.settings.effectiveSpeed\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tonCancel: () => {\n\t\t\t\t\t//! 設定を元に戻す。\n\t\t\t\t\tthis.settings = { ...savedSettings };\n\t\t\t\t\tthis.audio.updateSettings({\n\t\t\t\t\t\tfrequency: savedSettings.frequency,\n\t\t\t\t\t\tvolume: savedSettings.volume,\n\t\t\t\t\t\twpm: savedSettings.characterSpeed,\n\t\t\t\t\t\teffectiveWpm: savedSettings.effectiveSpeed\n\t\t\t\t\t});\n\t\t\t\t\tthis.audioB.updateSettings({\n\t\t\t\t\t\tfrequency: savedSettings.bFrequency,\n\t\t\t\t\t\tvolume: savedSettings.volume,\n\t\t\t\t\t\twpm: savedSettings.characterSpeed,\n\t\t\t\t\t\teffectiveWpm: savedSettings.effectiveSpeed\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tonTestPlay: async () => {\n\t\t\t\t\t//! テスト再生: A側とB側の周波数で順番に再生。\n\t\t\t\t\tconst morse = MorseCodec.textToMorse('CQ');\n\t\t\t\t\tawait this.audio.playMorseString(morse);\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 500));\n\t\t\t\t\tawait this.audioB.playMorseString(morse);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t//! モーダルを表示。\n\t\tmodal.show('listening');\n\t}\n\n\t//! ========== レンダリング ==========\n\n\trender(): void {\n\t\tconst app = document.getElementById('app');\n\t\tif (!app) return;\n\n\t\tapp.innerHTML = `\n\t\t\t<div class=\"settings-icon\" id=\"settingsIcon\">\n\t\t\t\t<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\n\t\t\t<div class=\"container\">\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<button id=\"backBtn\" class=\"back-btn\">← 戻る</button>\n\t\t\t\t\t<h1>モールス信号聞き取り練習</h1>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"tabs\">\n\t\t\t\t\t${this.renderCategoryTabs()}\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"content-area\">\n\t\t\t\t\t${this.state.selectedTemplate ? this.renderPracticeContent() : this.renderTemplateList()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.attachEventListeners();\n\t}\n\n\tprivate renderCategoryTabs(): string {\n\t\tconst categories: { id: TemplateCategory | 'custom'; label: string }[] = [\n\t\t\t{ id: 'qso', label: 'ラバースタンプQSO' },\n\t\t\t{ id: 'text100', label: '英文100字' },\n\t\t\t{ id: 'text200', label: '英文200字' },\n\t\t\t{ id: 'text300', label: '英文300字' },\n\t\t\t{ id: 'custom', label: 'ユーザー定義' }\n\t\t];\n\n\t\treturn categories\n\t\t\t.map(\n\t\t\t\tcat => `\n\t\t\t<button class=\"tab-button ${this.state.currentCategory === cat.id ? 'active' : ''}\" data-category=\"${cat.id}\">\n\t\t\t\t${cat.label}\n\t\t\t</button>\n\t\t`\n\t\t\t)\n\t\t\t.join('');\n\t}\n\n\tprivate renderTemplateList(): string {\n\t\tconst templates = this.getTemplates();\n\n\t\tif (templates.length === 0 || (templates.length === 1 && templates[0].id === 'qso-random-generate')) {\n\t\t\treturn `\n\t\t\t\t<div class=\"empty-state\">\n\t\t\t\t\t<p>定型文がありません</p>\n\t\t\t\t\t${this.state.currentCategory === 'custom' ? '<button id=\"addCustomBtn\" class=\"btn btn-primary\">新規作成</button>' : ''}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\treturn `\n\t\t\t<div class=\"template-list\">\n\t\t\t\t${this.state.currentCategory === 'custom' ? '<button id=\"addCustomBtn\" class=\"btn btn-primary\">新規作成</button>' : ''}\n\t\t\t\t${templates\n\t\t\t\t\t.map(template => {\n\t\t\t\t\t\tconst text = this.getTemplateText(template);\n\t\t\t\t\t\tconst preview = template.id === 'qso-random-generate'\n\t\t\t\t\t\t\t? 'コールサイン、地名、名前、RSレポート、リグなどがランダムに生成された完全なQSOが作成されます。毎回異なる内容で練習できます。'\n\t\t\t\t\t\t\t: `${text.substring(0, 100)}${text.length > 100 ? '...' : ''}`;\n\t\t\t\t\t\treturn `\n\t\t\t\t\t<div class=\"template-card\" data-template-id=\"${template.id}\">\n\t\t\t\t\t\t<h3>${template.title}</h3>\n\t\t\t\t\t\t<p class=\"template-preview\">${preview}</p>\n\t\t\t\t\t\t<div class=\"template-actions\">\n\t\t\t\t\t\t\t<button class=\"btn select-btn\" data-template-id=\"${template.id}\">選択</button>\n\t\t\t\t\t\t\t${\n\t\t\t\t\t\t\t\tthis.state.currentCategory === 'custom' && template.id !== 'qso-random-generate'\n\t\t\t\t\t\t\t\t\t? `\n\t\t\t\t\t\t\t\t<button class=\"btn edit-btn\" data-template-id=\"${template.id}\">編集</button>\n\t\t\t\t\t\t\t\t<button class=\"btn delete-btn\" data-template-id=\"${template.id}\">削除</button>\n\t\t\t\t\t\t\t`\n\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t`;\n\t\t\t\t\t})\n\t\t\t\t\t.join('')}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tprivate renderPracticeContent(): string {\n\t\tif (!this.state.selectedTemplate) return '';\n\n\t\treturn `\n\t\t\t<div class=\"practice-area\">\n\t\t\t\t<div class=\"practice-header\">\n\t\t\t\t\t<h2>${this.state.selectedTemplate.title}</h2>\n\t\t\t\t\t<button id=\"backToListBtn\" class=\"btn\">一覧に戻る</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"playback-controls\">\n\t\t\t\t\t<button id=\"playBtn\" class=\"control-btn\" title=\"再生\" ${this.state.isPlaying ? 'disabled' : ''}>\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M8 5v14l11-7z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"pauseBtn\" class=\"control-btn\" title=\"一時停止\" ${!this.state.isPlaying ? 'disabled' : ''}>\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M6 4h4v16H6V4zm8 0h4v16h-4V4z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"stopBtn\" class=\"control-btn\" title=\"停止\">\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<rect x=\"6\" y=\"6\" width=\"12\" height=\"12\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"downloadBtn\" class=\"control-btn\" title=\"WAVファイルとしてダウンロード\">\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t<path d=\"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"practiceInputArea\"></div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tprivate renderPracticeArea(): void {\n\t\tconst practiceInputArea = document.getElementById('practiceInputArea');\n\t\tif (!practiceInputArea) return;\n\n\t\tpracticeInputArea.innerHTML = `\n\t\t\t<div class=\"input-section\">\n\t\t\t\t<label for=\"userInput\">聞き取った内容を入力してください:</label>\n\t\t\t\t<textarea id=\"userInput\" class=\"input-area\" placeholder=\"聞き取った文字を入力...\">${this.state.userInput}</textarea>\n\t\t\t</div>\n\n\t\t\t<div class=\"action-buttons\">\n\t\t\t\t<button id=\"checkBtn\" class=\"btn btn-primary\">採点</button>\n\t\t\t\t<button id=\"showAnswerBtn\" class=\"btn\">${this.state.showAnswer ? '正解を非表示' : '正解を表示'}</button>\n\t\t\t</div>\n\n\t\t\t${this.state.showAnswer ? '<div id=\"answerArea\"></div>' : ''}\n\t\t\t${this.state.showResult ? '<div id=\"resultArea\"></div>' : ''}\n\t\t`;\n\n\t\t//! ユーザー入力の監視。\n\t\tconst userInput = document.getElementById('userInput') as HTMLTextAreaElement;\n\t\tuserInput?.addEventListener('input', () => {\n\t\t\tthis.state.userInput = userInput.value;\n\t\t});\n\n\t\t//! 採点ボタン。\n\t\tdocument.getElementById('checkBtn')?.addEventListener('click', () => {\n\t\t\tthis.checkAnswer();\n\t\t});\n\n\t\t//! 正解表示ボタン。\n\t\tdocument.getElementById('showAnswerBtn')?.addEventListener('click', () => {\n\t\t\tthis.toggleAnswer();\n\t\t});\n\n\t\t//! 正解と結果を描画。\n\t\tif (this.state.showAnswer) {\n\t\t\tthis.renderAnswer();\n\t\t}\n\t\tif (this.state.showResult) {\n\t\t\tthis.renderResult();\n\t\t}\n\t}\n\n\tprivate renderAnswer(): void {\n\t\tconst answerArea = document.getElementById('answerArea');\n\t\tif (!answerArea || !this.state.selectedTemplate) return;\n\n\t\tconst isQSO = this.state.selectedTemplate.category === 'qso';\n\t\tconst content = this.getTemplateText(this.state.selectedTemplate);\n\n\t\t//! 対話形式ボタン（QSOの場合のみ表示）。\n\t\tconst dialogButton = isQSO\n\t\t\t? `<button id=\"toggleDialogBtn\" class=\"btn\" style=\"margin-left: 10px;\">${this.state.showDialogFormat ? '通常表示' : '対話形式で表示'}</button>`\n\t\t\t: '';\n\n\t\t//! 対話形式表示の生成。\n\t\tlet answerContent = '';\n\t\tif (isQSO && this.state.showDialogFormat) {\n\t\t\t//! BTで区切って話者別に表示。\n\t\t\tconst segments = content.split(/\\s+BT\\s+/);\n\t\t\tanswerContent = `\n\t\t\t\t<table class=\"dialog-table\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t${segments.map((segment, index) => {\n\t\t\t\t\t\t\tconst speaker = index % 2 === 0 ? 'A' : 'B';\n\t\t\t\t\t\t\treturn `\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td class=\"speaker-cell\">${speaker}</td>\n\t\t\t\t\t\t\t\t\t<td class=\"content-cell\">${segment.trim()}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t`;\n\t\t\t\t\t\t}).join('')}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t`;\n\t\t} else {\n\t\t\tanswerContent = `<div class=\"answer-text\">${content}</div>`;\n\t\t}\n\n\t\tanswerArea.innerHTML = `\n\t\t\t<div class=\"answer-area\">\n\t\t\t\t<h3 style=\"display: inline-block;\">正解</h3>\n\t\t\t\t${dialogButton}\n\t\t\t\t${answerContent}\n\t\t\t</div>\n\t\t`;\n\n\t\t//! 対話形式ボタン。\n\t\tdocument.getElementById('toggleDialogBtn')?.addEventListener('click', () => {\n\t\t\tthis.toggleDialogFormat();\n\t\t});\n\t}\n\n\tprivate renderResult(): void {\n\t\tconst resultArea = document.getElementById('resultArea');\n\t\tif (!resultArea || !this.state.selectedTemplate) return;\n\n\t\tconst correctText = this.getTemplateText(this.state.selectedTemplate);\n\t\tconst accuracy = ListeningTrainer.calculateAccuracy(\n\t\t\tcorrectText,\n\t\t\tthis.state.userInput\n\t\t);\n\n\t\tresultArea.innerHTML = `\n\t\t\t<div class=\"result-area\">\n\t\t\t\t<h3>結果</h3>\n\t\t\t\t<div class=\"accuracy\">正答率: ${accuracy}%</div>\n\t\t\t\t<div class=\"comparison\">\n\t\t\t\t\t<div class=\"comparison-row\">\n\t\t\t\t\t\t<strong>正解:</strong>\n\t\t\t\t\t\t<div class=\"comparison-text\">${correctText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"comparison-row\">\n\t\t\t\t\t\t<strong>入力:</strong>\n\t\t\t\t\t\t<div class=\"comparison-text\">${this.state.userInput || '（未入力）'}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\t//! ========== イベントリスナー ==========\n\n\tprivate attachEventListeners(): void {\n\t\t//! 戻るボタン。\n\t\tdocument.getElementById('backBtn')?.addEventListener('click', () => {\n\t\t\twindow.location.hash = '#menu';\n\t\t});\n\n\t\t//! 設定アイコン。\n\t\tdocument.getElementById('settingsIcon')?.addEventListener('click', () => {\n\t\t\tthis.showSettings();\n\t\t});\n\n\t\t//! カテゴリータブ。\n\t\tdocument.querySelectorAll('.tab-button').forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst category = btn.getAttribute('data-category') as TemplateCategory | 'custom';\n\t\t\t\tif (category) {\n\t\t\t\t\tthis.state.currentCategory = category;\n\t\t\t\t\tthis.state.selectedTemplate = null;\n\t\t\t\t\tthis.state.showResult = false;\n\t\t\t\t\tthis.state.showAnswer = false;\n\t\t\t\t\tthis.state.showDialogFormat = false;\n\t\t\t\t\tthis.state.userInput = '';\n\t\t\t\t\tthis.saveCategory();\n\t\t\t\t\tthis.render();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! 定型文選択ボタン。\n\t\tdocument.querySelectorAll('.select-btn').forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst id = btn.getAttribute('data-template-id');\n\t\t\t\tif (id) {\n\t\t\t\t\t//! ランダムQSO生成ボタンの場合。\n\t\t\t\t\tif (id === 'qso-random-generate') {\n\t\t\t\t\t\tthis.state.selectedTemplate = ListeningTrainer.generateRandomQSO();\n\t\t\t\t\t\tthis.state.showResult = false;\n\t\t\t\t\t\tthis.state.showAnswer = false;\n\t\t\t\t\t\tthis.state.showDialogFormat = false;\n\t\t\t\t\t\tthis.state.userInput = '';\n\t\t\t\t\t\tthis.render();\n\t\t\t\t\t\tthis.renderPracticeArea();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//! 通常のテンプレート選択。\n\t\t\t\t\t\tconst allTemplates = [...ListeningTrainer.getBuiltinTemplates(), ...this.customTemplates];\n\t\t\t\t\t\tconst template = allTemplates.find(t => t.id === id);\n\t\t\t\t\t\tif (template) {\n\t\t\t\t\t\t\tthis.state.selectedTemplate = template;\n\t\t\t\t\t\t\tthis.state.showResult = false;\n\t\t\t\t\t\t\tthis.state.showAnswer = false;\n\t\t\t\t\t\t\tthis.state.showDialogFormat = false;\n\t\t\t\t\t\t\tthis.state.userInput = '';\n\t\t\t\t\t\t\tthis.render();\n\t\t\t\t\t\t\tthis.renderPracticeArea();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! 一覧に戻るボタン。\n\t\tdocument.getElementById('backToListBtn')?.addEventListener('click', () => {\n\t\t\tthis.state.selectedTemplate = null;\n\t\t\tthis.state.showResult = false;\n\t\t\tthis.state.showAnswer = false;\n\t\t\tthis.state.showDialogFormat = false;\n\t\t\tthis.state.userInput = '';\n\t\t\tthis.audio.stopPlaying();\n\t\t\tthis.render();\n\t\t});\n\n\t\t//! ユーザー定義定型文の新規作成ボタン。\n\t\tdocument.getElementById('addCustomBtn')?.addEventListener('click', () => {\n\t\t\tthis.showCustomTemplateDialog();\n\t\t});\n\n\t\t//! ユーザー定義定型文の編集ボタン。\n\t\tdocument.querySelectorAll('.edit-btn').forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst id = btn.getAttribute('data-template-id');\n\t\t\t\tif (id) {\n\t\t\t\t\tconst template = this.customTemplates.find(t => t.id === id);\n\t\t\t\t\tif (template) {\n\t\t\t\t\t\tthis.showCustomTemplateDialog(template);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! ユーザー定義定型文の削除ボタン。\n\t\tdocument.querySelectorAll('.delete-btn').forEach(btn => {\n\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\tconst id = btn.getAttribute('data-template-id');\n\t\t\t\tif (id) {\n\t\t\t\t\tthis.deleteCustomTemplate(id);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//! 再生コントロール（練習画面のみ）。\n\t\tif (this.state.selectedTemplate) {\n\t\t\tdocument.getElementById('playBtn')?.addEventListener('click', () => {\n\t\t\t\tthis.playMorse();\n\t\t\t});\n\n\t\t\tdocument.getElementById('pauseBtn')?.addEventListener('click', () => {\n\t\t\t\tthis.pauseMorse();\n\t\t\t});\n\n\t\t\tdocument.getElementById('stopBtn')?.addEventListener('click', () => {\n\t\t\t\tthis.stopMorse();\n\t\t\t});\n\n\t\t\tdocument.getElementById('downloadBtn')?.addEventListener('click', () => {\n\t\t\t\tthis.downloadWav();\n\t\t\t});\n\n\t\t\tthis.renderPracticeArea();\n\t\t}\n\t}\n\n\t/**\n\t * モールス信号をWAVファイルとしてダウンロードする\n\t */\n\tprivate async downloadWav(): Promise<void> {\n\t\tif (!this.state.selectedTemplate) return;\n\n\t\ttry {\n\t\t\t//! テキストをモールス符号に変換。\n\t\t\tconst text = this.getTemplateText(this.state.selectedTemplate);\n\t\t\tconst morse = MorseCodec.textToMorse(text);\n\n\t\t\t//! WAVファイルを生成。\n\t\t\tconst wavBlob = await this.audio.generateWav(morse);\n\n\t\t\t//! ダウンロード。\n\t\t\tconst filename = `${sanitizeFilename(this.state.selectedTemplate.title)}.wav`;\n\t\t\tdownloadBlob(wavBlob, filename);\n\t\t} catch (error) {\n\t\t\tconsole.error('WAVダウンロードエラー:', error);\n\t\t\talert('WAVファイルの生成に失敗しました。');\n\t\t}\n\t}\n\n\tdestroy(): void {\n\t\t//! AudioGeneratorを停止。\n\t\tthis.audio.stopPlaying();\n\t}\n}\n","/**\n * ダウンロードヘルパー関数\n * Blobをファイルとしてダウンロードさせるユーティリティ\n */\n\n/**\n * Blobをファイルとしてダウンロードする\n *\n * @param blob - ダウンロードするBlob\n * @param filename - ファイル名\n */\nexport function downloadBlob(blob: Blob, filename: string): void {\n\tconst url = URL.createObjectURL(blob);\n\tconst a = document.createElement('a');\n\ta.href = url;\n\ta.download = filename;\n\tdocument.body.appendChild(a);\n\ta.click();\n\tdocument.body.removeChild(a);\n\tURL.revokeObjectURL(url);\n}\n\n/**\n * ファイル名をサニタイズする（安全なファイル名に変換）\n *\n * @param filename - 元のファイル名\n * @returns サニタイズされたファイル名\n */\nexport function sanitizeFilename(filename: string): string {\n\treturn filename.replace(/[^a-zA-Z0-9_-]/g, '_');\n}\n","/**\n * ルーター\n * ハッシュベースのSPAルーティング\n */\n\nimport { MenuView } from '../ui/views/MenuView';\nimport { VerticalKeyView } from '../ui/views/VerticalKeyView';\nimport { HorizontalKeyView } from '../ui/views/HorizontalKeyView';\nimport { FlashcardView } from '../ui/views/FlashcardView';\nimport { KochView } from '../ui/views/KochView';\nimport { ListeningView } from '../ui/views/ListeningView';\n\n/**\n * ビューインターフェース\n */\nexport interface View {\n\t/**\n\t * ビューをレンダリングする\n\t */\n\trender(): void | Promise<void>;\n\n\t/**\n\t * ビューを破棄する\n\t */\n\tdestroy(): void;\n}\n\n/**\n * ルート定義\n */\ntype Route = {\n\tpath: string;\n\tview: new () => View;\n};\n\n/**\n * ルータークラス\n */\nexport class Router {\n\tprivate currentView: View | null = null;\n\tprivate routes: Route[] = [];\n\n\tconstructor() {\n\t\t//! ルート定義。\n\t\tthis.routes = [\n\t\t\t{ path: '', view: MenuView },\n\t\t\t{ path: 'menu', view: MenuView },\n\t\t\t{ path: 'vertical', view: VerticalKeyView },\n\t\t\t{ path: 'horizontal', view: HorizontalKeyView },\n\t\t\t{ path: 'flashcard', view: FlashcardView },\n\t\t\t{ path: 'koch', view: KochView },\n\t\t\t{ path: 'listening', view: ListeningView },\n\t\t];\n\t}\n\n\t/**\n\t * ルーターを初期化する\n\t */\n\tinit(): void {\n\t\t//! ハッシュ変更時のリスナーを登録。\n\t\twindow.addEventListener('hashchange', () => this.handleRoute());\n\n\t\t//! 初回ルーティング。\n\t\tthis.handleRoute();\n\t}\n\n\t/**\n\t * 現在のハッシュに基づいてルーティングする\n\t */\n\tprivate handleRoute(): void {\n\t\t//! 現在のビューを破棄。\n\t\tif (this.currentView) {\n\t\t\tthis.currentView.destroy();\n\t\t\tthis.currentView = null;\n\t\t}\n\n\t\t//! ハッシュからパスを取得（#を除去）。\n\t\tconst hash = window.location.hash.slice(1);\n\t\tconst route = this.routes.find(r => r.path === hash);\n\n\t\tif (route) {\n\t\t\t//! ビューを作成してレンダリング。\n\t\t\tthis.currentView = new route.view();\n\t\t\tthis.currentView.render();\n\t\t} else {\n\t\t\t//! 該当するルートがない場合はメニューに遷移。\n\t\t\twindow.location.hash = '#menu';\n\t\t}\n\t}\n\n\t/**\n\t * 指定したパスに遷移する\n\t */\n\tnavigate(path: string): void {\n\t\twindow.location.hash = `#${path}`;\n\t}\n}\n","/**\n * アプリケーションエントリポイント\n */\n\nimport { Router } from './router';\nimport { initI18n } from './i18n';\nimport './assets/styles.css';\n\n//! アプリケーション起動時の処理。\nfunction init(): void {\n\t//! i18nシステムを初期化。\n\tinitI18n();\n\n\t//! 開発環境でのみログを出力。\n\tif (import.meta.env.DEV) {\n\t\tconsole.log('モールス練習アプリ v12 起動');\n\t}\n\n\t//! ルーターを初期化。\n\tconst router = new Router();\n\trouter.init();\n}\n\n//! DOMContentLoaded後に初期化。\nif (document.readyState === 'loading') {\n\tdocument.addEventListener('DOMContentLoaded', init);\n} else {\n\tinit();\n}\n"],"names":["SUPPORTED_LANGUAGES","STORAGE_KEY","translations","ja","en","currentLanguage","languageChangeCallbacks","loadSavedLanguage","saved","localStorage","getItem","includes","e","browserLang","navigator","language","toLowerCase","langPrefix","split","detectBrowserLanguage","setLanguage","setItem","saveLanguage","forEach","callback","t","key","params","keys","value","k","getLanguageName","LanguageSwitcher","isOpen","boundCloseDropdown","render","currentLang","map","lang","join","attachEventListeners","container","button","querySelector","dropdown","addEventListener","stopPropagation","this","toggleDropdown","querySelectorAll","option","dataset","selectLanguage","target","contains","closeDropdown","window","location","reload","push","classList","add","setTimeout","document","remove","removeEventListener","destroy","MenuView","languageSwitcher","getMenuItems","id","title","description","route","app","getElementById","menuItems","innerHTML","item","renderMenuItem","languageSwitcherContainer","getAttribute","hash","VerticalKeyView","trainer","buffer","timer","audio","isKeyPressed","keyPressHandler","keyReleaseHandler","updateIntervalId","currentWPM","keyCode","latestEvaluation","overallStats","dotStats","dashStats","constructor","savedWPM","parseInt","savedKeyCode","MorseBuffer","TimerManager","AudioGenerator","frequency","volume","wpm","timings","TimingCalculator","calculate","VerticalKeyTrainer","onKeyPress","startContinuousTone","onKeyRelease","stopContinuousTone","onTimingEvaluated","evaluation","updateTimingStatistics","startUpdate","backBtn","openSettingsModal","clearBtn","clear","updateDisplay","code","repeat","preventDefault","handleKeyDown","handleKeyUp","keyButton","keyPress","updateKeyStatus","keyRelease","setInterval","morseBuffer","decodedText","charCount","getBuffer","sequence","getSequence","fullDisplay","textContent","text","getDecoded","length","toString","updateTimingDisplay","getTimingStatistics","elementStats","getStatisticsByElement","dot","dash","latestContent","eval_","element","record","accuracy","toFixed","accuracyClass","getAccuracyClass","dotDuration","maxDuration","expected","expectedDuration","actual","actualDuration","expectedPercent","actualPercent","diff","diffClass","diffText","Math","round","overallContent","count","stats","averageAccuracy","standardDeviation","maxAccuracy","minAccuracy","dotContent","averageAbsoluteError","dashContent","isPressed","keyStatus","valueSpan","currentValues","getVolume","getFrequency","savedSettings","SettingsModal","ALL_SETTING_ITEMS","onSave","values","setVolume","setFrequency","setWPM","currentWpmDisplay","onCancel","show","clearInterval","HorizontalKeyView","leftPressed","rightPressed","iambicMode","paddleLayout","leftKeyCode","rightKeyCode","savedIambicMode","savedPaddleLayout","savedLeftKeyCode","savedRightKeyCode","initializeTrainer","HorizontalKeyTrainer","onElementStart","_element","duration","scheduleTone","onSpacingEvaluated","handleLeftPaddlePress","handleRightPaddlePress","handleLeftPaddleRelease","handleRightPaddleRelease","leftPaddle","rightPaddle","leftPaddlePress","leftPaddleRelease","rightPaddlePress","rightPaddleRelease","updatePaddleLabels","className","getSpacingStatistics","spacingStats","getStatisticsBySpacingType","avgAccuracyEl","avgErrorEl","countEl","charExpectedEl","charAccuracyEl","charErrorEl","charCountEl","charGap","character","wordExpectedEl","wordAccuracyEl","wordErrorEl","wordCountEl","wordGap","word","updateTimingDiagram","wordData","getLastWordTimingData","html","generateTimingDiagramHTML","timingChart","generateTimingChart","decodedChar","morseCode","paddleInputs","sortedPaddleInputs","sort","a","b","timestamp","allTimestamps","elements","startTime","endTime","squeezeIntervals","flatMap","s","min","totalTime","max","ditInputLine","generatePaddleSignalLine","dahInputLine","outputLine","generateOutputSignalLine","squeezeHighlights","interval","paddleGaps","leftDown","rightDown","gapStartTime","event","prevBothReleased","paddle","state","currentBothReleased","gap","generateTimeAxis","generateDebugInfo","label","events","filter","isHigh","segments","lastTime","start","end","high","seg","offsetPercent","widthPercent","lastEnd","segmentsHTML","elementClass","step","eventLines","relativeTime","paddleLabel","stateLabel","squeezeLines","startRelative","endRelative","gapLines","currentIambicModeDisplay","async","loadFlashcardData","url","response","fetch","ok","Error","statusText","lines","line","trim","slice","index","columns","tags","abbreviation","english","japanese","example","entry","parseTSV","FlashcardView","allEntries","filteredEntries","currentState","selectedTags","Set","selectedFrequencies","searchQuery","displayMode","sortColumn","sortDirection","learnQuestionType","learnCards","currentLearnIndex","isFlipped","reviewMode","progress","known","unknown","questionType","questionCount","questions","currentQuestionIndex","results","currentlyPlaying","FlashcardState","loadProgress","filters","loadFilters","viewState","loadViewState","examQuestionType","saveProgress","clearProgress","saveFilters","updateFilteredEntries","viewMode","error","renderBrowseMode","renderLearnMode","renderExamMode","renderExamResultMode","renderFilterSection","allTags","FlashcardTrainer","getAllTags","tag","has","freq","renderEntries","attachBrowseModeListeners","renderCardView","renderListView","formatAbbreviation","card","abbr","playMorse","toggleBtn","saveDisplayMode","getSortIndicator","header","column","toggleSort","btn","renderLearnSetup","renderLearnCard","cardCount","size","attachCommonListeners","attachLearnSetupListeners","tagFilter","type","checked","delete","frequencyFilter","searchInput","reviewModeBtn","saveLearnQuestionType","startLearnBtn","startLearn","clearProgressBtn","confirm","cards","random","alert","currentNum","totalNum","frontContent","backContent","isKnown","judgmentButtons","attachLearnCardListeners","backToSetupBtn","flipCardBtn","body","playMorseBtn","markUnknownBtn","moveToNextCard","markKnownBtn","prevCardBtn","nextCardBtn","renderExamSetup","renderExamQuestion","attachExamSetupListeners","question","total","questionText","choices","choice","attachExamQuestionListeners","score","calculateScore","isPassed","percentage","wrongAnswers","getWrongAnswers","correct","r","isCorrect","result","userAnswer","correctAnswer","attachResultListeners","updateFilteredCount","saveExamQuestionType","startExamBtn","startExam","replayBtn","currentTarget","handleAnswer","retryBtn","tab","saveViewMode","filteredCountElem","questionCountInput","entries","filterByTags","filterByFrequencies","filterByQuery","sortEntries","ascending","sortByAbbreviation","sortByEnglish","sortByJapanese","sortByFrequency","sortByTags","saveSortState","prosignMatch","match","morseSequence","MorseCodec","textToMorse","char","Promise","resolve","actualCount","generateExamQuestions","checkAnswer","getWPM","onTestPlay","DEFAULT_SETTINGS","characterSpeed","effectiveSpeed","practiceDuration","groupSize","showInput","KochView","settings","currentLesson","isPlaying","userInput","groups","currentGroupIndex","customState","selectedChars","isCustomRunning","customUserInput","customCorrectAnswer","customGroups","customCurrentGroupIndex","customIsPlaying","loadSettings","loadViewMode","loadSelectedChars","effectiveWpm","JSON","parse","saveSettings","stringify","chars","saveSelectedChars","Array","from","startLesson","KochTrainer","getCharsForLesson","practiceSettings","generateRandomGroups","updateSettings","renderPractice","updateProgress","updatePlaybackButtons","i","group","morse","playMorseString","showResult","pauseMorse","stopPlaying","stopLesson","calculateAccuracy","passed","resultContainer","progressEl","progressBar","percent","style","width","playBtn","pauseBtn","disabled","startCustom","renderCustomPractice","playCustomMorse","updateCustomProgress","updateCustomPlaybackButtons","pauseCustomMorse","stopCustom","showCustomResult","replace","showSettings","effSpeed","charSpeed","renderModeContent","renderLearningMode","renderCustomMode","lessonList","KOCH_SEQUENCE","_","lessonNum","lessonChars","practiceContainer","renderKeyboard","inputEl","toUpperCase","setupKeyboardEvents","setupCustomControls","availableChars","groupIndex","isLearned","setupModeEventListeners","scrollTo","top","behavior","bFrequency","ListeningView","audioB","currentCategory","selectedTemplate","showAnswer","showDialogFormat","customTemplates","loadCategory","loadCustomTemplates","saveCategory","saveCustomTemplates","getTemplates","category","content","builtin","ListeningTrainer","getBuiltinTemplates","dialog","playDialogQSO","getTemplateText","template","segment","generator","side","stopMorse","renderPracticeArea","toggleAnswer","toggleDialogFormat","renderAnswer","showCustomTemplateDialog","isEdit","modal","createElement","appendChild","titleInput","contentInput","newTemplate","Date","now","deleteCustomTemplate","renderCategoryTabs","renderPracticeContent","renderTemplateList","cat","templates","preview","substring","practiceInputArea","renderResult","answerArea","isQSO","dialogButton","answerContent","resultArea","correctText","generateRandomQSO","find","downloadWav","wavBlob","generateWav","blob","filename","URL","createObjectURL","href","download","click","removeChild","revokeObjectURL","downloadBlob","sanitizeFilename","Router","currentView","routes","path","view","init","handleRoute","navigate","readyState"],"mappings":"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"}